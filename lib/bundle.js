/******/ (function(modules) { // webpackBootstrap
/******/ 	var parentHotUpdateCallback = this["webpackHotUpdate"];
/******/ 	this["webpackHotUpdate"] = 
/******/ 	function webpackHotUpdateCallback(chunkId, moreModules) { // eslint-disable-line no-unused-vars
/******/ 		hotAddUpdateChunk(chunkId, moreModules);
/******/ 		if(parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);
/******/ 	}
/******/ 	
/******/ 	function hotDownloadUpdateChunk(chunkId) { // eslint-disable-line no-unused-vars
/******/ 		var head = document.getElementsByTagName("head")[0];
/******/ 		var script = document.createElement("script");
/******/ 		script.type = "text/javascript";
/******/ 		script.charset = "utf-8";
/******/ 		script.src = __webpack_require__.p + "" + chunkId + "." + hotCurrentHash + ".hot-update.js";
/******/ 		head.appendChild(script);
/******/ 	}
/******/ 	
/******/ 	function hotDownloadManifest(callback) { // eslint-disable-line no-unused-vars
/******/ 		if(typeof XMLHttpRequest === "undefined")
/******/ 			return callback(new Error("No browser support"));
/******/ 		try {
/******/ 			var request = new XMLHttpRequest();
/******/ 			var requestPath = __webpack_require__.p + "" + hotCurrentHash + ".hot-update.json";
/******/ 			request.open("GET", requestPath, true);
/******/ 			request.timeout = 10000;
/******/ 			request.send(null);
/******/ 		} catch(err) {
/******/ 			return callback(err);
/******/ 		}
/******/ 		request.onreadystatechange = function() {
/******/ 			if(request.readyState !== 4) return;
/******/ 			if(request.status === 0) {
/******/ 				// timeout
/******/ 				callback(new Error("Manifest request to " + requestPath + " timed out."));
/******/ 			} else if(request.status === 404) {
/******/ 				// no update available
/******/ 				callback();
/******/ 			} else if(request.status !== 200 && request.status !== 304) {
/******/ 				// other failure
/******/ 				callback(new Error("Manifest request to " + requestPath + " failed."));
/******/ 			} else {
/******/ 				// success
/******/ 				try {
/******/ 					var update = JSON.parse(request.responseText);
/******/ 				} catch(e) {
/******/ 					callback(e);
/******/ 					return;
/******/ 				}
/******/ 				callback(null, update);
/******/ 			}
/******/ 		};
/******/ 	}

/******/ 	
/******/ 	
/******/ 	var hotApplyOnUpdate = true;
/******/ 	var hotCurrentHash = "85959474c937ca3c75fd"; // eslint-disable-line no-unused-vars
/******/ 	var hotCurrentModuleData = {};
/******/ 	var hotCurrentParents = []; // eslint-disable-line no-unused-vars
/******/ 	
/******/ 	function hotCreateRequire(moduleId) { // eslint-disable-line no-unused-vars
/******/ 		var me = installedModules[moduleId];
/******/ 		if(!me) return __webpack_require__;
/******/ 		var fn = function(request) {
/******/ 			if(me.hot.active) {
/******/ 				if(installedModules[request]) {
/******/ 					if(installedModules[request].parents.indexOf(moduleId) < 0)
/******/ 						installedModules[request].parents.push(moduleId);
/******/ 					if(me.children.indexOf(request) < 0)
/******/ 						me.children.push(request);
/******/ 				} else hotCurrentParents = [moduleId];
/******/ 			} else {
/******/ 				console.warn("[HMR] unexpected require(" + request + ") from disposed module " + moduleId);
/******/ 				hotCurrentParents = [];
/******/ 			}
/******/ 			return __webpack_require__(request);
/******/ 		};
/******/ 		for(var name in __webpack_require__) {
/******/ 			if(Object.prototype.hasOwnProperty.call(__webpack_require__, name)) {
/******/ 				fn[name] = __webpack_require__[name];
/******/ 			}
/******/ 		}
/******/ 		fn.e = function(chunkId, callback) {
/******/ 			if(hotStatus === "ready")
/******/ 				hotSetStatus("prepare");
/******/ 			hotChunksLoading++;
/******/ 			__webpack_require__.e(chunkId, function() {
/******/ 				try {
/******/ 					callback.call(null, fn);
/******/ 				} finally {
/******/ 					finishChunkLoading();
/******/ 				}
/******/ 	
/******/ 				function finishChunkLoading() {
/******/ 					hotChunksLoading--;
/******/ 					if(hotStatus === "prepare") {
/******/ 						if(!hotWaitingFilesMap[chunkId]) {
/******/ 							hotEnsureUpdateChunk(chunkId);
/******/ 						}
/******/ 						if(hotChunksLoading === 0 && hotWaitingFiles === 0) {
/******/ 							hotUpdateDownloaded();
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 			});
/******/ 		};
/******/ 		return fn;
/******/ 	}
/******/ 	
/******/ 	function hotCreateModule(moduleId) { // eslint-disable-line no-unused-vars
/******/ 		var hot = {
/******/ 			// private stuff
/******/ 			_acceptedDependencies: {},
/******/ 			_declinedDependencies: {},
/******/ 			_selfAccepted: false,
/******/ 			_selfDeclined: false,
/******/ 			_disposeHandlers: [],
/******/ 	
/******/ 			// Module API
/******/ 			active: true,
/******/ 			accept: function(dep, callback) {
/******/ 				if(typeof dep === "undefined")
/******/ 					hot._selfAccepted = true;
/******/ 				else if(typeof dep === "function")
/******/ 					hot._selfAccepted = dep;
/******/ 				else if(typeof dep === "object")
/******/ 					for(var i = 0; i < dep.length; i++)
/******/ 						hot._acceptedDependencies[dep[i]] = callback;
/******/ 				else
/******/ 					hot._acceptedDependencies[dep] = callback;
/******/ 			},
/******/ 			decline: function(dep) {
/******/ 				if(typeof dep === "undefined")
/******/ 					hot._selfDeclined = true;
/******/ 				else if(typeof dep === "number")
/******/ 					hot._declinedDependencies[dep] = true;
/******/ 				else
/******/ 					for(var i = 0; i < dep.length; i++)
/******/ 						hot._declinedDependencies[dep[i]] = true;
/******/ 			},
/******/ 			dispose: function(callback) {
/******/ 				hot._disposeHandlers.push(callback);
/******/ 			},
/******/ 			addDisposeHandler: function(callback) {
/******/ 				hot._disposeHandlers.push(callback);
/******/ 			},
/******/ 			removeDisposeHandler: function(callback) {
/******/ 				var idx = hot._disposeHandlers.indexOf(callback);
/******/ 				if(idx >= 0) hot._disposeHandlers.splice(idx, 1);
/******/ 			},
/******/ 	
/******/ 			// Management API
/******/ 			check: hotCheck,
/******/ 			apply: hotApply,
/******/ 			status: function(l) {
/******/ 				if(!l) return hotStatus;
/******/ 				hotStatusHandlers.push(l);
/******/ 			},
/******/ 			addStatusHandler: function(l) {
/******/ 				hotStatusHandlers.push(l);
/******/ 			},
/******/ 			removeStatusHandler: function(l) {
/******/ 				var idx = hotStatusHandlers.indexOf(l);
/******/ 				if(idx >= 0) hotStatusHandlers.splice(idx, 1);
/******/ 			},
/******/ 	
/******/ 			//inherit from previous dispose call
/******/ 			data: hotCurrentModuleData[moduleId]
/******/ 		};
/******/ 		return hot;
/******/ 	}
/******/ 	
/******/ 	var hotStatusHandlers = [];
/******/ 	var hotStatus = "idle";
/******/ 	
/******/ 	function hotSetStatus(newStatus) {
/******/ 		hotStatus = newStatus;
/******/ 		for(var i = 0; i < hotStatusHandlers.length; i++)
/******/ 			hotStatusHandlers[i].call(null, newStatus);
/******/ 	}
/******/ 	
/******/ 	// while downloading
/******/ 	var hotWaitingFiles = 0;
/******/ 	var hotChunksLoading = 0;
/******/ 	var hotWaitingFilesMap = {};
/******/ 	var hotRequestedFilesMap = {};
/******/ 	var hotAvailibleFilesMap = {};
/******/ 	var hotCallback;
/******/ 	
/******/ 	// The update info
/******/ 	var hotUpdate, hotUpdateNewHash;
/******/ 	
/******/ 	function toModuleId(id) {
/******/ 		var isNumber = (+id) + "" === id;
/******/ 		return isNumber ? +id : id;
/******/ 	}
/******/ 	
/******/ 	function hotCheck(apply, callback) {
/******/ 		if(hotStatus !== "idle") throw new Error("check() is only allowed in idle status");
/******/ 		if(typeof apply === "function") {
/******/ 			hotApplyOnUpdate = false;
/******/ 			callback = apply;
/******/ 		} else {
/******/ 			hotApplyOnUpdate = apply;
/******/ 			callback = callback || function(err) {
/******/ 				if(err) throw err;
/******/ 			};
/******/ 		}
/******/ 		hotSetStatus("check");
/******/ 		hotDownloadManifest(function(err, update) {
/******/ 			if(err) return callback(err);
/******/ 			if(!update) {
/******/ 				hotSetStatus("idle");
/******/ 				callback(null, null);
/******/ 				return;
/******/ 			}
/******/ 	
/******/ 			hotRequestedFilesMap = {};
/******/ 			hotAvailibleFilesMap = {};
/******/ 			hotWaitingFilesMap = {};
/******/ 			for(var i = 0; i < update.c.length; i++)
/******/ 				hotAvailibleFilesMap[update.c[i]] = true;
/******/ 			hotUpdateNewHash = update.h;
/******/ 	
/******/ 			hotSetStatus("prepare");
/******/ 			hotCallback = callback;
/******/ 			hotUpdate = {};
/******/ 			var chunkId = 0;
/******/ 			{ // eslint-disable-line no-lone-blocks
/******/ 				/*globals chunkId */
/******/ 				hotEnsureUpdateChunk(chunkId);
/******/ 			}
/******/ 			if(hotStatus === "prepare" && hotChunksLoading === 0 && hotWaitingFiles === 0) {
/******/ 				hotUpdateDownloaded();
/******/ 			}
/******/ 		});
/******/ 	}
/******/ 	
/******/ 	function hotAddUpdateChunk(chunkId, moreModules) { // eslint-disable-line no-unused-vars
/******/ 		if(!hotAvailibleFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])
/******/ 			return;
/******/ 		hotRequestedFilesMap[chunkId] = false;
/******/ 		for(var moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				hotUpdate[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(--hotWaitingFiles === 0 && hotChunksLoading === 0) {
/******/ 			hotUpdateDownloaded();
/******/ 		}
/******/ 	}
/******/ 	
/******/ 	function hotEnsureUpdateChunk(chunkId) {
/******/ 		if(!hotAvailibleFilesMap[chunkId]) {
/******/ 			hotWaitingFilesMap[chunkId] = true;
/******/ 		} else {
/******/ 			hotRequestedFilesMap[chunkId] = true;
/******/ 			hotWaitingFiles++;
/******/ 			hotDownloadUpdateChunk(chunkId);
/******/ 		}
/******/ 	}
/******/ 	
/******/ 	function hotUpdateDownloaded() {
/******/ 		hotSetStatus("ready");
/******/ 		var callback = hotCallback;
/******/ 		hotCallback = null;
/******/ 		if(!callback) return;
/******/ 		if(hotApplyOnUpdate) {
/******/ 			hotApply(hotApplyOnUpdate, callback);
/******/ 		} else {
/******/ 			var outdatedModules = [];
/******/ 			for(var id in hotUpdate) {
/******/ 				if(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
/******/ 					outdatedModules.push(toModuleId(id));
/******/ 				}
/******/ 			}
/******/ 			callback(null, outdatedModules);
/******/ 		}
/******/ 	}
/******/ 	
/******/ 	function hotApply(options, callback) {
/******/ 		if(hotStatus !== "ready") throw new Error("apply() is only allowed in ready status");
/******/ 		if(typeof options === "function") {
/******/ 			callback = options;
/******/ 			options = {};
/******/ 		} else if(options && typeof options === "object") {
/******/ 			callback = callback || function(err) {
/******/ 				if(err) throw err;
/******/ 			};
/******/ 		} else {
/******/ 			options = {};
/******/ 			callback = callback || function(err) {
/******/ 				if(err) throw err;
/******/ 			};
/******/ 		}
/******/ 	
/******/ 		function getAffectedStuff(module) {
/******/ 			var outdatedModules = [module];
/******/ 			var outdatedDependencies = {};
/******/ 	
/******/ 			var queue = outdatedModules.slice();
/******/ 			while(queue.length > 0) {
/******/ 				var moduleId = queue.pop();
/******/ 				var module = installedModules[moduleId];
/******/ 				if(!module || module.hot._selfAccepted)
/******/ 					continue;
/******/ 				if(module.hot._selfDeclined) {
/******/ 					return new Error("Aborted because of self decline: " + moduleId);
/******/ 				}
/******/ 				if(moduleId === 0) {
/******/ 					return;
/******/ 				}
/******/ 				for(var i = 0; i < module.parents.length; i++) {
/******/ 					var parentId = module.parents[i];
/******/ 					var parent = installedModules[parentId];
/******/ 					if(parent.hot._declinedDependencies[moduleId]) {
/******/ 						return new Error("Aborted because of declined dependency: " + moduleId + " in " + parentId);
/******/ 					}
/******/ 					if(outdatedModules.indexOf(parentId) >= 0) continue;
/******/ 					if(parent.hot._acceptedDependencies[moduleId]) {
/******/ 						if(!outdatedDependencies[parentId])
/******/ 							outdatedDependencies[parentId] = [];
/******/ 						addAllToSet(outdatedDependencies[parentId], [moduleId]);
/******/ 						continue;
/******/ 					}
/******/ 					delete outdatedDependencies[parentId];
/******/ 					outdatedModules.push(parentId);
/******/ 					queue.push(parentId);
/******/ 				}
/******/ 			}
/******/ 	
/******/ 			return [outdatedModules, outdatedDependencies];
/******/ 		}
/******/ 	
/******/ 		function addAllToSet(a, b) {
/******/ 			for(var i = 0; i < b.length; i++) {
/******/ 				var item = b[i];
/******/ 				if(a.indexOf(item) < 0)
/******/ 					a.push(item);
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// at begin all updates modules are outdated
/******/ 		// the "outdated" status can propagate to parents if they don't accept the children
/******/ 		var outdatedDependencies = {};
/******/ 		var outdatedModules = [];
/******/ 		var appliedUpdate = {};
/******/ 		for(var id in hotUpdate) {
/******/ 			if(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
/******/ 				var moduleId = toModuleId(id);
/******/ 				var result = getAffectedStuff(moduleId);
/******/ 				if(!result) {
/******/ 					if(options.ignoreUnaccepted)
/******/ 						continue;
/******/ 					hotSetStatus("abort");
/******/ 					return callback(new Error("Aborted because " + moduleId + " is not accepted"));
/******/ 				}
/******/ 				if(result instanceof Error) {
/******/ 					hotSetStatus("abort");
/******/ 					return callback(result);
/******/ 				}
/******/ 				appliedUpdate[moduleId] = hotUpdate[moduleId];
/******/ 				addAllToSet(outdatedModules, result[0]);
/******/ 				for(var moduleId in result[1]) {
/******/ 					if(Object.prototype.hasOwnProperty.call(result[1], moduleId)) {
/******/ 						if(!outdatedDependencies[moduleId])
/******/ 							outdatedDependencies[moduleId] = [];
/******/ 						addAllToSet(outdatedDependencies[moduleId], result[1][moduleId]);
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// Store self accepted outdated modules to require them later by the module system
/******/ 		var outdatedSelfAcceptedModules = [];
/******/ 		for(var i = 0; i < outdatedModules.length; i++) {
/******/ 			var moduleId = outdatedModules[i];
/******/ 			if(installedModules[moduleId] && installedModules[moduleId].hot._selfAccepted)
/******/ 				outdatedSelfAcceptedModules.push({
/******/ 					module: moduleId,
/******/ 					errorHandler: installedModules[moduleId].hot._selfAccepted
/******/ 				});
/******/ 		}
/******/ 	
/******/ 		// Now in "dispose" phase
/******/ 		hotSetStatus("dispose");
/******/ 		var queue = outdatedModules.slice();
/******/ 		while(queue.length > 0) {
/******/ 			var moduleId = queue.pop();
/******/ 			var module = installedModules[moduleId];
/******/ 			if(!module) continue;
/******/ 	
/******/ 			var data = {};
/******/ 	
/******/ 			// Call dispose handlers
/******/ 			var disposeHandlers = module.hot._disposeHandlers;
/******/ 			for(var j = 0; j < disposeHandlers.length; j++) {
/******/ 				var cb = disposeHandlers[j];
/******/ 				cb(data);
/******/ 			}
/******/ 			hotCurrentModuleData[moduleId] = data;
/******/ 	
/******/ 			// disable module (this disables requires from this module)
/******/ 			module.hot.active = false;
/******/ 	
/******/ 			// remove module from cache
/******/ 			delete installedModules[moduleId];
/******/ 	
/******/ 			// remove "parents" references from all children
/******/ 			for(var j = 0; j < module.children.length; j++) {
/******/ 				var child = installedModules[module.children[j]];
/******/ 				if(!child) continue;
/******/ 				var idx = child.parents.indexOf(moduleId);
/******/ 				if(idx >= 0) {
/******/ 					child.parents.splice(idx, 1);
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// remove outdated dependency from module children
/******/ 		for(var moduleId in outdatedDependencies) {
/******/ 			if(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {
/******/ 				var module = installedModules[moduleId];
/******/ 				var moduleOutdatedDependencies = outdatedDependencies[moduleId];
/******/ 				for(var j = 0; j < moduleOutdatedDependencies.length; j++) {
/******/ 					var dependency = moduleOutdatedDependencies[j];
/******/ 					var idx = module.children.indexOf(dependency);
/******/ 					if(idx >= 0) module.children.splice(idx, 1);
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// Not in "apply" phase
/******/ 		hotSetStatus("apply");
/******/ 	
/******/ 		hotCurrentHash = hotUpdateNewHash;
/******/ 	
/******/ 		// insert new code
/******/ 		for(var moduleId in appliedUpdate) {
/******/ 			if(Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {
/******/ 				modules[moduleId] = appliedUpdate[moduleId];
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// call accept handlers
/******/ 		var error = null;
/******/ 		for(var moduleId in outdatedDependencies) {
/******/ 			if(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {
/******/ 				var module = installedModules[moduleId];
/******/ 				var moduleOutdatedDependencies = outdatedDependencies[moduleId];
/******/ 				var callbacks = [];
/******/ 				for(var i = 0; i < moduleOutdatedDependencies.length; i++) {
/******/ 					var dependency = moduleOutdatedDependencies[i];
/******/ 					var cb = module.hot._acceptedDependencies[dependency];
/******/ 					if(callbacks.indexOf(cb) >= 0) continue;
/******/ 					callbacks.push(cb);
/******/ 				}
/******/ 				for(var i = 0; i < callbacks.length; i++) {
/******/ 					var cb = callbacks[i];
/******/ 					try {
/******/ 						cb(outdatedDependencies);
/******/ 					} catch(err) {
/******/ 						if(!error)
/******/ 							error = err;
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// Load self accepted modules
/******/ 		for(var i = 0; i < outdatedSelfAcceptedModules.length; i++) {
/******/ 			var item = outdatedSelfAcceptedModules[i];
/******/ 			var moduleId = item.module;
/******/ 			hotCurrentParents = [moduleId];
/******/ 			try {
/******/ 				__webpack_require__(moduleId);
/******/ 			} catch(err) {
/******/ 				if(typeof item.errorHandler === "function") {
/******/ 					try {
/******/ 						item.errorHandler(err);
/******/ 					} catch(err) {
/******/ 						if(!error)
/******/ 							error = err;
/******/ 					}
/******/ 				} else if(!error)
/******/ 					error = err;
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// handle errors in accept handlers and self accepted module load
/******/ 		if(error) {
/******/ 			hotSetStatus("fail");
/******/ 			return callback(error);
/******/ 		}
/******/ 	
/******/ 		hotSetStatus("idle");
/******/ 		callback(null, outdatedModules);
/******/ 	}

/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			hot: hotCreateModule(moduleId),
/******/ 			parents: hotCurrentParents,
/******/ 			children: []
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "lib/";

/******/ 	// __webpack_hash__
/******/ 	__webpack_require__.h = function() { return hotCurrentHash; };

/******/ 	// Load entry module and return exports
/******/ 	return hotCreateRequire(0)(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	eval("module.exports = __webpack_require__(1);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** multi main\n ** module id = 0\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///multi_main?");

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	eval("var B, svg;\n\nsvg = document.createElement(\"svg\");\n\nsvg.style.left = \"0px\";\n\nsvg.style.top = \"0px\";\n\nsvg.style.overflow = \"hidden\";\n\nsvg.style.height = \"100%\";\n\nsvg.style.width = \"100%\";\n\nsvg.style.position = \"absolute\";\n\nsvg.style.zIndex = \"9999999\";\n\nsvg.style.pointerEvents = \"none\";\n\ndocument.body.appendChild(svg);\n\nB = __webpack_require__(2);\n\nwindow.b = new B(svg);\n\nwindow.b.ActNatural();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main.coffee\n ** module id = 1\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/main.coffee?");

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	eval("var Bunny, SVG;\n\nSVG = __webpack_require__(3);\n\nwindow.SV = SVG;\n\nBunny = (function() {\n  function Bunny(dom_svg_element) {\n    var pencil_options;\n    this.dom_svg_element = dom_svg_element;\n    this.leg_actions_per_second = 1.08;\n    this.pixels_per_second = 30.14;\n    this.blink_speed = 200;\n    this.ear_twitch_speed = 200;\n    this.tail_twitch_speed = 200;\n    this.in_motion = false;\n    this.keep_moving = true;\n    this.walking = false;\n    this.body_color = \"#aa00d3\";\n    this.eye_color = \"#ffffff\";\n    this.nose_color = \"#ff0055\";\n    this.tooth_color = \"#ffffff\";\n    this.draw = SVG(this.dom_svg_element);\n    this.gp = this.draw.group();\n    pencil_options = {\n      fill: \"none\",\n      stroke: \"#000000\",\n      \"stroke-width\": 5\n    };\n    this.left_ear = this.gp.path(\"m192,130c0.9955,-1.7 1,-2.6 1,-3.5c0,-0.92133 0,-1.83334 0,-2.51434c0,-0.807 0,-1.98566 0,-2.88116c0,-0.8685 0.04814,-1.42045 -0.009,-2.66084c-0.03423,-0.74288 -0.31474,-1.94673 -0.55899,-2.69433c-0.13217,-0.40456 -0.43837,-1.2262 -0.72667,-2.03417c-0.47296,-1.32548 -0.50899,-2.03229 -0.99068,-2.9165c-0.33304,-0.61134 -1.0271,-1.46063 -1.35066,-2.08134c-0.5441,-1.04378 -0.8499,-1.68241 -1.17867,-2.35733c-0.32724,-0.67177 -0.89537,-1.84676 -1.12399,-2.67333c-0.17834,-0.64481 -0.41345,-1.70261 -0.67201,-2.508c-0.18701,-0.58251 -0.57333,-1.78254 -0.79999,-2.35733c-0.32217,-0.81702 -0.91931,-1.66931 -1.56851,-2.3005c-0.6971,-0.67776 -0.92931,-1.36314 -1.1035,-2.12217c-0.23042,-1.00407 -0.54173,-1.74914 -0.892,-2.76266c-0.29172,-0.84412 -0.76993,-1.36788 -1.32533,-2.29317c-0.32402,-0.53979 -0.8,-1.54283 -1.2,-2.34283c-0.3,-0.6 -0.83607,-1.57795 -1.14284,-2.34283c-0.35208,-0.87788 -0.84387,-1.48196 -1.35716,-2.178c-0.50761,-0.68834 -0.77739,-1.61723 -1.084,-2.27917c-0.40256,-0.86909 -1.16573,-1.36073 -1.716,-2.08533c-0.55768,-0.73434 -0.78671,-1.36137 -1.52133,-2.31451c-0.47345,-0.6143 -1.02487,-1.14412 -1.79333,-1.91483c-0.57997,-0.58168 -1.228,-1.15567 -1.68533,-1.77066c-0.66545,-0.89485 -0.94914,-1.66842 -1.5,-2.35751c-0.64388,-0.80544 -1.22644,-1.23174 -1.89867,-1.95716c-0.53789,-0.58046 -0.75127,-1.46294 -1.08667,-2.28267c-0.34453,-0.84206 -1.17575,-1.33984 -1.91466,-1.80267c-0.67067,-0.42009 -1.32231,-1.15784 -2.0955,-1.662c-0.70087,-0.457 -0.96794,-1.27221 -1.50583,-1.85266c-0.67223,-0.72543 -1.29868,-1.3 -1.89867,-1.9c-0.7,-0.7 -1.3,-1.3 -1.90001,-1.9c-0.7,-0.7 -1.12349,-1.28901 -1.89999,-1.87917c-0.73798,-0.56087 -1.64738,-0.8894 -2.3,-1.23683c-0.78683,-0.41889 -1.76353,-0.441 -2.49016,-0.9885c-0.75327,-0.56757 -1.28174,-1.24037 -1.73517,-1.90617c-0.49553,-0.72762 -1.22076,-1.18932 -1.97467,-1.556c-0.76361,-0.3714 -1.43356,-0.98834 -2.05267,-1.48067c-0.64728,-0.51473 -1.70618,-0.41267 -2.24733,-1.058c-0.56677,-0.67588 -1.22911,-1.21693 -2,-1.64733c-0.83597,-0.46674 -1.67122,-0.85993 -2.3,-1.222c-0.77933,-0.44876 -1.75093,-0.23983 -2.53867,-0.46133c-0.92422,-0.25988 -1.49419,-0.94828 -2.26132,-1.38934c-0.72293,-0.41563 -1.84312,-0.23184 -2.43333,-0.908c-0.4519,-0.5177 -0.52422,-1.59481 -1.48801,-1.66684c-0.67709,-0.0506 -1.62275,-0.28531 -2.37417,-0.64717c-0.87123,-0.41956 -1.8045,-0.35266 -2.7045,-0.35266c-0.9,0 -1.80133,0 -2.48533,0c-0.95067,0 -1.71648,0.02702 -2.72367,-0.0045c-0.90642,-0.02837 -2.03539,-0.21184 -2.71433,-0.35266c-0.76122,-0.15789 -1.59945,-0.34991 -2.05,-0.44417c-1.46793,-0.30709 -1.99675,-0.4019 -3.09866,-0.59867c-0.56937,-0.10167 -1.14911,-0.2013 -2.33067,-0.4c-1.19711,-0.20132 -1.79657,-0.30249 -2.98833,-0.4955c-0.58746,-0.09514 -1.73665,-0.27103 -2.29466,-0.34733c-0.54334,-0.0743 -2.07053,-0.24847 -3,-0.3c-0.87209,-0.04835 -1.70533,-0.05492 -2.91434,-0.05717c-0.79733,-0.00148 -1.57867,0 -2.328,0c-0.70133,0 -1.904,0 -2.672,0c-0.768,0 -1.97066,0 -2.672,0c-0.74934,0 -1.53068,-0.00312 -2.72833,0.00017c-0.80868,0.00222 -1.64174,0.01192 -2.514,0.057c-0.4566,0.02359 -1.92905,0.16 -2.455,0.22816c-1.09321,0.14168 -1.65231,0.23063 -2.7825,0.41917c-0.56591,0.0944 -2.22666,0.39377 -2.76017,0.4955c-1.0313,0.19666 -1.52759,0.29037 -2.46916,0.5c-1.2885,0.28686 -2.05143,0.49789 -2.76817,0.7c-0.70193,0.19793 -1.4146,0.41642 -2.59351,0.69983c-0.86418,0.20775 -1.77716,0.38407 -2.2425,0.46416c-0.93042,0.16015 -2.29335,0.31298 -3.1575,0.39233c-0.42126,0.03868 -1.25913,0.08612 -2.05583,0.29833c-1.2265,0.3267 -2.00875,0.80005 -2.80133,1.287c-0.40388,0.24813 -1.18832,0.79576 -2.4,1.53683c-0.39627,0.24236 -1.19668,0.6918 -2,1.11084c-0.79676,0.41561 -2,1.01067 -2.4,1.21067c-0.8,0.4 -1.6,0.8 -2.4,1.2c-0.8,0.4 -1.5998,0.80313 -2.41067,1.2c-0.82378,0.40319 -1.24129,0.61151 -2.556,1.2c-0.90847,0.40665 -1.37098,0.58871 -2.25,0.97917c-0.80478,0.35748 -1.84759,0.75114 -2.42466,1.3955c-0.74817,0.83541 -0.95908,1.51211 -1.676,2.056c-0.79829,0.60562 -1.67058,0.8772 -2.308,1.43066c-0.54086,0.46962 -1.25298,1.29755 -1.92733,1.83417c-0.69435,0.55254 -1.55192,0.76079 -2.1375,1.6045c-0.49381,0.71148 -0.83598,1.44286 -1.31117,2.18533c-0.45583,0.71223 -0.95452,1.52369 -1.624,2.31467c-0.5138,0.60704 -1.17543,1.38626 -1.53867,2c-0.46372,0.78352 -0.80995,1.61286 -1.236,2.364c-0.47155,0.83136 -1.06989,1.42527 -1.316,2.32133c-0.24612,0.89609 -0.25002,1.73814 -0.60483,2.49383c-0.41625,0.88654 -1.22038,1.54552 -1.44317,2.4315c-0.2223,0.88403 -0.02947,1.61019 -0.036,2.58933c-0.00533,0.80006 -0.03979,1.6133 -0.35267,2.6c-0.25769,0.81267 -0.59501,1.79761 -0.63667,2.6c-0.05185,0.99888 -0.01067,1.82084 -0.01067,2.48534c0,0.99733 0,1.79383 0,2.98133c0,0.8125 0,1.65484 0,2.54401c0,0.98933 0,1.78933 0,2.78933c0,0.8 -0.03061,1.6006 0.0045,2.6c0.02815,0.80124 0.24089,1.81652 0.51633,2.37917c0.50783,1.03732 1.00341,1.6321 1.4645,2.42084c0.42199,0.72186 1.31103,1.06601 1.84534,1.8c0.57747,0.79327 0.7957,1.5904 1.58,2.18934c0.6968,0.53211 1.65348,0.42735 2.42133,0.89466c0.72823,0.44321 1.40082,0.60895 2.28267,1c0.73955,0.32796 1.59329,0.71067 2.6495,0.716c0.59832,0.00302 1.59583,-0.00037 2.26917,0c1.19333,0.00067 2.13198,-0.08239 2.86134,0.35267c0.75499,0.45035 1.51432,0.64508 2.50533,0.64733c0.8,0.00182 1.79983,0 2.57917,0c0.85416,0 1.74294,0.18475 2.62083,-0.036c0.86285,-0.21697 1.59698,-0.92128 2.5,-0.964c0.89899,-0.04253 1.67011,-0.02052 2.55267,-0.35267c0.70621,-0.26579 1.71075,-0.62925 2.54733,-0.64733c0.89979,-0.01945 1.75378,-0.24213 2.5,-0.64733c0.76112,-0.41329 1.73074,-0.29021 2.62133,-0.57401c0.69902,-0.22274 1.65065,-0.71648 2.47733,-0.77733c0.8989,-0.06617 1.80133,-0.00134 2.70133,-0.00134c0.9,0 1.8,0 2.7,0c0.9,0 1.80046,0.02708 2.60001,0c0.84428,-0.0286 1.35429,-0.91626 2.2,-1c0.79611,-0.07883 1.70006,0.01041 2.6,0c0.90018,-0.01042 1.63964,-0.49422 2.56667,-0.83334c0.64046,-0.23428 1.8344,-0.13479 2.63334,-0.17733c0.80234,-0.04272 1.59574,-0.28115 2.364,-0.564c0.94981,-0.3497 1.80533,-0.42466 2.84133,-0.42533c0.744,-0.00048 1.66133,0 2.57333,0c0.92133,0 1.85883,0.08124 2.62267,-0.284c0.72986,-0.34899 1.62352,-0.698 2.632,-0.716c0.75587,-0.0135 1.66666,0 2.56667,0c0.9045,0 1.76666,0 2.6,0c0.9785,0 1.79867,0 2.7,0c0.936,0 1.784,0 2.64734,0c0.89999,0 1.81933,0 2.65266,0c0.9785,0 1.79867,0 2.636,0c1.01666,0 1.71133,0 2.74933,0c0.94801,0 1.63065,-0.02428 2.436,0.036c1.18258,0.08852 2.07459,0.31499 2.65783,0.464c0.83612,0.21361 1.83188,0.44784 2.67417,0.48933c1.08823,0.05361 1.94683,0.01067 2.73199,0.01067c0.95067,0 1.716,0 2.71017,0c0.74734,0 1.77917,0 2.72601,0c0.69933,0 1.6785,0 2.65767,0c0.85416,0 1.66216,-0.01385 2.50482,0.284c0.88313,0.31216 1.76244,0.6759 2.68268,0.716c0.83279,0.03629 1.79843,0.24559 2.42267,0.57467c0.87245,0.45993 1.41058,1.16675 2.27199,1.38933c0.63603,0.16434 1.659,-0.00991 2.62267,0.32c0.70895,0.24271 1.64481,0.58153 2.40001,0.8c0.96187,0.27826 1.60713,0.75122 2.59517,0.89516c0.91144,0.13278 1.87094,-0.05212 2.4955,0.44617c0.63106,0.50349 1.37128,0.74619 2.2,1.18533c0.83145,0.44058 1.34984,1.12822 2.22533,1.35333c0.87254,0.22435 1.73836,0.42207 2.40001,0.75201c0.84335,0.42054 1.8,0.284 2.7,0.284c0.91066,0 1.84659,-0.1694 2.63867,0.036c0.86578,0.22451 1.08809,1.23059 1.748,1.764c0.70949,0.57349 1.4673,0.82312 2.47733,1.17467c0.84186,0.29301 1.62231,0.93743 2.336,1.02083c0.89394,0.10446 1.73807,0.16729 2.35268,0.65183c0.64944,0.512 1.70618,0.41267 2.24733,1.058c0.56677,0.67588 1.08427,1.36877 1.75267,1.942c0.58264,0.49969 1.45563,0.83827 2.24733,1.3045c0.80875,0.47628 1.11902,1.12352 1.89867,1.88017c0.5804,0.56327 0.66783,1.41328 1.08667,2.28267c0.31088,0.6453 1.12401,1.27612 1.71466,1.88533c0.57321,0.59121 0.97214,1.52105 1.00017,2.32117c0.02864,0.81778 0.72615,1.53513 0.98917,2.28951c0.29965,0.85948 0.00922,1.87332 0.01067,2.564c0.00226,1.07266 0.15874,1.99518 0.42534,2.65067c0.2823,0.69414 0.59999,1.76401 1,2.57466l0.45316,0.70001\").attr(pencil_options).fill(this.body_color).rotate(0, 200, 100).style(\"pointer-events: visiblefill;\");\n    this.right_ear = this.gp.path(\"m217,119c0.99867,-0.88667 1,-1.836 1,-2.60133c0,-0.99416 0,-1.7415 0,-2.76266c0,-0.9405 0,-1.80267 0,-2.65684c0,-0.97916 0,-1.76849 0,-2.49383c0,-1.07467 -0.03195,-1.91499 0.16667,-2.81867c0.15341,-0.69796 0.43079,-1.55566 0.54933,-2.24c0.20146,-1.16309 0.23665,-2.02715 0.26317,-2.90583c0.02591,-0.8581 0.01024,-2.02094 0.02216,-2.66351c0.01836,-0.98977 0.29369,-1.7998 0.64601,-2.61c0.37776,-0.86868 0.24353,-1.60156 0.36333,-2.62199c0.11308,-0.96321 0.56274,-1.60001 0.868,-2.604c0.23077,-0.75902 0.51663,-1.66306 0.76868,-2.42583c0.323,-0.9775 0.104,-1.79327 0.35533,-2.70883c0.23369,-0.85131 1.44121,-0.59208 1.92532,-1.33333c0.48001,-0.73495 0.03439,-1.78068 0.29333,-2.75333c0.21794,-0.81863 0.52835,-1.39274 0.726,-2.39101c0.16498,-0.83323 0.87917,-1.54737 1.01668,-2.281c0.20793,-1.10925 -0.02237,-1.93748 0.12132,-2.728c0.18456,-1.0153 0.45314,-1.61275 1.11467,-2.51467c0.45328,-0.61799 1.32295,-1.23204 1.63333,-2.05199c0.30811,-0.81392 0.28542,-1.85135 0.60268,-2.62267c0.23402,-0.56894 1.0265,-1.35917 1.39732,-2.21067c0.32616,-0.74897 -0.21115,-1.80439 0.22383,-2.64283c0.38838,-0.74862 0.89455,-1.37899 0.94301,-2.33567c0.03639,-0.71834 0.57341,-1.48459 0.94716,-2.3215c0.34483,-0.77217 0.91432,-1.44632 1.442,-2.1c0.60092,-0.74441 1.22089,-1.33788 1.57468,-2.036c0.3909,-0.77135 -0.12677,-1.82087 0.25732,-2.664c0.35535,-0.78002 0.69464,-1.56637 1.21468,-2.3c0.55795,-0.78713 1.20984,-1.15726 1.8595,-1.9c0.58118,-0.66445 0.76558,-1.49029 1.27249,-2.184c0.53262,-0.7289 1.25363,-1.47827 1.42934,-2.31467c0.18686,-0.88948 0.78787,-1.4016 1.43468,-2.00133c0.63954,-0.59299 1.29892,-1.05165 1.95732,-1.636c0.69321,-0.61523 1.15358,-1.38513 1.52667,-2.132c0.33043,-0.66147 0.70963,-1.41913 1.48399,-1.85733c0.81679,-0.4622 1.73691,-0.61094 2.24284,-1.27916c0.52637,-0.69521 0.62283,-1.73168 1.45717,-2.17417c0.83481,-0.44274 1.51855,-0.75789 2.38266,-1.32133c0.6436,-0.41966 1.24806,-1.04977 1.68399,-1.8c0.44351,-0.76327 1.0506,-1.43049 1.93335,-1.87867c0.84259,-0.42778 1.47839,-0.75481 2.2045,-1.42133c0.56461,-0.51826 1.36166,-0.97746 2.04282,-1.4c0.91919,-0.57019 1.37808,-1.04328 2.30984,-1.6c0.72766,-0.43477 1.54285,-0.8 2.34283,-1.2c0.60001,-0.3 1.58017,-0.8453 2.39999,-1.14283c0.78403,-0.28454 1.61649,-0.27798 2.60001,-0.52383c0.81891,-0.2047 1.5968,-0.64118 2.39868,-1.032c0.76233,-0.37155 1.76233,-0.59015 2.60132,-0.968c0.68896,-0.31028 1.48282,-0.78506 2.40451,-0.82883c0.99307,-0.04717 1.84723,0.07497 2.57416,-0.44717c0.61984,-0.44521 1.32388,-1.3987 2.04218,-1.51567c0.96732,-0.15751 1.80798,0.1161 2.8125,-0.20833c0.69159,-0.22337 1.46973,-0.80473 2.33331,-0.83333c0.85373,-0.02827 1.83441,0.03187 2.63333,-0.01067c0.80237,-0.04272 1.78998,-0.37081 2.60001,-0.63667c0.79105,-0.25963 1.76398,-0.34733 2.71466,-0.35267c0.88535,-0.00497 1.68533,0 2.52133,0c1.02118,0 1.76874,0.02002 2.76535,-0.00133c0.83517,-0.0179 1.76834,-0.15301 2.55133,-0.35133c0.82538,-0.20906 1.87653,-0.51191 2.58566,-0.59017c0.79691,-0.08795 1.86136,-0.04033 2.51633,-0.1425c1.00479,-0.15674 1.94409,-0.42022 2.58734,-0.562c1.09161,-0.24061 1.96194,-0.34733 2.84332,-0.35267c0.72534,-0.00439 1.71469,0 2.51468,0c1,0 2.04578,0.179 2.832,-0.284c0.7345,-0.43253 1.3533,-0.71067 2.41083,-0.716c0.85718,-0.00432 1.75717,0 2.55716,0c0.836,0 1.85269,0 2.54733,0c1.01669,0 1.95718,0 2.81934,0c0.83334,0 1.81201,-0.01762 2.63202,0c0.83789,0.018 1.67157,0.31865 2.54865,0.64733c0.88303,0.33091 1.76828,0.26121 2.53802,0.438c0.98401,0.226 1.70596,0.67921 2.71466,0.862c0.79398,0.14388 1.59814,0.27938 2.39999,0.55267c0.99774,0.34005 1.78958,0.45715 2.83334,0.5c0.7562,0.03104 1.52798,0.53434 2.33331,0.83333c0.81985,0.30438 1.85361,0.46936 2.42883,0.872c0.59094,0.41366 1.56454,1.02409 2.40451,1.46133c0.64362,0.33502 1.40509,0.73364 2.3045,0.83783c0.87143,0.10096 1.73026,0.46042 2.52884,0.9955c0.67853,0.45463 1.26437,1.1023 1.86667,1.7c0.69733,0.69201 1.44507,1.07831 2.18533,1.46933c0.83221,0.43959 1.33319,1.0169 1.948,1.83067c0.57333,0.7589 0.7944,1.39225 1.46664,2.24283c0.6394,0.80901 1.37457,1.17227 1.64285,2.05717c0.26163,0.86303 -0.00708,1.80906 0.14249,2.67067c0.14035,0.80865 0.28564,1.59337 0.91467,2.52933c0.46423,0.69075 0.90479,1.3834 0.96399,2.22267c0.04562,0.64688 0.01312,1.94445 0.0405,2.7585c0.02869,0.85381 0.43411,1.7243 0.71152,2.40283c0.36838,0.90106 0.284,1.94933 0.284,2.70533c0,0.91067 0,1.82133 0,2.73217c0,0.88917 0,1.87833 0,2.65767c0,0.85416 0,1.71633 0,2.62083c0,0.9 0.25082,1.83716 -0.00449,2.6955c-0.22684,0.76265 -1.56781,0.59594 -1.9115,1.27383c-0.35919,0.70849 -0.43494,1.67458 -0.96286,2.5305c-0.453,0.73442 -1.44778,0.69032 -2.05981,1.33617c-0.57709,0.60897 -0.95126,1.28794 -1.5405,2.064c-0.56052,0.73825 -0.62125,1.74249 -1.32217,2.21467c-0.71075,0.47879 -1.59418,0.71804 -2.39734,1.20133c-0.74457,0.44804 -1.05966,1.30832 -1.60266,1.884c-0.58167,0.61668 -1.54221,0.98539 -2.33734,1.22533c-0.7887,0.23799 -1.51791,0.68704 -2.15601,1.0845c-0.83319,0.51899 -0.94519,1.61418 -1.70532,2.05683c-0.65295,0.38023 -1.56406,0.54085 -2.29016,0.94317c-0.74222,0.41125 -1.00226,1.68381 -1.73068,1.8485c-0.93494,0.21139 -1.77789,0.03023 -2.67917,0.04166c-0.82101,0.01042 -1.77695,0.30137 -2.47464,0.57467c-0.93115,0.36475 -1.85648,0.55277 -2.42535,1.036c-0.74884,0.63607 -1.26434,1.2056 -2.23599,1.35333c-0.75742,0.11515 -1.78183,-0.09571 -2.67868,0.12134c-0.90268,0.21845 -1.629,0.95719 -2.32132,1.304c-0.74353,0.37245 -1.75815,0.57816 -2.50684,0.60616c-1.02048,0.03816 -1.85718,0.0045 -2.75732,0.0045c-0.78519,0 -1.74454,-0.05188 -2.50116,0.08533c-1.01724,0.18449 -1.78012,0.64484 -2.79736,0.82933c-0.75662,0.13721 -1.71722,0.03831 -2.60132,0.08533c-0.80341,0.04272 -1.55307,0.69235 -2.43201,0.97467c-0.60315,0.19373 -1.62073,0.31212 -2.58884,0.52533c-0.67789,0.14929 -1.6423,0.36404 -2.46481,0.44283c-0.90274,0.08648 -1.92548,-0.01021 -2.78635,0.12917c-1.07898,0.17469 -1.7009,0.4951 -2.41068,0.78934c-0.77567,0.32156 -1.5979,0.67744 -2.48398,0.972c-0.90894,0.30217 -1.84665,0.52634 -2.3125,0.625c-0.90848,0.1924 -2.18616,0.38895 -2.95151,0.45633c-0.707,0.06224 -1.7175,0.08308 -2.73599,0.08533c-0.71869,0.00159 -1.46933,0 -2.24402,0c-0.79065,0 -1.98972,-0.0056 -2.79834,0.0045c-0.83273,0.0104 -1.70712,0.03143 -3.12433,0.16216c-0.50992,0.04704 -1.56766,0.18485 -2.10666,0.25867c-1.07364,0.14704 -1.59488,0.24406 -3.06,0.408c-0.84003,0.09399 -1.57031,0.14449 -2.47217,0.16216c-1.05832,0.02074 -1.91211,-0.0409 -2.85318,0.01517c-0.69345,0.04131 -1.62927,0.60963 -2.49597,0.86784c-0.65753,0.19589 -1.79468,0.1215 -2.56268,0.1215c-0.94135,0 -1.63199,0 -2.74133,0c-0.85867,0 -1.72198,0 -2.62201,0c-0.91931,0 -1.79327,-0.12222 -2.73132,0.22134c-0.69196,0.25343 -1.504,0.72669 -2.23199,0.768c-0.98764,0.05604 -1.95413,-0.027 -2.90668,0.012c-0.69418,0.02843 -1.65622,0.27091 -2.4035,0.5195c-0.80124,0.26655 -1.785,0.69974 -2.45831,0.95833c-1.0087,0.3874 -1.82901,0.44685 -2.62085,0.60484c-1.0325,0.206 -1.73816,0.51805 -2.34132,0.632c-1.13524,0.21448 -2.06458,0.23476 -3.03784,0.26316c-0.4834,0.01411 -1.39966,0.00133 -2.51332,0.021c-1.05461,0.01863 -1.74359,0.46579 -2.60751,0.8785c-0.85265,0.40733 -1.46042,0.77495 -2.2,1.41683c-0.66669,0.57861 -1.49063,0.80468 -2.2,1.2045c-0.87819,0.49497 -1.33949,1.00954 -1.85716,1.8c-0.52069,0.79506 -1.16928,1.17457 -1.84151,1.89999c-0.53789,0.58046 -0.86147,1.49614 -1.22667,2.21067c-0.463,0.90587 -0.40433,1.69624 -1.01733,2.568c-0.43898,0.62426 -1.34926,1.15426 -1.51566,2.02133c-0.18462,0.962 0.00214,1.75396 -0.04617,2.64817c-0.04243,0.78551 -0.93214,1.28046 -1.47467,1.89349c-0.58054,0.65599 -0.42952,1.6375 -0.52216,2.57301c-0.08875,0.89626 -0.75908,1.61295 -0.94151,2.5425c-0.14429,0.73517 -0.05716,1.7415 -0.05716,2.50684c0,0.952 0,1.72 0,2.66133l0,1.008l0,0.792\").attr(pencil_options).fill(this.body_color).rotate(0, 200, 100).style(\"pointer-events: visiblefill;\");\n    this.tail = this.gp.path(\"m517,159c-0.520813,-1.041672 -0.814636,-1.596146 -1.295471,-2.595505c-0.3573,-0.742615 -0.675903,-1.646042 -0.704529,-2.605835c-0.028748,-0.964905 0,-1.634659 0,-2.399994c0,-0.998672 0,-1.79866 0,-2.79866c0,-0.800003 -0.047363,-1.802643 0.020813,-2.600006c0.086121,-1.006912 0.210876,-1.94809 0.979187,-2.666672c0.582275,-0.544556 1.674133,-0.76738 1.94281,-1.633331c0.267273,-0.861389 0.291138,-1.658279 0.704529,-2.399994c0.425598,-0.763687 0.695129,-1.613831 1.352661,-2.300003c0.587097,-0.612625 1.340149,-1.105804 1.833313,-2c0.365723,-0.663177 0.998169,-1.143951 1.566711,-1.850662c0.634888,-0.789169 1.299927,-1.144836 2.199951,-1.149338c0.920837,-0.004608 1.721497,0 2.610718,0c0.989136,0 1.768494,0 2.767822,0c0.820129,0 1.729492,0 2.785461,0c0.593994,0 1.559998,0 2.184021,0c1.184998,0 2.218689,0 2.877319,0c1.007996,0 1.799988,0 2.827332,0c0.694702,0 1.764709,0 2.572693,0c0.981506,0 1.842468,0 2.312012,0c0.971985,0 1.927979,0 3.176636,0c0.657349,0 1.443359,0 2.48584,0c0.964172,0 1.914856,0 2.800171,0c0.799988,0 1.635986,0 2.652649,0c0.694702,0 1.758789,-0.105576 2.547363,0.283997c0.870056,0.42984 1.526428,0.725067 2.320801,1.236832c0.830627,0.535141 1.504639,0.939011 2.3125,1.479172c0.668518,0.447006 1.526123,0.813126 2.266663,1.221497c0.6745,0.371964 1.300049,1.178497 2.000366,1.87883c0.571655,0.571671 1.230408,1.235596 1.667664,1.666336c0.727722,0.716858 1.153564,1.272339 2.088989,1.869003c0.782776,0.499283 1.768005,0.815521 2.090332,1.677841c0.264343,0.707169 0.319397,1.743958 0.499329,2.362488c0.283813,0.975616 0.682007,1.854584 1.201538,2.461502c0.600281,0.701279 1.151062,1.396378 1.330994,2.362503c0.135376,0.726776 0.401123,1.687561 0.725342,2.362503c0.42627,0.887299 0.697205,1.810272 0.859497,2.461502c0.291687,1.170639 0.326294,1.974045 0.437317,2.875992c0.099792,0.810791 0.799438,1.453613 0.977844,2.320831c0.194397,0.944946 0.020813,1.689835 0.020813,2.679001c0,0.779343 0,1.778839 0,2.684174c0,0.94133 0,1.632004 0,2.705338c0,0.82132 0,1.731995 0,2.585327c0,0.942673 0,1.794662 0,2.594666c0,0.751495 0.019653,2.064392 -0.004517,2.773499c-0.029053,0.85379 -0.183044,1.906418 -0.60614,2.585175c-0.485168,0.778427 -1.239258,1.321106 -1.414673,2.057327c-0.223694,0.938736 -0.676941,1.51239 -1.374695,2.214661c-0.697693,0.70224 -1.245789,1.157272 -1.895447,1.900009c-0.581177,0.664444 -0.616394,1.653427 -1.315186,2.263992c-0.666382,0.582275 -1.753479,0.27597 -2.489319,0.657501c-0.806946,0.418396 -1.197083,1.375992 -2.100037,1.693176c-0.852905,0.299591 -1.937866,-0.236435 -2.633301,0.251999c-0.71521,0.502319 -1.266663,0.833328 -2.166687,0.833328c-0.799988,0 -1.700012,0 -2.599976,0c-0.900024,0 -1.810547,0.132706 -2.700012,-0.004501c-0.931396,-0.143677 -1.468628,-0.847321 -2.400024,-0.990997c-0.889465,-0.137207 -1.834717,0.048416 -2.599976,-0.357162c-0.846069,-0.448425 -1.605225,-0.680893 -2.352661,-1.004501c-0.890991,-0.385742 -1.49585,-1.105362 -2.347351,-1.476166c-0.748962,-0.326157 -1.700195,-0.149872 -2.599976,-0.166672c-0.964539,-0.018005 -1.416443,-0.718689 -2.161682,-1.052673c-0.861816,-0.386215 -1.628296,-0.655792 -2.637024,-0.863327c-0.757202,-0.155792 -1.853577,-0.242157 -2.314636,-0.88533c-0.528625,-0.737473 -1.049011,-1.167175 -1.943848,-1.203171c-0.748535,-0.030106 -1.75415,-0.254349 -2.542847,-0.606171c-0.8125,-0.362442 -1.610779,-0.752655 -2.314636,-1.189331c-0.878479,-0.544998 -1.678406,-0.929047 -2.40271,-1.483994c-0.629883,-0.482574 -1.404175,-0.730057 -2.061829,-1.216003c-0.660645,-0.488144 -1.431458,-0.936005 -2.1875,-1.5l-0.65863,-0.399994l-0.690674,-0.400009\").attr(pencil_options).fill(this.body_color).style(\"pointer-events: visiblefill;\");\n    this.body = this.gp.path(\"m114,216c0,-1 0.002396,-1.800003 0,-2.757172c-0.002251,-0.900009 0.004311,-1.663361 -0.283997,-2.642822c-0.240349,-0.816528 -0.598259,-1.593628 -0.68,-2.410675c-0.087135,-0.871002 -0.092957,-1.88118 0.026497,-2.710159c0.128578,-0.892303 0.579857,-1.793839 0.995499,-2.370178c0.420677,-0.583313 1.201065,-1.266464 1.687332,-2.139664c0.445587,-0.800156 0.602066,-1.631119 0.959167,-2.373825c0.482376,-1.00325 0.819199,-1.606277 1.295502,-2.762177c0.211967,-0.514404 0.504478,-1.361053 0.757164,-1.937836c0.530731,-1.211441 0.90136,-1.813721 1.305336,-2.457993c0.447922,-0.71434 1.270943,-1.937424 1.580002,-2.401337c0.32428,-0.486755 0.998093,-1.501099 1.336662,-2.015335c0.334755,-0.508453 0.974632,-1.479004 1.520836,-2.354156c0.451248,-0.723007 0.95179,-1.607941 1.381332,-2.346664c0.433594,-0.745697 0.962265,-1.572861 1.329338,-2.202667c0.398979,-0.68457 0.991676,-1.858734 1.189323,-2.284012c0.404831,-0.871094 0.792435,-1.75032 1,-2.170822c0.579056,-1.17308 1.192383,-2.113708 1.641678,-2.641678c0.456223,-0.536102 1.293488,-1.352341 1.926331,-1.990158c0.684647,-0.690033 1.037354,-1.046448 1.726669,-1.782501c0.339981,-0.363037 1.275589,-1.41684 1.795502,-2.100006c0.501831,-0.659424 0.964676,-1.35376 1.676498,-2.481491c0.257416,-0.407806 0.790695,-1.27478 1.080002,-1.717331c0.591263,-0.904449 0.871933,-1.379242 1.919998,-2.616013c0.340897,-0.402267 1.078217,-1.122528 1.447998,-1.461334c0.717712,-0.657593 1.45195,-1.233856 2.342834,-2.172653c0.565338,-0.595734 1.066452,-1.28038 1.329163,-1.643341c0.573547,-0.792404 1.21225,-1.723434 1.577332,-2.241165c0.791656,-1.122665 1.210815,-1.70636 1.636002,-2.294006c0.422806,-0.584351 0.837448,-1.156403 1.248001,-1.699493c1.0755,-1.422684 1.667435,-2.13858 2.168671,-2.696335c0.405823,-0.451569 1.170502,-1.279175 1.780655,-1.750336c0.766281,-0.591721 1.667007,-1.028534 2.323502,-1.395493c0.680267,-0.380249 1.662888,-0.956268 2.207169,-1.379166c0.733749,-0.570114 1.304428,-1.184952 1.889343,-2c0.564056,-0.78598 1.199829,-1.618439 1.651993,-1.998672c0.726776,-0.611176 1.270859,-0.963348 2.309326,-1.580002c0.688538,-0.408859 1.383362,-0.758362 2.342682,-1.342834c0.536697,-0.326996 1.362656,-0.876541 1.894653,-1.279831c1.023865,-0.776154 1.48967,-1.22493 2.053345,-1.634659c0.643173,-0.467499 1.937225,-1.190018 2.465332,-1.454681c0.576065,-0.288696 1.209137,-0.588425 1.894501,-0.913498c0.739944,-0.350952 1.538193,-0.725143 2.389496,-1.138489c1.885483,-0.915497 2.9104,-1.440926 3.986664,-1.99334c1.116104,-0.572861 2.256805,-1.166359 3.415497,-1.764c1.162643,-0.599686 2.316971,-1.19606 3.46051,-1.764c2.178986,-1.082199 3.207687,-1.555923 4.186661,-1.991997c0.925537,-0.41227 1.80719,-0.783989 2.644501,-1.119003c0.788177,-0.315353 1.53418,-0.598625 2.239502,-0.848999c1.277527,-0.453499 1.863129,-0.633926 2.416,-0.812004c0.534805,-0.172256 1.064148,-0.341049 1.594498,-0.526497c0.548386,-0.191757 1.123718,-0.404549 1.729507,-0.661499c1.384293,-0.587143 2.159378,-0.980019 3.001328,-1.397331c0.894806,-0.443512 1.825668,-0.917984 2.789993,-1.399506c0.98233,-0.490517 1.971146,-0.984825 2.970001,-1.444496c1.936234,-0.891052 2.878204,-1.258385 3.78801,-1.593338c0.874756,-0.322044 1.727539,-0.603035 2.554489,-0.857994c0.798492,-0.246185 1.576233,-0.465736 2.329498,-0.678001c1.441132,-0.406097 2.13205,-0.603889 2.804001,-0.804001c0.656723,-0.19558 1.298401,-0.391594 1.929001,-0.580498c0.620071,-0.185753 1.231216,-0.368866 1.839005,-0.5355c1.19989,-0.328964 1.801453,-0.467033 2.398666,-0.600006c0.589798,-0.131325 1.171799,-0.250298 1.741501,-0.364494c0.554321,-0.111115 1.091522,-0.213753 1.606506,-0.319504c0.957001,-0.196526 1.392792,-0.298347 1.804001,-0.402664c0.394775,-0.100143 0.776657,-0.207047 1.151993,-0.319504c0.376709,-0.112869 0.758606,-0.234505 2,-0.645828c0.465729,-0.154312 1.498016,-0.496498 2.072006,-0.68c0.614975,-0.196609 1.275299,-0.402351 1.984497,-0.615005c0.758743,-0.227509 2.44281,-0.707489 3.37117,-0.959496c0.972961,-0.264114 1.978958,-0.528419 3.002991,-0.793503c1.027298,-0.265923 2.045166,-0.524673 3.039001,-0.775497c0.955505,-0.24115 2.696899,-0.676903 3.45816,-0.866669c0.68808,-0.171532 1.309906,-0.326126 1.873505,-0.460503c0.510773,-0.121788 0.97583,-0.232727 1.405518,-0.316498c1.122894,-0.21891 1.80777,-0.282951 2.772308,-0.366165c0.616302,-0.053169 1.822113,-0.217064 2.42984,-0.352669c0.964539,-0.215225 1.65741,-0.397896 2.833832,-0.526001c0.864594,-0.094147 1.778137,-0.119385 2.242493,-0.14666c0.932251,-0.054764 2.2948,-0.184738 3.153015,-0.327339c0.821869,-0.136559 1.595856,-0.320984 2.695007,-0.480667c0.681824,-0.099052 1.353058,-0.128464 2.376495,-0.21933c1.124847,-0.099869 1.956238,-0.226936 2.819489,-0.372665c0.429382,-0.072487 1.245636,-0.255379 2.584839,-0.453171c0.820557,-0.121193 1.708954,-0.107994 2.55249,-0.142334c0.638519,-0.025993 2.000122,-0.144493 2.584015,-0.200661c0.648163,-0.062355 1.354065,-0.135101 2.112,-0.2145c0.804047,-0.084229 1.64801,-0.174667 2.526001,-0.268501c0.906006,-0.096832 2.777893,-0.296349 3.732483,-0.395332c0.961426,-0.099693 1.926819,-0.197563 2.893524,-0.289505c0.964294,-0.091713 1.923737,-0.177719 2.875488,-0.253494c0.940247,-0.07486 2.776276,-0.194649 3.666992,-0.235672c0.873322,-0.040222 1.732941,-0.067253 2.581512,-0.085495c0.840424,-0.018066 1.675995,-0.02684 2.509491,-0.031502c0.834503,-0.004669 2.518494,-0.003517 3.373505,-0.004837c0.86499,-0.001335 1.740051,-0.004784 2.625,-0.020996c0.895081,-0.016403 1.800323,-0.043991 2.714996,-0.093002c0.925385,-0.049583 2.805878,-0.211502 3.759338,-0.328331c0.961273,-0.117783 1.923035,-0.260262 2.882996,-0.408005c0.954712,-0.146942 1.898285,-0.301247 2.82901,-0.444c0.911926,-0.13987 2.666229,-0.379341 3.502991,-0.462494c0.81134,-0.080627 1.605774,-0.136833 2.388,-0.181503c0.775787,-0.044296 1.552002,-0.07576 2.334015,-0.109497c0.793976,-0.034256 2.442169,-0.115532 3.306824,-0.173172c0.894043,-0.059593 1.815674,-0.131325 2.764496,-0.203995c0.974823,-0.074661 1.974487,-0.152077 2.998505,-0.222c1.046631,-0.071472 3.205261,-0.192238 4.315002,-0.230667c1.126282,-0.039001 2.266998,-0.06028 3.418488,-0.054001c1.159607,0.006325 2.324646,0.038681 3.490509,0.108002c1.16626,0.069344 3.483459,0.310829 4.62616,0.488167c1.134766,0.176109 2.252716,0.391685 3.354004,0.622498c1.08606,0.227623 2.149384,0.473091 3.191986,0.712502c1.018738,0.233925 2.974731,0.67392 3.911011,0.857666c0.903809,0.177376 1.779114,0.329994 2.625,0.460503c0.814178,0.125618 1.599426,0.230156 2.355011,0.316498c0.724487,0.082794 2.084717,0.203339 2.721313,0.244667c0.614105,0.039871 1.2146,0.067352 1.809021,0.085495c0.596222,0.018196 1.202667,0.026901 1.826996,0.031502c0.65033,0.004791 2.061005,0.004028 2.83432,0.004669c0.813354,0.000671 1.656708,0.002388 2.52002,0.010498c0.873352,0.008202 1.746735,0.021507 2.609985,0.046501c0.843445,0.024422 2.430481,0.103523 3.157837,0.16433c0.695313,0.058128 1.373871,0.133789 2.053497,0.2145c0.69809,0.082901 1.430389,0.177048 2.215515,0.268501c0.853516,0.099419 2.836121,0.299721 3.99231,0.395332c1.250488,0.103409 2.571503,0.198311 3.9375,0.289505c1.385651,0.092506 2.766541,0.176628 4.117523,0.253494c1.295715,0.073723 3.622437,0.192047 4.609985,0.23584c0.872437,0.038689 1.64502,0.06823 2.332489,0.096001c0.617554,0.02494 1.180176,0.047882 1.702515,0.077995c0.49765,0.028687 1.477875,0.110634 1.987152,0.168831c0.528076,0.060349 1.071655,0.133606 1.628998,0.2145c0.569977,0.082726 1.149506,0.173683 1.73703,0.268501c0.593811,0.095833 1.791046,0.295097 2.391144,0.395668c0.601227,0.100761 1.20462,0.202744 1.810516,0.310501c0.610443,0.108566 1.22583,0.222656 1.846497,0.346497c0.628723,0.12545 1.910431,0.405602 2.564667,0.564667c0.667145,0.162201 1.345612,0.339745 2.035492,0.5355c0.706512,0.200478 1.426971,0.42025 2.161499,0.661507c0.754913,0.247948 2.31604,0.810532 3.124512,1.123993c0.831573,0.322426 1.679993,0.667038 2.549988,1.018501c0.890015,0.359543 1.798553,0.727776 2.730011,1.0905c0.948486,0.369354 2.907928,1.087616 3.919006,1.426666c1.020935,0.342354 2.053314,0.666527 3.086975,0.985504c1.028351,0.317337 2.048523,0.623589 3.051025,0.931496c0.981506,0.301468 2.855286,0.897911 3.734161,1.205002c0.850403,0.297134 1.673248,0.605721 2.47348,0.931503c0.794128,0.323303 1.580505,0.669197 2.365509,1.039497c0.800476,0.377594 2.448761,1.224289 3.310181,1.692337c0.888,0.482506 1.78598,0.98848 2.690979,1.501495c0.904358,0.51265 1.796387,1.024323 2.673004,1.519501c0.848755,0.479446 2.436493,1.35331 3.165161,1.7295c0.680847,0.351509 1.329254,0.668297 1.948517,0.962997c0.595123,0.283211 1.177795,0.550987 1.750488,0.819c0.572662,0.267998 1.743286,0.833565 2.350159,1.146172c0.622498,0.320648 1.246765,0.655769 1.866028,0.997498c0.610046,0.336647 1.198669,0.671013 1.757996,0.997498c0.52594,0.306999 1.436188,0.859077 1.806,1.098839c0.325958,0.211334 0.614655,0.411087 0.875977,0.609001c0.254669,0.192879 0.50528,0.401199 0.768005,0.626999c0.289398,0.248718 0.983459,0.861626 1.412506,1.234665c0.478882,0.416367 1.000397,0.866043 1.555511,1.340996c0.57785,0.494408 1.171143,0.99836 1.771484,1.502998c0.595642,0.500687 1.74411,1.449509 2.27951,1.884674c0.504608,0.410141 0.982849,0.79393 1.424988,1.166992c0.417725,0.352478 0.807098,0.694107 1.154999,1.041c0.331879,0.330917 0.895325,1.016357 1.121338,1.378174c0.224762,0.359848 0.416595,0.743362 0.609009,1.135498c0.198334,0.40419 0.39621,0.828705 0.626984,1.261505c0.243591,0.456818 0.85202,1.421204 1.23468,1.923996c0.40625,0.533813 0.862244,1.069687 1.341003,1.6185c0.490509,0.562256 0.998749,1.122726 1.502991,1.690506c0.501099,0.564224 1.455048,1.676727 1.884491,2.226486c0.414368,0.530472 0.796783,1.057358 1.156525,1.575012c0.349182,0.502441 0.676849,0.999435 0.994476,1.485001c0.310364,0.474442 0.911896,1.396088 1.213837,1.840988c0.30072,0.4431 0.609192,0.885635 0.92099,1.338013c0.320923,0.465622 0.661987,0.944595 1.349365,2.007996c0.775513,1.199783 1.174133,1.880081 1.597351,2.594666c0.439514,0.742035 0.882629,1.506668 1.33197,2.279999c0.449341,0.773331 0.89093,1.538879 1.33197,2.279999c0.827698,1.390854 1.221069,2.014328 1.594727,2.58934c0.34668,0.533493 0.675781,1.021637 0.98999,1.463989c0.552612,0.777969 1.464539,1.884949 1.932617,2.522675c0.481262,0.655701 0.987976,1.642075 1.193359,2.072159c0.471802,0.988022 0.709229,1.533966 0.957336,2.092667c0.49707,1.119278 0.726501,1.662949 1.356812,3.071503c0.321533,0.718582 0.740295,1.499176 1.021851,2.386169c0.255798,0.805847 0.609741,1.512283 0.882996,2.293167c0.479736,1.371094 0.563171,2.041077 0.722351,2.769669c0.172424,0.789017 0.341797,1.622574 0.515991,2.479492c0.175171,0.861725 0.343018,1.710587 0.515991,2.524506c0.309509,1.456345 0.452393,2.064133 0.600037,2.587997c0.241943,0.858231 0.616455,1.795029 1.205139,2.787842c0.316345,0.533493 0.875305,1.286911 1.34552,2.245499c0.335876,0.684723 0.568298,1.481155 0.997314,2.318832c0.377991,0.738068 0.839355,1.533524 1.059998,1.949158c0.430603,0.811203 0.957825,1.887787 1.17865,2.757339c0.226807,0.893143 0.438049,1.915237 0.708008,2.507996c0.461365,1.013123 0.913025,1.784393 1.104004,2.400009c0.305481,0.984802 0.300293,1.864517 0.506653,2.821167c0.172729,0.800888 0.475525,1.55751 0.694702,2.613495c0.141602,0.682098 0.239868,1.634033 0.441162,2.680496c0.155334,0.807312 0.234009,1.224289 0.444153,2.034164c0.363892,1.402451 0.758911,2.140015 1.031982,3.084c0.224304,0.775436 0.166077,1.652008 0.166687,2.571167c0.000671,0.998169 -0.006836,1.640152 0.085327,2.366165c0.153015,1.205353 0.344604,1.88974 0.489319,2.61467c0.145935,0.73111 0.352112,2.131226 0.389343,2.800003c0.037598,0.67543 0.038391,2.147995 0.034668,2.979996c-0.001953,0.431 0.012634,1.295044 -0.055847,2.115005c-0.111877,1.339722 -0.429565,1.999481 -0.658813,2.855667c-0.223755,0.835663 -0.232544,1.583588 -0.283997,2.40567c-0.053955,0.861923 -0.136902,2.130249 -0.285339,2.884995c-0.19635,0.998489 -0.365356,1.576965 -0.916016,2.609329c-0.396912,0.744064 -0.709595,1.177032 -1.119995,2.171005c-0.353638,0.856445 -0.680298,1.834106 -0.853333,2.338333c-0.344604,1.004196 -0.660034,1.954208 -0.940002,2.800003c-0.250549,0.756912 -0.487671,1.454819 -0.885315,2.821335c-0.208191,0.715378 -0.39856,1.462402 -0.635986,2.207993c-0.237305,0.74527 -0.667908,1.812744 -1.016663,2.463684c-0.497498,0.928558 -0.882019,1.46402 -1.462036,2.476318c-0.37677,0.657593 -0.885315,1.685333 -1.185303,2.285339c-0.400024,0.799988 -0.775635,1.613403 -1.220825,2.399994c-0.345764,0.610992 -0.973877,1.392609 -1.479187,2.020844c-0.527283,0.655548 -1.115784,1.669312 -1.406677,2.236481c-0.32196,0.627747 -0.695557,1.342896 -1.578674,2.485168c-0.336609,0.435394 -1.114746,1.298645 -1.514648,1.736664c-0.397461,0.435303 -1.183777,1.250427 -1.833313,2.020844c-0.766296,0.908936 -1.08667,1.449615 -1.546692,2.096008c-0.583557,0.819946 -1.136353,1.408325 -1.721313,2.003998c-0.791382,0.805908 -1.403259,1.378235 -1.91333,2c-0.634094,0.77298 -1.039856,1.628052 -1.652039,2.233337c-0.645264,0.638031 -1.470642,1.026917 -2.5,1.666656c-0.420349,0.261261 -1.344177,0.857727 -1.834656,1.175995c-0.49884,0.3237 -1.486389,0.968445 -1.962646,1.272003c-1.245911,0.794098 -1.919098,1.165955 -2.693329,1.656006c-0.856171,0.541901 -1.411804,1.084564 -2.042694,1.534668c-0.957245,0.682922 -1.630859,0.719086 -2.399994,1.029327c-1.056763,0.42627 -1.604095,1.049103 -2,1.434662c-0.807129,0.786102 -1.307373,1.452484 -2.233337,2.063995c-0.684204,0.451843 -1.320435,0.651276 -2.152649,1.219025c-0.755646,0.515503 -1.153625,0.843109 -2.056671,1.484985c-0.473053,0.336243 -1.953766,1.302216 -2.456848,1.586334c-0.493073,0.278473 -1.468231,0.771484 -2.392487,1.22168c-0.436371,0.212555 -1.626221,0.793365 -2.250671,1.220001c-0.798828,0.545776 -1.337433,1.148468 -2.113678,1.848663c-0.588562,0.530884 -1.505524,1.07782 -2.101654,1.405334c-0.63974,0.351471 -1.302582,0.663483 -2.37851,1.326141c-0.63089,0.38858 -1.281097,0.853699 -2.263489,1.354523c-0.896301,0.45694 -1.424805,0.676849 -1.973328,0.927979c-1.146301,0.524811 -1.727692,0.784821 -2.293335,1.056c-1.554871,0.745453 -1.995117,0.990417 -2.789337,1.436005c-0.704132,0.39505 -1.938751,1.091492 -2.545319,1.362671c-0.60434,0.270172 -1.561737,0.622559 -2.565338,1.050659c-0.720367,0.307281 -1.449524,0.655548 -2.171997,1.007996c-0.693512,0.338318 -1.618347,0.803833 -2.389343,1.189362c-0.869324,0.434662 -1.665314,0.85318 -2.507996,1.235992c-0.922272,0.418976 -1.72464,0.676239 -2.502686,1.03598c-0.500641,0.231476 -1.449402,1.026672 -1.911987,1.574677c-0.673187,0.797455 -1.343292,1.403503 -1.870178,1.747681c-0.774689,0.506042 -1.807098,0.864166 -2.604156,1.104156c-0.674164,0.202972 -2.043915,0.766083 -2.624664,1.044159c-0.643524,0.308105 -1.327789,0.657104 -2.049011,1.02002c-0.742767,0.373749 -1.493347,0.752167 -2.246979,1.109985c-0.734467,0.348724 -2.114563,0.948669 -2.746674,1.156158c-1.107025,0.363373 -1.615784,0.454834 -2.518341,0.625854c-0.796295,0.150909 -1.879547,0.396698 -2.532166,0.691162c-0.965515,0.435638 -1.540649,0.838501 -2.457153,1.268646c-0.886353,0.415985 -1.498505,0.615234 -2.700012,1.021515c-0.601929,0.203522 -1.543213,0.51651 -2.214325,0.757172c-1.121643,0.402252 -1.951874,0.72467 -2.382019,0.895508c-0.863739,0.343018 -1.702057,0.657288 -2.737,1.180664c-0.756653,0.38266 -1.364136,0.932678 -2.355316,1.471161c-0.461029,0.250458 -1.109558,0.474762 -2.477997,0.862152c-0.580261,0.164276 -1.222931,0.317688 -2.621338,0.669342c-0.732971,0.184326 -1.471771,0.370575 -2.2005,0.568512c-0.70993,0.192841 -2.0159,0.583313 -2.58316,0.795502c-1.011688,0.378448 -1.88623,0.800964 -2.30835,1c-0.852417,0.401947 -1.78067,0.816498 -2.859985,1.198669c-0.581085,0.20575 -1.189758,0.402954 -2.466675,0.76532c-0.652405,0.18515 -1.31076,0.361481 -2.626678,0.669342c-0.64444,0.150787 -1.923065,0.418152 -2.562653,0.552002c-0.645721,0.135162 -1.302063,0.272766 -1.971008,0.4245c-0.688416,0.156158 -2.134125,0.51947 -2.896667,0.732666c-0.786835,0.220001 -1.585419,0.458038 -2.390991,0.697479c-0.803772,0.238892 -1.596313,0.476929 -2.373016,0.69751c-0.748688,0.212616 -2.13385,0.589417 -3.345642,0.806488c-0.538818,0.096527 -1.521637,0.213135 -2.404175,0.242523c-1.221893,0.04068 -2.033234,0.010254 -2.907837,0.02417c-0.481384,0.00766 -1.572144,0.04303 -2.197327,0.074646c-1.451111,0.073364 -2.287994,0.133942 -3.188019,0.200012c-0.94635,0.069489 -1.92157,0.14798 -2.908478,0.235504c-0.982422,0.087128 -1.943085,0.176941 -2.863525,0.280487c-1.658722,0.186584 -2.365631,0.29361 -2.997314,0.398682c-0.573303,0.095367 -1.100311,0.198486 -1.597504,0.299988c-0.965607,0.197113 -1.459656,0.316284 -2.5625,0.5c-1.308929,0.218048 -2.042542,0.299469 -2.81601,0.389343c-0.808533,0.093964 -1.647614,0.178864 -2.510986,0.253479c-0.880646,0.076111 -2.672791,0.19516 -3.574341,0.235687c-0.909119,0.040863 -1.834595,0.067566 -2.783997,0.08548c-0.981262,0.018524 -2.002655,0.026947 -3.071991,0.031525c-1.125336,0.004822 -3.576019,0.004486 -4.913177,0.004486c-1.400177,0 -2.846344,0 -4.321503,0c-1.487152,0 -2.96933,0 -4.429504,0c-1.421173,0 -4.078491,0 -5.285004,0c-1.125488,0 -2.178986,0 -3.169495,0c-0.936493,0 -1.828003,0 -2.683502,0c-0.828491,0 -2.440491,0 -3.240814,0c-0.802338,0 -1.608673,0 -2.421021,0c-0.820313,0 -1.650665,0 -2.492981,0c-0.856354,0 -2.619019,0.000519 -3.527344,-0.000153c-0.918335,-0.000671 -1.8367,-0.002228 -2.744995,-0.010529c-0.888367,-0.008118 -1.746796,-0.020905 -2.565002,-0.046478c-0.768494,-0.024017 -2.115936,-0.100647 -2.676819,-0.164337c-0.493805,-0.056061 -0.929169,-0.128693 -1.315521,-0.214508c-0.353302,-0.078461 -0.679199,-0.172852 -0.991486,-0.268494c-0.310394,-0.095062 -0.963501,-0.299255 -1.329163,-0.395325c-0.391632,-0.102875 -0.810516,-0.199677 -1.253998,-0.28952c-0.463867,-0.093994 -0.948669,-0.179169 -1.452026,-0.253479c-0.517975,-0.076477 -1.595703,-0.193909 -2.151306,-0.236176c-0.567108,-0.043152 -1.148834,-0.075012 -1.746002,-0.117004c-0.61554,-0.043274 -1.251495,-0.093964 -1.90802,-0.17099c-0.682281,-0.080048 -2.126129,-0.323425 -2.887329,-0.497162c-0.785645,-0.179321 -1.578369,-0.392334 -2.369995,-0.622498c-0.785065,-0.228241 -1.547913,-0.469543 -2.279999,-0.712524c-0.69455,-0.23053 -1.921173,-0.664337 -2.437012,-0.858337c-0.460052,-0.173004 -0.873779,-0.337494 -1.250977,-0.502472c-0.358765,-0.156921 -1.056946,-0.49527 -2.232025,-1.140015c-0.476105,-0.26123 -0.990631,-0.563385 -2.167999,-1.186676c-0.641632,-0.339661 -1.320496,-0.680786 -2.035492,-1.012482c-0.736969,-0.341888 -2.29303,-0.977356 -3.105652,-1.257996c-0.820801,-0.283478 -1.657257,-0.536713 -2.497528,-0.781525c-0.838074,-0.244171 -1.674011,-0.473511 -2.497498,-0.709503c-0.809845,-0.232086 -2.365356,-0.710358 -3.097809,-0.973145c-0.710205,-0.254822 -1.390717,-0.526459 -2.046021,-0.804016c-0.637329,-0.269928 -1.251312,-0.547913 -1.847992,-0.821991c-0.58197,-0.267303 -1.701782,-0.791016 -2.783997,-1.267334c-0.523941,-0.230621 -1.545166,-0.664124 -2.040009,-0.874664c-0.960297,-0.4086 -1.882065,-0.806152 -2.776001,-1.217346c-0.464081,-0.21347 -1.47905,-0.697357 -2.056,-0.973328c-0.639053,-0.305695 -1.350906,-0.648926 -3.047989,-1.453339c-1.000717,-0.474335 -2.089478,-0.986542 -3.246002,-1.520996c-1.198105,-0.55365 -2.418365,-1.109222 -3.641998,-1.647003c-1.197098,-0.526123 -2.340149,-1.045837 -4.445343,-1.832001c-0.891129,-0.332794 -1.693268,-0.582977 -2.408997,-0.779999c-0.636688,-0.175262 -1.21582,-0.304108 -1.742996,-0.419983c-0.488831,-0.107422 -0.961609,-0.181549 -1.848007,-0.466675c-0.460587,-0.148163 -0.923035,-0.349426 -1.394989,-0.571503c-0.488235,-0.229767 -0.981369,-0.488464 -1.485001,-0.760498c-0.516403,-0.278931 -1.037537,-0.576508 -2.12001,-1.167999c-0.553238,-0.302307 -1.115891,-0.60022 -1.681488,-0.899994c-0.566406,-0.300232 -1.691788,-0.897675 -2.242004,-1.200012c-0.541763,-0.297699 -1.581879,-0.891418 -2.540497,-1.498657c-0.462128,-0.292725 -1.346542,-0.883514 -1.784012,-1.165344c-0.864151,-0.556671 -2.203629,-1.322083 -2.674667,-1.552002c-0.971268,-0.47406 -1.492264,-0.688141 -2.029327,-0.909332c-1.135086,-0.467468 -2.381195,-0.94165 -3.045166,-1.195984c-0.686691,-0.263031 -1.389862,-0.530823 -2.101501,-0.804016c-0.714035,-0.274139 -1.423264,-0.547791 -2.119492,-0.821991c-0.678421,-0.267181 -2.530701,-1.028046 -3.07518,-1.267334c-1.009216,-0.443573 -1.477341,-0.664825 -2.379166,-1.080841c-0.44075,-0.203308 -1.781525,-0.805603 -2.709,-1.204498c-0.466248,-0.200531 -1.392761,-0.59494 -1.841995,-0.799988c-1.283157,-0.585632 -2.044556,-0.99292 -2.748505,-1.399994c-0.679977,-0.393219 -1.335861,-0.814331 -2.382324,-1.399689c-0.717239,-0.401215 -1.429733,-0.774841 -2.112,-1.085999c-1.091446,-0.497772 -1.881165,-0.6745 -2.867004,-1.047668c-0.560959,-0.212341 -1.495621,-0.676361 -2.141998,-0.961334c-1.086731,-0.479095 -1.862305,-0.646973 -2.69133,-1.038666c-0.696472,-0.329071 -1.432846,-0.828766 -2.333344,-1.5c-0.543015,-0.404755 -1.189514,-0.984344 -2.097168,-1.70932c-0.585632,-0.467773 -1.227066,-0.943329 -1.820999,-1.451996c-0.763992,-0.654327 -1.268387,-1.558716 -1.858154,-2.105347c-0.678482,-0.628845 -1.564117,-0.886261 -2.346344,-1.299988c-0.732208,-0.387268 -1.460114,-0.892914 -2.210663,-1.600006c-0.525513,-0.495087 -1.322906,-1.097351 -2,-1.5c-0.835281,-0.496735 -1.474014,-1.037292 -2.321503,-1.600159c-0.67984,-0.451508 -1.305222,-0.752777 -2.077164,-1.38385c-0.601318,-0.491577 -1.409103,-1.37674 -1.975998,-1.880005c-0.759613,-0.674347 -1.47084,-1.003021 -2.141342,-1.435974c-0.865387,-0.558777 -1.114441,-1.532776 -1.817322,-2.033356c-0.711395,-0.506653 -1.815292,-0.408569 -2.362167,-0.871155c-0.767349,-0.649078 -1.200699,-1.170197 -1.952667,-1.948181c-0.497803,-0.515015 -0.957672,-1.421204 -1.519836,-2.145996c-0.571701,-0.737091 -1.264679,-0.926697 -2.03183,-1.522491c-0.805557,-0.625641 -1.299149,-1.136444 -2.174835,-1.628174c-0.931061,-0.522827 -1.468246,-0.915436 -2.029831,-1.459656c-0.805374,-0.780457 -1.349167,-1.411591 -1.938339,-1.876678c-0.852936,-0.673309 -1.701874,-1.018127 -2.157166,-1.755981c-0.334076,-0.541412 -0.768738,-1.571411 -1.199997,-2.301178c-0.468246,-0.792328 -1.036194,-1.384979 -1.952667,-1.957153c-0.679977,-0.42453 -1.610794,-0.780548 -2.060669,-1.5c-0.448685,-0.71756 -0.333984,-1.751221 -0.897339,-2.261353c-0.703827,-0.637329 -1.083099,-1.35083 -1.489494,-2.138672c-0.414352,-0.803284 -0.758385,-1.420746 -1.383835,-2.199982c-0.495361,-0.617157 -1.085373,-1.163315 -1.758835,-2.200012c-0.377449,-0.581024 -0.847412,-1.604889 -1.157166,-2.189331c-0.387894,-0.731873 -1.079826,-1.524017 -1.517334,-2.412003c-0.322166,-0.65387 -0.801941,-1.447845 -1.267998,-2.009323c-0.809807,-0.975586 -1.158531,-1.591125 -1.613335,-2.304001c-0.476128,-0.746292 -1.087769,-1.643661 -1.165329,-2.310669c-0.116508,-1.001892 -0.090492,-1.871643 -0.536003,-2.674667c-0.444664,-0.801483 -0.693077,-1.624039 -1.204498,-2.199997c-0.650223,-0.732269 -1.062607,-1.59729 -1.579498,-2.216003c-0.548836,-0.656952 -0.609047,-1.390533 -0.717339,-2.283997c-0.111481,-0.919785 -0.808533,-1.454086 -0.987999,-2.400009c-0.16777,-0.884277 0.084801,-1.844528 -0.294662,-2.599991c-0.435585,-0.867203 -0.713753,-1.499985 -0.716003,-2.400009c-0.002251,-0.899994 0,-1.799988 0,-2.699997c0,-0.899994 0,-1.800003 0,-2.699997c0,-0.88533 0,-1.825333 0,-2.516006c0,-1.073334 0,-1.883987 0,-2.783997l0,-0.901337\").attr(pencil_options).fill(this.body_color).style(\"pointer-events: visiblefill;\");\n    this.nose = this.gp.path(\"m188,195c1,0.166672 1.660568,0.661545 2.333328,1.166672c0.661102,0.496368 1.386841,1.02626 2.333344,1.5c0.664444,0.33255 1.675247,0.822983 2.105331,1.189331c0.807083,0.687485 1.391281,1.260712 1.716003,1.548004c1.024338,0.90625 1.764267,1.496475 2.137329,1.79599c0.74855,0.600983 1.497971,1.19136 2.207993,1.800003c0.68718,0.589066 1.31694,1.182022 1.919998,1.727997c0.557205,0.504471 1.543625,1.330093 2.225845,1.730331c0.996765,0.584763 1.723251,0.690216 2.450165,1.341675c0.653397,0.585587 0.435364,1.666168 0.856003,2.399994c0.393555,0.686569 1.209732,1.335983 2.035995,1.900177c0.659393,0.450256 1.252686,0.73381 1.921494,1.547989c0.498611,0.606995 1.313553,1.271729 1.782501,1.962509c0.499756,0.73616 0.99678,1.590225 1.674667,2.032166c0.733917,0.47847 1.503311,0.900345 2.400009,1.235657c0.850632,0.318085 1.765869,0.375458 2.5,0.0495c0.871078,-0.386765 1.115463,-1.387833 1.500168,-2.349487c0.212952,-0.532303 0.516861,-1.397552 0.785156,-1.979843c0.560944,-1.217438 0.943604,-1.803131 1.325333,-2.398666c0.775101,-1.209244 1.185562,-1.801224 1.58934,-2.389328c0.396317,-0.577225 1.200439,-1.643631 1.597336,-2.126663c0.561615,-0.683487 1.132568,-1.333267 1.433334,-2.366669c0.226425,-0.777954 0.129196,-1.594193 0.594666,-2.64534c0.362427,-0.818466 1.036835,-1.355499 1.453156,-2.11499c0.377899,-0.689407 0.055008,-1.761475 0.142334,-2.536179c0.114182,-1.012833 0.68251,-1.69458 0.979172,-2.541656c0.274536,-0.783905 0.465332,-1.514206 1.099838,-2.457672c0.428131,-0.636612 1.05275,-1.667572 0.35849,-2.000671c-0.849808,-0.40773 -1.805664,-0.020828 -2.710159,-0.020828c-0.717499,0 -1.756866,0.041336 -2.497498,-0.035995c-1.117157,-0.116638 -1.828018,-0.656555 -2.734665,-0.878677c-0.674744,-0.165298 -1.758835,-0.085327 -2.61618,-0.085327c-0.785156,0 -1.735825,0 -2.50116,0c-0.994171,0 -1.741501,0 -2.762665,0c-0.936005,0 -1.835999,0 -2.736176,0c-0.785156,0 -1.735825,0 -2.50116,0c-0.998672,0 -1.79866,0 -2.797333,0c-0.765335,0 -1.847748,-0.078217 -2.70134,0.000168c-0.911438,0.083694 -1.437653,0.761002 -2.399994,0.979004c-0.877991,0.198898 -1.800003,0.020828 -2.699997,0.020828c-0.900009,0 -1.800003,0 -2.557175,0c-0.895493,0 -1.766968,-0.107117 -2.742828,0.020828c-0.838486,0.10994 -1.525528,0.490509 -2.5,0.979172c-0.782516,0.39241 -1.313553,0.904648 -2.014664,1.563995c-0.554947,0.521896 -1.638,0.436005 -2.332672,0.436005l-1.005997,0.010666l-0.646667,0.489334l-0.610672,0.489334\").attr(pencil_options).fill(this.nose_color);\n    this.left_mouth = this.gp.path(\"m220,219c0,1 0.06073,1.804459 -0.035995,2.707993c-0.114166,1.066376 -0.322433,1.657776 -0.464005,2.333679c-0.225189,1.075119 -0.374756,2.136963 -0.451828,2.79216c-0.104019,0.884171 -0.312607,1.893051 -0.898834,2.494171c-0.738052,0.75679 -1.093353,1.333923 -1.434677,2.154663c-0.34935,0.840057 -1.208298,1.291779 -1.91333,1.802673c-0.773941,0.560837 -0.846909,1.565536 -1.620163,1.710159c-0.934311,0.174744 -1.701996,0.003036 -2.498505,0.004501c-1.220993,0.002258 -2.046783,-0.013077 -2.934494,0.352661c-0.743607,0.306366 -1.515884,0.585007 -2.268997,0.626511c-0.795547,0.043839 -2.030197,-0.073441 -2.817505,0.077988c-0.938614,0.180527 -1.531525,0.718048 -2.497665,0.917511c-0.757141,0.156311 -1.751236,0.399918 -2.506836,0.672668c-0.890991,0.321625 -1.857162,0.352661 -2.757172,0.352661c-0.899994,0 -1.699997,0 -2.599991,0c-0.841675,0 -1.842667,0 -2.550674,0c-0.981323,0 -1.939529,0.007904 -2.916,0c-0.658722,-0.005341 -1.661423,-0.176514 -2.422668,-0.574661c-0.805252,-0.421158 -1.510666,-0.868011 -2.010666,-1.574677l-0.599991,-0.681335l-0.900009,-0.390991l-0.599991,-0.540009\").attr(pencil_options);\n    this.right_mouth = this.gp.path(\"m217,221c1,0.520828 1.731003,1.114822 2.105331,1.757172c0.434174,0.745026 1.077316,1.420151 1.727997,2.076157c0.643204,0.648468 1.373703,1.18483 1.809509,1.866669c0.526657,0.82399 0.783981,1.708817 1.457169,2.400009c0.493362,0.506561 1.132965,1.296371 1.899994,1.733322c0.779861,0.44426 1.030746,1.310959 1.704498,1.809509c0.694275,0.513748 1.740036,0.261703 2.495499,0.641159c0.867203,0.435577 1.593719,0.810776 2.300003,1.216003c0.793121,0.455048 1.699997,0.5 2.600006,0.5c0.899994,0 1.699997,0 2.599991,0c0.900009,0 1.806442,0.097931 2.710663,-0.010666c0.928055,-0.11145 1.56778,-0.550644 2.567841,-0.867996c0.805878,-0.255722 1.501785,-0.663132 2.221497,-1.320007c0.584503,-0.533478 1.57222,-0.846756 2.100006,-1.511169c0.47049,-0.592285 1.106522,-1.465286 1.533325,-2.290161c0.348038,-0.672638 1.065872,-1.322601 1.145844,-2.020828c0.124496,-1.086929 0.020828,-1.979172 0.020828,-2.779175l0,-0.899994\").attr(pencil_options);\n    this.left_tooth = this.gp.path(\"m204,236c0,0.886673 -0.001694,1.835999 0,2.601334c0.002258,1.016663 0.015289,1.744873 0.166672,3.065338c0.048096,0.419464 0.185608,1.344055 0.333328,2.333328c0.074463,0.498703 0.239624,1.461166 0.378494,2.713837c0.103073,0.929718 0.119247,1.610992 0.121506,2.671494c0.002014,0.947998 0,1.62001 0,2.609329c0,0.862335 -0.100815,1.813126 0.035995,2.641342c0.143997,0.871704 0.726288,1.681259 0.906845,2.606827c0.16449,0.843201 0.057159,1.757172 0.057159,2.557159c0,0.900024 0,1.800018 0,2.700012c0,0.899994 -0.251343,2.070068 0.446671,2.463989c0.762527,0.430328 1.763992,0.036011 2.753159,0.036011c0.779343,0 1.778671,0 2.495667,0c0.940506,0 1.789841,0 2.709,0c0.994171,0 1.763611,-0.086945 2.710175,0.001343c0.896744,0.083649 1.536911,0.803802 2.38533,0.977814c0.871246,0.178711 1.467712,-0.521149 1.501328,-1.464478c0.025864,-0.725708 0.225357,-1.713043 0.498672,-2.535522c0.220337,-0.663055 0.437134,-1.661682 0.479172,-2.479156c0.041931,-0.815155 0.022568,-1.813324 0.020828,-2.65332c-0.002258,-1.089508 -0.308868,-1.897766 -0.647339,-2.603851c-0.407623,-0.850342 -0.179596,-1.77829 -0.373489,-2.722c-0.179031,-0.871338 -0.800949,-1.38446 -0.943176,-2.346161c-0.147568,-0.997787 0.077377,-1.773483 -0.056824,-2.695496c-0.143814,-0.988052 -0.674164,-1.618668 -0.893845,-2.593842c-0.195465,-0.867691 -0.085327,-1.763992 -0.085327,-2.589828c0,-0.895508 -0.126541,-1.677216 -0.647339,-2.348175c-0.45311,-0.583755 -0.352661,-1.547333 -0.352661,-2.447327c0,-0.899994 0,-1.800003 0,-2.699997l0,-0.900009l0,-0.899994l0,-0.800003\").attr(pencil_options).fill(this.tooth_color);\n    this.right_tooth = this.gp.path(\"m217,232c0,2.78934 -0.00067,3.51466 0,4.5c0.00067,0.98399 -0.08159,1.71381 0.284,2.616c0.33093,0.81667 0.68956,1.70892 0.71468,2.40001c0.03575,0.9836 0.30885,1.96034 0.57599,2.69466c0.28397,0.78059 0.37366,1.76982 0.42534,2.62267c0.05348,0.88251 0.97871,1.06789 1.564,1.81334c0.56136,0.715 0.41798,1.5641 0.43617,2.55333c0.01471,0.80014 0.15224,1.80476 0.42517,2.60001c0.27631,0.80507 0.54201,1.79877 0.57016,2.59999c0.03502,0.99673 -0.51299,2.03424 0.17117,2.60001c0.55486,0.45883 1.66933,0 2.43466,0c0.98967,0 1.828,0 2.84151,0c0.74249,0 1.79999,0 2.75716,0c0.90001,0 1.8,0 2.60001,0c0.89999,0 1.91393,0.13571 2.58932,-0.436c0.62949,-0.53284 0.61067,-1.564 0.61067,-2.36398c0,-0.90001 0,-1.80002 0,-2.70001c0,-0.89999 0.10696,-1.80653 -0.00133,-2.7c-0.11148,-0.91978 -0.80867,-1.45406 -0.98801,-2.40001c-0.17152,-0.90477 0.03773,-1.88942 -0.04666,-2.61066c-0.11696,-0.99956 -0.54106,-1.74231 -0.79733,-2.62267c-0.22562,-0.77505 -0.16667,-1.81934 -0.16667,-2.51401c0,-1.02733 0,-1.974 0,-2.65266c0,-1.116 0,-1.884 0,-2.836l0,-0.76534\").attr(pencil_options).fill(this.tooth_color);\n    this.right_eye = this.gp.path(\"m225,149c-0.64734,-0.7045 -0.99466,-1.59996 -1,-2.5c-0.00533,-0.89998 -0.22646,-1.87158 0.16667,-2.66667c0.3197,-0.64659 0.82416,-1.45154 1.25867,-2.23332c0.45537,-0.81931 0.90576,-1.41428 1.67467,-1.82133c0.75754,-0.40105 1.3898,-0.96405 1.98399,-1.49467c0.60133,-0.537 1.50323,-0.88528 2.31599,-1.25867c0.88704,-0.4075 1.5874,-0.94029 2.40001,-1.024c0.89526,-0.09221 1.8,-0.00133 2.7,-0.00133c0.89999,0 1.8,0 2.7,0c0.90001,0 1.83826,-0.17355 2.60001,0.08533c0.88791,0.30176 1.64061,0.64948 2.4955,0.91917c0.76736,0.2421 0.85019,1.40024 1.7045,1.82883c0.73018,0.36632 1.75885,0.22668 2.3,0.87201c0.56677,0.67589 1.34221,1.21129 1.64732,2.009c0.25101,0.65623 0.28569,1.70874 0.66335,2.44966c0.43147,0.84648 1.1877,1.48413 1.3685,2.35683c0.19571,0.94467 0.0078,1.68993 0.021,2.679c0.01039,0.77954 0.27751,1.74806 0.64717,2.49567c0.39427,0.79739 0.35272,1.78984 0.35266,2.51517c-0.00009,0.98917 0.14709,1.81754 -0.2215,2.76801c-0.27289,0.70369 -0.90105,1.56364 -1.41451,2.16c-0.60225,0.69949 -1.54785,0.79689 -2.31334,1.28667c-0.666,0.42613 -1.44456,0.52856 -2.41466,1c-0.77759,0.37788 -1.52695,0.64304 -2.29317,0.92732c-0.75316,0.27943 -1.73901,0.60002 -2.68567,0.64284c-0.89908,0.04066 -1.85716,0.0045 -2.75717,0.0045c-0.89999,0 -1.7,0 -2.59999,0c-0.90001,0 -1.813,0.14209 -2.7,-0.01067c-0.83315,-0.14348 -1.7887,-0.52843 -2.31467,-1.07333c-0.66631,-0.69029 -0.5015,-1.64546 -1.28534,-2.08267c-0.65187,-0.3636 -1.24619,-1.20728 -2,-1.66666c-0.67435,-0.41095 -0.86061,-1.23083 -1.22133,-2.14517c-0.25897,-0.65643 -0.75221,-1.5425 -0.77884,-2.343c-0.02957,-0.88939 -0.22116,-1.87849 -0.49983,-2.6785l-0.216,-0.60001l-0.23132,-0.9955l-0.13667,-0.91916\").attr(pencil_options).fill(this.eye_color);\n    this.left_eye = this.gp.path(\"m183,146c0,1 -0.097076,1.976089 0.646667,2.563995c0.713379,0.563904 1.657394,0.384216 2.331833,1.100174c0.50206,0.532959 0.596237,1.403656 1.222839,2.365158c0.471817,0.723984 1.325775,1.10553 1.937332,1.570679c0.814804,0.619736 0.861328,1.599991 0.861328,2.5c0,0.899994 0.124283,1.677429 0.574661,2.5c0.427292,0.78038 0.425339,1.699997 0.425339,2.599991c0,0.900009 0,1.800003 0,2.600006c0,0.899994 0.005325,1.800018 0,2.699997c-0.005341,0.90004 -0.226761,1.766586 -0.886673,2.300003c-0.709488,0.573486 -1.4673,0.82312 -2.477325,1.174667c-0.841858,0.293015 -1.464142,0.674026 -2.335999,1.078003c-0.831635,0.385345 -1.499115,0.892822 -2.466675,0.947327c-0.853058,0.04805 -1.838394,0.151031 -2.433334,0.352661c-0.807419,0.273636 -1.796127,0.595505 -2.563995,0.636673c-1.077332,0.05777 -1.936188,0.00621 -2.721329,0.010666c-0.940048,0.005341 -1.942749,0.177368 -2.61467,0.5c-0.815186,0.391418 -1.754074,0.661591 -2.613327,0.214661c-0.702072,-0.365173 -0.887909,-1.389572 -1.456009,-2.201324c-0.410233,-0.586166 -1.006439,-1.167282 -1.543991,-2.195999c-0.270294,-0.517273 -0.319229,-1.38176 -0.838501,-2.498505c-0.359665,-0.773499 -1.458557,-0.670288 -1.933838,-1.528671c-0.31514,-0.569153 -0.114334,-1.65416 -0.114334,-2.590164c0,-0.899994 0,-1.800171 0,-2.585327c0,-0.940002 -0.017685,-1.948212 0,-2.70401c0.020844,-0.890564 0.904617,-1.044708 1.666672,-1.743988c0.549179,-0.503937 0.833237,-1.312805 1.482666,-1.717331c0.842041,-0.524506 0.950684,-1.488937 1.701324,-1.888c0.91748,-0.487762 1.434723,-1.018646 2.482666,-1.06134c0.671448,-0.027359 1.416641,0.037689 2.523666,-0.000168c0.835449,-0.02858 1.606064,-0.573486 2.443008,-0.947159c0.772156,-0.344742 1.5,-0.768677 2.335999,-1.042007l0.847992,-0.011993l0.863342,-0.055832l0.895493,-0.295502\").attr(pencil_options).fill(this.eye_color);\n    this.front_left_leg = this.gp.path(\"m264,317c0,1.020844 0.005005,1.978668 0,2.884003c-0.004517,0.81369 -0.061462,1.651978 -0.170654,2.485321c-0.148407,1.132629 -0.269684,1.824493 -0.401337,2.597351c-0.143738,0.843872 -0.30722,1.747314 -0.490509,2.699982c-0.191254,0.994049 -0.396393,2.018219 -0.625488,3.059998c-0.463989,2.109985 -0.728607,3.151855 -0.99469,4.17868c-0.261017,1.007202 -0.528961,1.984863 -0.796478,2.928009c-0.256622,0.904816 -0.508759,1.762665 -0.751495,2.567993c-0.432007,1.433228 -0.626709,2.049103 -0.800018,2.609344c-0.159668,0.516083 -0.309601,1.000824 -0.448486,1.468475c-0.137115,0.4617 -0.272461,0.931427 -0.403503,1.423523c-0.291687,1.095306 -0.440796,1.724945 -0.600006,2.402649c-0.167908,0.71463 -0.334869,1.456726 -0.49649,2.215515c-0.162415,0.762543 -0.320892,1.518524 -0.451508,2.260498c-0.353333,2.007263 -0.406158,2.59668 -0.459503,3.150818c-0.100677,1.045929 -0.119781,1.558807 -0.192505,2.602509c-0.078888,1.132355 -0.200027,2.400116 -0.269989,3.071503c-0.07135,0.684662 -0.147568,1.372955 -0.222,2.056488c-0.072906,0.669464 -0.262787,2.503662 -0.303833,3.029663c-0.071533,0.91684 -0.109924,1.682526 -0.120178,2.615692c-0.013519,1.230255 -0.001328,2.030334 -0.001328,2.934814l-0.001328,0.957184l-0.165344,0.799988l-0.480667,0.700012\").attr(pencil_options);\n    this.front_right_leg = this.gp.path(\"m245,329c0,1 0,1.799988 0,2.757172c0,0.899994 0,1.647339 0,2.642822c0,0.800018 0.118988,1.812378 -0.020828,2.55835c-0.184067,0.982025 -1.005264,1.528931 -1.389832,2.34967c-0.242004,0.51651 -0.748856,1.695831 -1.074677,2.29599c-0.34317,0.632111 -0.744934,1.294067 -1.115997,2.052002c-0.632339,1.291626 -0.80246,1.791351 -1.188004,2.798676c-0.192398,0.502686 -0.51976,1.486877 -1.043991,2.711975c-0.264511,0.618164 -0.705551,1.263916 -1.166672,2.333344c-0.232147,0.538391 -0.469299,1.501892 -0.757172,2.084839c-0.481445,0.974976 -1.558334,1.340332 -2.000168,2.079315c-0.456909,0.764221 -0.253784,1.676666 -0.947998,2.521515c-0.492859,0.599792 -1.140717,1.261108 -1.580002,2.015656c-0.350266,0.601654 -1.010162,1.455841 -1.357498,2.203186l-0.271835,0.994171l-0.074661,0.76532\").attr(pencil_options);\n    this.back_left_leg = this.gp.path(\"m419,313c0,1.020844 -0.170227,2.014679 0.085327,2.798676c0.281311,0.863007 0.827393,1.329987 1.398682,2.538666c0.176819,0.374084 0.515747,1.183594 0.863312,2.009155c0.485687,1.153656 0.778717,1.795288 1.131836,2.63266c0.330231,0.783081 0.624573,1.662933 0.825348,2.339691c0.220276,0.742493 0.434448,1.553192 0.862152,2.847809c0.303162,0.917664 0.480499,1.372864 0.8125,2.270844c0.310059,0.838684 0.700623,1.891998 0.920013,2.665344c0.199493,0.703186 0.598572,2.064575 0.764984,2.546661c0.186646,0.54071 0.621124,1.739014 0.856689,2.371338c0.237793,0.638336 0.46814,1.271698 1.145813,2.979156c0.187531,0.472473 0.52832,1.262146 0.912018,2.208008c0.224121,0.55246 0.618866,1.765564 0.842651,2.47467c0.245056,0.776459 0.526825,1.61496 0.912018,2.483978c0.409637,0.924194 0.662537,1.375153 1.145813,2.270844c0.453705,0.840881 1.066803,1.876862 1.264832,2.421173c0.33139,0.910919 0.234863,1.796234 0.541351,2.626648c0.275269,0.745789 0.814575,1.714325 1.193817,2.473022c0.399445,0.799133 0.492706,1.70697 0.541687,2.5625c0.040894,0.714233 0.468689,1.598267 0.8125,2.479156c0.281555,0.721344 0.166656,1.652679 0.166656,2.515991c0,0.963165 -0.132721,1.894501 0.004486,2.783997c0.143677,0.931396 0.711517,1.5 0.991028,2.400024l0.004486,0.899994l0,0.920837\").attr(pencil_options);\n    this.back_right_leg = this.gp.path(\"m405,340c0,1 -0.126434,1.776245 -0.574677,2.600006c-0.42984,0.789917 -0.384186,1.723938 -0.446167,2.420837c-0.087708,0.986053 -0.455994,1.762268 -0.69516,2.579163c-0.290588,0.992523 -0.278656,1.671967 -0.283997,2.733337c-0.004883,0.967499 0,1.645813 0,2.613312c0,0.997345 0.100128,1.85965 -0.036011,2.689331c-0.144073,0.878174 -0.566589,1.712677 -0.679993,2.306671c-0.216431,1.133575 -0.232361,2.063446 -0.258667,2.548004c-0.052765,0.971893 -0.011688,1.904449 -0.246674,3.001831c-0.197937,0.924408 -0.735931,1.704498 -0.778656,2.607513c-0.042511,0.898987 0,1.657166 0,2.552673l0,0.863312l0,0.963165\").attr(pencil_options);\n    this.right_eye_closed = this.gp.path(\"m221,151c1.60001,0.57466 2.41254,0.84938 3.3,1.0045c0.92831,0.16226 1.46861,0.84732 2.39999,0.991c0.8895,0.13722 1.8,0.0045 2.7,0.0045c0.90001,0 1.8,0 2.70001,0c0.89999,0 1.7,0 2.59999,0c0.90001,0 1.8,0 2.7,0c0.90001,0 1.8,0 2.70001,0c0.89999,0 1.7,0 2.59999,0c0.90001,0 1.83475,0.0529 2.60001,-0.35266c0.84589,-0.4483 1.7,-0.64734 2.5,-0.64734c0.89999,0 1.8,0 2.7,0l0.89999,-0.01067\").attr(pencil_options).hide();\n    this.left_eye_closed = this.gp.path(\"m166,162c1.2215,0.87866 2.05083,1.30084 2.7,1.64734c0.84938,0.45335 1.8,0.35266 2.7,0.35266c0.90001,0 1.8,0 2.70001,0c0.89999,0 1.7,0 2.59999,0c0.90001,0 1.8,0 2.7,0c0.90001,0 1.8,0 2.70001,0c0.89999,0 1.7,0 2.59999,0c0.90001,0 1.8,0 2.7,0c0.90001,0 1.80165,0.05437 2.70001,-0.00017c0.70386,-0.04272 1.46399,-0.6105 1.89999,-1.479l0.57466,-0.54616\").attr(pencil_options).hide();\n    this.chef_hat = this.gp.path(\"m254.66666,123.38715c-1.59822,-1.90525 -1.74286,-2.18921 -1.97221,-2.80299c-0.23416,-0.62663 -0.48505,-1.52592 -0.58244,-2.05294c-0.09012,-0.48769 -0.13368,-0.97831 -0.224,-1.50317c-0.16171,-0.9397 -0.25934,-1.29899 -0.46935,-2.06238c-0.1084,-0.39406 -0.3488,-1.17628 -0.48711,-1.55143c-0.37373,-1.01379 -0.64914,-1.56999 -0.95934,-2.05093c-0.29474,-0.45696 -0.8649,-1.11961 -1.28244,-1.60369c-0.44673,-0.51794 -0.89372,-1.07033 -1.07666,-1.36863c-0.56168,-0.9159 -0.73299,-1.59927 -0.79401,-1.94856c-0.12607,-0.72157 -0.13475,-1.09941 -0.1489,-1.87897c-0.01482,-0.81647 -0.00356,-1.23857 -0.00356,-1.66895c0,-0.88211 0,-1.33198 0,-1.78649c0,-0.45821 0.00067,-1.84587 -0.00021,-2.30981c-0.00089,-0.46395 -0.00145,-0.92794 -0.01401,-1.39183c-0.02512,-0.92802 -0.05371,-1.39219 -0.09955,-1.85577c-0.09184,-0.92875 -0.1792,-1.39246 -0.35045,-2.33224c-0.08768,-0.48119 -0.18103,-0.97289 -0.254,-1.47952c-0.07524,-0.52242 -0.15874,-1.06476 -0.17067,-2.2195c-0.00636,-0.61632 0.04129,-1.25613 0.108,-1.91376c0.06822,-0.67239 0.16452,-1.35356 0.276,-2.03902c0.11162,-0.68629 0.23499,-1.36774 0.50488,-2.69705c0.13007,-0.64056 0.26462,-1.26215 0.40001,-1.86505c0.13133,-0.58479 0.26439,-1.15085 0.39999,-1.69803c0.13113,-0.52916 0.25914,-1.04025 0.53334,-2.00423c0.12955,-0.45547 0.26491,-0.89324 0.394,-1.31667c0.12514,-0.41043 0.24777,-0.80933 0.358,-1.19975c0.10793,-0.38222 0.22444,-0.75739 0.3591,-1.50441c0.1337,-0.74168 0.1539,-1.11755 0.22223,-1.87511c0.03474,-0.38519 0.0965,-1.17439 0.22223,-1.99109c0.06509,-0.42282 0.25122,-1.29472 0.3591,-1.74442c0.11028,-0.45964 0.23215,-0.92799 0.358,-1.40575c0.12836,-0.48724 0.39627,-1.48897 0.66068,-2.52601c0.13449,-0.52751 0.26666,-1.05903 0.39999,-1.59225c0.13333,-0.53323 0.2655,-1.06474 0.39999,-1.59225c0.26439,-1.03704 0.39928,-1.54286 0.53334,-2.04135c0.13261,-0.49311 0.26666,-0.98232 0.39999,-1.46977c0.13333,-0.48745 0.40297,-1.46939 0.66667,-2.47436c0.13507,-0.51479 0.26768,-1.03933 0.40601,-1.57277c0.14078,-0.54291 0.28586,-1.09525 0.442,-1.65628c0.15892,-0.571 0.31905,-1.15266 0.70755,-2.33827c0.19936,-0.60841 0.42076,-1.22151 0.64799,-1.8386c0.22787,-0.61886 0.46304,-1.23503 0.696,-1.84695c0.23016,-0.60453 0.46362,-1.19733 0.87823,-2.3457c0.19739,-0.54675 0.37695,-1.07578 0.54001,-1.58668c0.1568,-0.49125 0.29745,-0.96445 0.42001,-1.41967c0.11725,-0.4356 0.2283,-0.85223 0.37332,-1.63308c0.0672,-0.36175 0.15628,-1.04214 0.19446,-1.68179c0.01855,-0.31118 0.02689,-0.93113 0.02774,-5.28879c0.00012,-0.62849 0,-0.94366 0,-1.59442c0,-0.70272 0,-1.48709 0,-1.91763c0,-0.92232 0,-1.40296 0,-1.88918c0,-0.48621 0,-0.96685 0,-1.43637c0,-1.28713 0,-1.66401 0,-2.34075c0,-0.58024 -0.15186,-1.07822 0.00604,-1.9583c0.11099,-0.61876 0.93329,-0.75769 1.87488,-0.75978c1.008,-0.00223 1.66888,0.04185 2.65845,-0.05305c1.07288,-0.10288 1.58798,-0.28583 2.39398,-0.48018c1.05927,-0.25542 1.87302,-0.34376 2.71466,-0.41817c0.5994,-0.05299 1.93274,-0.23925 2.66669,-0.37115c0.76651,-0.13776 1.54657,-0.30077 2.75266,-0.42049c0.8136,-0.08076 1.24167,-0.08717 2.14334,-0.10284c0.9971,-0.01733 2.12268,-0.0099 2.74176,-0.0099c1.33691,0 2.04401,0 2.76981,0c0.73911,0 1.48621,0 2.23599,0c1.48621,0 2.21289,0 2.92621,0c0.70001,0 2.06,0 2.72,0c0.64667,0 1.28,0.00161 3.10089,-0.00015c0.58621,-0.00056 1.7561,-0.00758 2.35022,-0.01917c0.60764,-0.01186 1.23581,-0.01557 3.27777,-0.13532c0.75357,-0.04419 1.54169,-0.1081 2.362,-0.17676c0.84903,-0.07107 1.72156,-0.15079 2.61401,-0.23522c0.90887,-0.08598 1.82941,-0.17653 3.69067,-0.36126c0.93292,-0.09259 1.86319,-0.18518 2.78799,-0.27837c0.91696,-0.09239 1.8233,-0.18475 2.716,-0.27836c0.87708,-0.09198 1.73615,-0.18111 3.38489,-0.37115c0.78784,-0.09081 1.55261,-0.18451 2.298,-0.28254c0.73193,-0.09626 1.45288,-0.19788 2.16599,-0.3076c0.71225,-0.10958 1.42749,-0.22219 2.86932,-0.4924c0.74075,-0.13882 1.4855,-0.29209 2.23001,-0.45095c0.73993,-0.15788 1.46539,-0.32029 2.17001,-0.48435c0.67981,-0.15829 1.32782,-0.31029 2.48889,-0.61117c0.50952,-0.13204 0.97256,-0.2591 1.396,-0.38414c0.77426,-0.22865 1.49033,-0.46559 2.604,-0.85304c0.84979,-0.29565 1.31134,-0.45203 2.25,-0.83123c0.49103,-0.19836 1.48743,-0.63649 2.41666,-1.17919c0.47372,-0.27666 0.9313,-0.57842 1.77423,-1.25203c0.43216,-0.34536 0.83914,-0.71604 1.24197,-1.09815c0.40973,-0.38864 1.21909,-1.20088 2.00067,-2.05789c0.39395,-0.43198 0.77036,-0.87045 1.12201,-1.31389c0.34698,-0.43754 0.68137,-0.87095 0.94199,-1.31389c0.7316,-1.24335 0.81726,-1.66302 0.91269,-2.05372c0.17758,-0.7271 0.21967,-1.3868 0.22867,-2.19971c0.0065,-0.58733 0.03415,-1.15448 -0.00357,-1.84216c-0.02731,-0.49784 -0.14389,-1.06598 -0.75378,-1.77659c-0.33487,-0.39018 -0.89117,-0.69591 -1.46487,-1.48462c-0.38654,-0.53137 -0.409,-1.14283 -0.88889,-1.85577c-0.2641,-0.39235 -0.72064,-0.75961 -1.23199,-1.14687c-0.56152,-0.42525 -1.55054,-1.10153 -1.90756,-1.34481c-0.75461,-0.51419 -1.15524,-0.78381 -2.04111,-1.31683c-0.4653,-0.27997 -1.48157,-0.83519 -2.03201,-1.10897c-0.56418,-0.28062 -1.75415,-0.82005 -2.37067,-1.07511c-0.61557,-0.25468 -1.23547,-0.49729 -1.862,-0.7154c-1.21042,-0.42137 -2.39084,-0.74621 -2.95532,-0.88737c-0.54318,-0.13583 -1.57928,-0.36176 -2.52557,-0.56756c-0.85272,-0.18544 -1.6062,-0.37203 -2.62933,-0.65199c-0.67435,-0.18453 -1.7742,-0.4721 -2.62753,-0.64828c-0.45639,-0.09423 -1.42639,-0.26544 -1.93423,-0.33898c-1.03873,-0.15042 -2.10333,-0.2616 -3.17334,-0.32538c-0.5369,-0.03201 -1.62592,-0.06245 -2.17953,-0.06928c-1.13232,-0.01398 -2.30756,-0.009 -2.91425,-0.01005c-1.25333,-0.00217 -1.90005,-0.00757 -2.56,-0.01918c-0.67343,-0.01185 -1.36063,-0.02655 -2.06,-0.05985c-2.18134,-0.10387 -2.9248,-0.18221 -3.66998,-0.24805c-0.73929,-0.06532 -1.46454,-0.13632 -2.17001,-0.20599c-0.67896,-0.06705 -1.32175,-0.14642 -2.99689,-0.28208c-0.88672,-0.07181 -1.66013,-0.10316 -2.37601,-0.16145c-1.11868,-0.09109 -1.97012,-0.21325 -2.92932,-0.35569c-0.52048,-0.07729 -1.6395,-0.25078 -2.24002,-0.33898c-1.27896,-0.18785 -1.95807,-0.27837 -2.65421,-0.36868c-0.7034,-0.09125 -2.09772,-0.26135 -2.76978,-0.33898c-0.64221,-0.07418 -1.24295,-0.15636 -2.73535,-0.29182c-0.99603,-0.09041 -1.73203,-0.10524 -2.73221,-0.11289c-0.88806,-0.0068 -1.90079,-0.15653 -1.41779,-0.3945c0.46191,-0.22758 1.69882,-0.36988 2.62045,-0.51962c0.67218,-0.1092 1.52295,-0.31812 2.25778,-0.54065c0.8479,-0.25678 1.73865,-0.54538 2.19446,-0.67426c1.2804,-0.36206 2.04004,-0.4868 2.95663,-0.63514c1.004,-0.16247 1.39603,-0.52655 1.73935,-1.24599c0.24344,-0.5101 0.47488,-0.91998 0.54599,-1.42461c0.13104,-0.93009 0.01459,-1.29652 -0.12265,-2.06857c-0.07175,-0.40355 -0.25732,-1.21751 -0.34134,-1.6207c-0.16101,-0.77261 -0.25626,-1.48042 -0.35733,-2.11929c-0.09192,-0.58099 -0.15396,-1.13452 -0.61023,-1.81989c-0.30353,-0.45594 -0.79529,-0.85655 -1.28799,-1.27491c-0.78336,-0.66516 -1.32184,-1.1454 -1.88312,-1.65473c-0.29218,-0.26514 -0.91266,-0.81289 -1.26578,-1.0813c-1.12756,-0.85702 -1.59073,-1.11831 -2.5209,-1.66896c-0.47549,-0.2815 -0.96692,-0.55536 -1.45398,-0.83509c-1.44684,-0.83103 -1.90384,-1.11139 -2.34689,-1.38811c-0.84485,-0.52769 -1.22116,-0.79089 -1.95889,-1.23641c-0.89874,-0.54277 -1.6059,-0.85089 -2.35599,-1.03475c-0.98251,-0.24083 -1.80652,-0.4646 -2.51334,-0.66621c-0.4118,-0.11747 -1.93692,-0.52209 -2.5531,-0.67148c-0.66946,-0.16231 -1.39752,-0.32897 -2.18604,-0.49689c-0.84518,-0.18 -1.7525,-0.36277 -2.72598,-0.53864c-2.12967,-0.38476 -3.2991,-0.5597 -4.52444,-0.73983c-1.27332,-0.18718 -2.59097,-0.36634 -3.94402,-0.53864c-1.37764,-0.17542 -2.7747,-0.3431 -4.18399,-0.49688c-2.81351,-0.307 -4.20699,-0.4333 -5.57512,-0.55549c-1.33234,-0.11898 -2.6201,-0.22478 -3.85201,-0.32011c-1.16458,-0.09013 -2.25217,-0.16892 -3.252,-0.23662c-1.692,-0.11456 -2.36765,-0.15429 -2.9351,-0.18681c-0.47122,-0.027 -0.85857,-0.04699 -1.174,-0.05985c-0.25526,-0.01041 -0.46265,-0.01625 -0.634,-0.01809c-0.28264,-0.00305 -0.41632,-0.00273 -0.55112,0.00123c-0.1377,0.00404 -0.28023,0.0135 -0.42599,0.03619c-0.15497,0.02411 -0.34196,0.03579 -0.86111,0.27063c-0.70139,0.31728 -1.17116,0.67336 -1.72667,1.05114c-0.94774,0.64452 -1.27727,0.88805 -1.994,1.3793c-0.37047,0.25393 -1.133,0.76652 -1.52977,1.01572c-1.17938,0.74075 -1.99185,1.17751 -2.388,1.39183c-0.77753,0.42066 -1.18089,0.61069 -1.89223,1.0547c-1.05376,0.65775 -1.64168,1.17487 -1.93243,1.43018c-0.57538,0.50522 -1.09369,1.02276 -1.91444,1.71952c-0.51567,0.43776 -1.04927,0.82966 -1.524,1.22203c-0.66853,0.55256 -1.22177,1.10306 -1.48734,1.46946c-0.56017,0.77284 -0.69312,1.32394 -0.71622,1.80474c-0.03308,0.68858 -0.0112,1.30886 0.00821,2.01026c0.00998,0.36054 -0.05759,1.07304 0.20801,1.92629c0.15961,0.51278 0.06332,0.36101 -0.70934,-0.07547c-0.34593,-0.19541 -1.16301,-0.66549 -1.61423,-0.9551c-1.02597,-0.65853 -1.56073,-1.05657 -2.12622,-1.48214c-0.59659,-0.44898 -1.20451,-0.9287 -1.828,-1.4308c-0.64238,-0.5173 -1.29108,-1.05207 -1.948,-1.59782c-1.33244,-1.10696 -1.99561,-1.66502 -2.65955,-2.21826c-0.65784,-0.54815 -1.30739,-1.0881 -1.948,-1.61592c-0.6252,-0.51512 -1.23347,-1.01411 -1.828,-1.49065c-1.11092,-0.89042 -1.63391,-1.29289 -2.13333,-1.66896c-0.47231,-0.35564 -0.92815,-0.68776 -1.37201,-0.99654c-0.42386,-0.29488 -0.83826,-0.57256 -1.252,-0.82953c-0.79356,-0.49288 -1.20067,-0.71524 -1.60533,-0.9316c-0.40118,-0.21449 -0.80859,-0.42084 -1.226,-0.61658c-0.84085,-0.39428 -2.19217,-0.95005 -2.66733,-1.13263c-0.97055,-0.37295 -1.46999,-0.54979 -1.97156,-0.72313c-0.99252,-0.34301 -1.47331,-0.52114 -2.90578,-0.92712c-0.90593,-0.25674 -1.37688,-0.36774 -2.38667,-0.53353c-0.54591,-0.08963 -1.13837,-0.16734 -2.48534,-0.25981c-0.76463,-0.05249 -1.59442,-0.07927 -2.48199,-0.09743c-0.9418,-0.01927 -1.93472,-0.02292 -2.974,-0.01392c-1.08211,0.00937 -2.20352,0.02497 -4.54401,0.11135c-1.21251,0.04475 -2.44319,0.10683 -3.68399,0.18094c-1.24458,0.07434 -2.4836,0.16151 -3.70801,0.26444c-1.20496,0.1013 -2.38455,0.19931 -4.608,0.4825c-1.04433,0.13302 -2.04034,0.28991 -2.996,0.46348c-0.93242,0.16936 -1.84079,0.36053 -2.73199,0.57205c-0.89294,0.21192 -1.78972,0.44005 -3.60533,0.9749c-0.94962,0.27973 -1.90971,0.58568 -2.87799,0.9019c-0.97131,0.3172 -1.92946,0.64193 -2.86601,0.96871c-0.91096,0.31786 -1.78595,0.62517 -3.36711,1.22234c-0.70399,0.26587 -1.34525,0.51978 -1.92999,0.76411c-0.54398,0.2273 -1.04594,0.44994 -1.51001,0.67226c-0.44472,0.21305 -0.87224,0.42566 -1.6711,0.88335c-0.40497,0.232 -0.80048,0.47832 -1.194,0.72932c-0.39404,0.2513 -0.77951,0.50693 -1.15802,0.76272c-0.37303,0.25209 -0.73489,0.50182 -1.42577,0.98232c-0.32721,0.22757 -0.64388,0.44768 -0.946,0.66668c-0.29697,0.21528 -0.58591,0.4327 -0.862,0.65833c-0.27911,0.22812 -0.56299,0.46305 -1.08089,0.9947c-0.27574,0.28305 -0.53696,0.58925 -0.794,0.91026c-0.26403,0.32974 -0.52747,0.66973 -0.99644,1.38688c-0.23722,0.36276 -0.67825,1.09947 -1.02377,1.84742c-0.17027,0.36857 -0.43041,1.11128 -0.49422,1.48462c-0.12637,0.73928 -0.0797,1.49324 0.18667,2.22445c0.13503,0.37064 0.31375,0.74238 0.86044,1.42028c0.27534,0.34142 1.35655,1.25443 1.78489,1.51138c0.85339,0.51193 1.33249,0.71912 2.27554,1.10032c0.45509,0.18395 1.75645,0.64086 2.51022,0.90314c0.68977,0.24002 1.35823,0.4726 2.048,0.71262c1.16621,0.40579 1.59999,0.55673 2.51022,0.87345c0.46577,0.16207 1.3923,0.48394 2.688,0.93531c0.38631,0.13458 1.63538,0.32234 1.99422,0.79999c0.37343,0.49707 -0.62634,0.85562 -1.25111,1.02485c-1.14067,0.30897 -2.06946,0.47148 -2.57066,0.57653c-1.10123,0.23081 -1.70403,0.36042 -2.33955,0.50972c-1.39301,0.32725 -2.14259,0.53104 -2.94223,0.74107c-0.85014,0.2233 -1.75391,0.4615 -2.724,0.6973c-1.03157,0.25075 -2.13461,0.50669 -3.32399,0.73906c-2.60842,0.5096 -4.06202,0.71449 -5.58578,0.92418c-1.58025,0.21746 -3.20944,0.4135 -4.868,0.59849c-1.66947,0.18621 -3.33785,0.35667 -4.98801,0.51497c-3.17713,0.30478 -4.67792,0.43205 -6.10667,0.55797c-1.35392,0.11933 -2.62964,0.2297 -3.822,0.33821c-1.10629,0.10069 -2.12305,0.19301 -3.042,0.29646c-1.54446,0.17386 -2.16004,0.27248 -2.68266,0.3724c-0.45319,0.08664 -0.84451,0.18227 -1.192,0.27836c-0.32446,0.08972 -0.63203,0.19008 -0.952,0.27837c-0.7091,0.19565 -1.13902,0.28093 -1.61066,0.37239c-0.50698,0.09832 -1.04572,0.19324 -1.604,0.29646c-0.5724,0.10583 -1.1526,0.21191 -1.724,0.33821c-1.11609,0.24671 -1.63417,0.39848 -2.12801,0.55797c-0.48357,0.15618 -0.94774,0.32958 -1.39799,0.51498c-0.45117,0.18578 -0.89499,0.38665 -1.33801,0.59849c-0.91828,0.43909 -1.38824,0.67954 -1.87022,0.93159c-0.49905,0.26098 -1.00751,0.54023 -1.51401,0.84762c-0.52679,0.31971 -1.06064,0.6661 -1.574,1.0564c-1.09952,0.83593 -1.60871,1.33372 -2.128,1.8533c-0.5363,0.5366 -1.05103,1.10344 -1.548,1.69107c-0.50229,0.59391 -0.98248,1.20018 -1.42799,1.81634c-0.8749,1.20998 -1.24999,1.81318 -1.58934,2.40755c-0.3306,0.57905 -0.61481,1.1548 -0.81599,1.73004c-0.19666,0.56233 -0.33967,1.12755 -0.33601,1.68828c0.0073,1.1175 0.25561,1.67771 0.52978,2.22322c0.27784,0.55278 0.65112,1.08712 1.08401,1.59782c0.43153,0.50911 0.91285,0.99168 1.44399,1.4308c1.01317,0.83762 1.57829,1.17473 2.12801,1.48585c0.53495,0.30276 1.09685,0.57101 1.67799,0.81422c0.58702,0.24566 1.20802,0.47115 1.858,0.68895c1.38375,0.46369 2.14452,0.68911 2.93689,0.93407c0.8285,0.25613 1.694,0.51997 2.594,0.79334c0.93288,0.28337 1.89843,0.57497 2.894,0.87685c2.07864,0.63029 3.15654,0.96066 4.256,1.29409c1.11164,0.33713 2.22922,0.67369 3.35,0.99933c1.11037,0.32261 2.20591,0.63558 3.29,0.91582c2.06155,0.53293 3.0484,0.74023 3.99289,0.92665c0.90153,0.17794 1.77106,0.32713 2.606,0.45791c0.79893,0.12514 1.5683,0.23155 2.306,0.33265c1.38818,0.19024 2.04273,0.28169 2.67555,0.37363c0.61696,0.08963 1.22248,0.17915 1.824,0.26027c0.60028,0.08095 1.20567,0.15868 1.82401,0.21852c1.28444,0.1243 1.96519,0.15587 2.66133,0.18558c0.70345,0.03002 1.40614,0.04795 2.098,0.05985c0.67171,0.01155 1.31422,0.01627 1.918,0.0181c1.05421,0.00319 1.48894,-0.00076 1.86489,0.00371c0.32539,0.00388 0.60914,0.01114 0.856,0.03619c0.22265,0.02259 0.42978,0.05812 0.616,0.1197c0.39835,0.1317 0.59515,0.24918 0.80888,0.37487c0.23444,0.13786 0.47364,0.30176 0.714,0.49131c0.25982,0.2049 0.52644,0.43495 0.774,0.70009c0.85024,0.91059 1.07389,1.29261 1.31955,1.6821c0.51646,0.81885 0.72614,1.26014 0.92622,1.70917c0.20183,0.45297 0.52513,1.3773 0.62845,1.8434c0.20581,0.92854 0.23477,1.40131 0.26843,1.87495c0.03397,0.4778 0.04692,0.96157 0.052,1.45168c0.01042,1.00333 0.00366,2.0463 -0.00244,2.58864c-0.00629,0.55999 -0.01836,1.14043 -0.04199,1.74396c-0.02466,0.62964 -0.05223,1.28844 -0.17422,2.702c-0.06561,0.7601 -0.15482,1.55027 -0.248,2.36471c-0.09523,0.83225 -0.19766,1.67538 -0.29601,2.52338c-0.0981,0.84601 -0.20354,1.68313 -0.34489,3.30822c-0.06741,0.77512 -0.11278,1.52658 -0.146,2.25755c-0.03246,0.71407 -0.05109,1.41531 -0.062,2.10723c-0.01083,0.68631 -0.01289,1.37079 -0.01422,2.74901c-0.00067,0.70086 0.00027,1.41289 -0.012,2.13785c-0.01253,0.73987 -0.03629,1.49657 -0.084,2.27146c-0.04899,0.79575 -0.10103,1.61529 -0.34844,3.32307c-0.12978,0.89583 -0.30905,1.81284 -0.496,2.74886c-0.18988,0.95069 -0.3955,1.90964 -0.592,2.87413c-0.1964,0.96397 -0.40932,1.92134 -0.68978,3.81052c-0.13622,0.91753 -0.22559,1.81831 -0.292,2.70014c-0.06496,0.86264 -0.10204,1.70724 -0.124,2.53313c-0.02147,0.80721 -0.02666,1.59595 -0.02844,3.11769c-0.00085,0.73334 0,1.44997 0,2.15176c0,0.6888 0,1.36647 0,2.03486c0,0.66096 -0.00022,1.31636 0,2.61787c0.00011,0.6503 -0.00014,1.30524 0.006,1.96944c0.00626,0.67814 0.0183,1.37487 0.042,2.0947c0.02461,0.74778 0.05202,1.52837 0.17422,3.2043c0.06591,0.90388 0.15488,1.84737 0.26,2.82401c0.10807,1.0041 0.23393,2.02845 0.38,3.06619c0.14722,1.046 0.296,2.09425 0.69334,4.16188c0.19449,1.01205 0.4173,2.00118 0.64799,2.96598c0.22457,0.93922 0.45975,1.84785 0.69601,2.7238c0.22697,0.84156 0.4534,1.64445 0.87822,3.12512c0.19344,0.67422 0.37592,1.31084 0.56398,1.91654c0.18187,0.5857 0.37244,1.15852 0.58801,1.72448c0.21812,0.57264 0.45029,1.16053 1.07022,2.39023c0.33781,0.67008 0.73146,1.36217 1.144,2.07383c0.4194,0.7235 0.8546,1.44482 1.28801,2.15733c0.42261,0.69478 0.83951,1.3587 1.56799,2.57333c0.31729,0.52903 0.59564,1.0098 0.838,1.4489c0.22134,0.40105 0.41563,0.7733 0.58601,1.1232c0.16142,0.33154 0.30988,0.65327 0.57599,1.2941c0.13635,0.32834 0.26685,0.66434 0.40001,1.0035c0.1335,0.34004 0.26524,0.67856 0.39999,1.01186c0.13196,0.32642 0.25552,0.64459 0.53334,1.23222c0.12799,0.27077 0.26421,0.52351 0.39398,0.76411c0.12448,0.23076 0.24806,0.45296 0.35802,0.67226c0.10823,0.21591 0.22191,0.43092 0.3591,0.88335c0.07149,0.23575 0.11415,0.48717 0.15199,0.75438c0.04068,0.28705 0.07045,0.59879 0.104,0.93808c0.0367,0.37085 0.06934,0.77748 0.18845,1.70979c0.06804,0.53262 0.15562,1.10376 0.254,1.70638c0.1024,0.62717 0.21579,1.27081 0.33801,1.92351c0.12265,0.65501 0.24489,1.30496 0.5191,2.55602c0.12939,0.5903 0.26408,1.15631 0.412,1.70082c0.14381,0.52937 0.30171,1.04562 0.48399,1.55049c0.18135,0.50226 0.36992,1.00644 0.88177,2.0067c0.2648,0.51746 0.57166,1.03235 0.90201,1.53937c0.32584,0.50009 0.66898,0.97847 1.034,1.42244c0.34384,0.41821 0.64409,0.82477 1.39734,1.36833c0.30263,0.21838 0.63133,0.36261 0.946,0.43703c0.28751,0.06799 0.58315,0.07593 0.862,0.0529c0.27702,-0.02289 0.54279,-0.08714 1.08089,-0.18063c0.26576,-0.04617 0.53668,-0.07883 0.812,-0.10995c0.28291,-0.032 0.57755,-0.06152 0.884,-0.10161c0.32385,-0.04236 0.67137,-0.08549 1.41512,-0.25238c0.41708,-0.09358 0.85312,-0.21761 1.314,-0.35352c0.48682,-0.14357 0.99194,-0.30315 1.51801,-0.47046c0.54552,-0.17351 1.10464,-0.35831 2.27911,-0.7225c0.60541,-0.18774 1.22655,-0.37317 1.866,-0.55255c0.65298,-0.18318 1.32608,-0.36072 2.022,-0.52751c0.71252,-0.17078 1.44543,-0.34373 3.00089,-0.62106c0.80927,-0.14429 1.64685,-0.26509 2.502,-0.37996c0.86755,-0.11655 1.74754,-0.22125 2.634,-0.32152c0.8882,-0.10046 1.77631,-0.19284 3.53065,-0.38106c0.85994,-0.09225 1.70547,-0.18442 2.53401,-0.28253c0.81235,-0.09619 1.60611,-0.19655 2.37799,-0.3076c0.75302,-0.10834 1.48891,-0.21158 2.86578,-0.4924c0.65765,-0.13412 1.28412,-0.29012 1.886,-0.45094c0.58391,-0.15604 1.14278,-0.32066 1.68199,-0.48436c0.52255,-0.15865 1.02232,-0.32225 1.98756,-0.61116c0.45882,-0.13733 0.90898,-0.26329 1.35199,-0.37997c0.43526,-0.11464 0.86929,-0.22124 1.304,-0.3215c0.43553,-0.10046 0.87666,-0.19797 1.78845,-0.38106c0.47253,-0.09488 0.96004,-0.18671 1.45999,-0.28255c0.51338,-0.0984 1.04054,-0.19942 1.58,-0.30759c0.55391,-0.11108 1.12361,-0.22366 2.29333,-0.4924c0.60793,-0.13966 1.22278,-0.293 1.84201,-0.45512c0.62347,-0.16324 1.24309,-0.33452 1.85399,-0.51358c0.60376,-0.17699 1.19698,-0.35155 2.304,-0.73242c0.5244,-0.18042 1.02046,-0.36894 1.498,-0.55673c0.46643,-0.18341 0.91902,-0.37074 1.366,-0.55673c0.44502,-0.18517 0.88631,-0.37639 1.80267,-0.74231c0.47112,-0.18811 0.95779,-0.37286 1.45999,-0.55255c0.51112,-0.18288 1.03741,-0.36002 1.58,-0.5275c0.55078,-0.17003 1.11227,-0.34068 2.29333,-0.62106c0.60315,-0.14319 1.22917,-0.26431 1.866,-0.39667c1.32996,-0.27641 2.02591,-0.43097 2.73689,-0.61549c0.74181,-0.19254 2.29279,-0.6801 3.09889,-0.98512c0.84421,-0.31943 1.69879,-0.68102 2.57201,-1.06474c0.8967,-0.39404 1.79941,-0.81003 2.71599,-1.23177c0.92522,-0.42572 2.78487,-1.27699 3.72112,-1.68628c0.9287,-0.40599 1.85747,-0.79803 2.786,-1.17331c0.91644,-0.37041 1.82918,-0.72368 2.73801,-1.0564c0.89218,-0.32661 2.65044,-0.92 3.51378,-1.18367c0.84172,-0.25706 1.6718,-0.49092 2.48599,-0.70565c0.79082,-0.20857 1.56471,-0.39779 2.31801,-0.57204c0.72768,-0.16833 2.11328,-0.46517 2.76711,-0.59802c0.62444,-0.12688 1.22026,-0.24285 1.786,-0.34795c0.53253,-0.09895 1.03233,-0.18721 1.498,-0.26445c0.42862,-0.0711 1.17349,-0.18288 1.48801,-0.22285c0.27756,-0.03527 0.52351,-0.06252 0.742,-0.07934c0.36731,-0.02827 1.34999,-0.0334 2.12444,-0.0334c1.02312,0 1.72011,0.03204 2.79066,-0.00015c0.88248,-0.02654 1.34836,-0.4829 1.36224,-1.11578c0.01245,-0.56749 0,-1.24352 0,-1.91021c0,-0.48621 0.02582,-0.98006 -0.00357,-1.90526c-0.01324,-0.41718 -0.04727,-1.03582 -0.58667,-1.74937c-0.29703,-0.39297 -0.98404,-0.90894 -1.31911,-1.29904c-0.61351,-0.71426 -0.74092,-1.3404 -0.89778,-1.77628c-0.27538,-0.76521 -0.61363,-1.35394 -0.81799,-1.6702c-0.4399,-0.68076 -0.69887,-1.03466 -1.29222,-1.75215c-0.6185,-0.74791 -0.9736,-1.11225 -1.32445,-1.47843c-0.68958,-0.71974 -1.04039,-1.05709 -1.66888,-1.70036c-0.28511,-0.29181 -0.84563,-1.0612 -1.36711,-1.65921c-0.45671,-0.52374 -1.3889,-0.54127 -2.16667,-0.54127c-0.744,0 -1.87045,0 -2.86644,0c-0.56201,0 -1.16135,0 -1.79401,0c-1.34933,0 -2.784,0 -3.52422,0c-0.7549,0 -1.52579,0 -2.31401,0c-0.80688,0 -1.63377,0 -2.48199,0c-0.8709,0 -2.686,-0.00045 -3.632,0.00015c-0.96866,0.00063 -1.95602,0.00221 -2.95799,0.00974c-1.0127,0.00761 -2.03214,0.02025 -3.054,0.04315c-1.02084,0.02287 -3.04251,0.09705 -4.03534,0.15248c-0.98053,0.05474 -1.9472,0.12259 -2.89999,0.19903c-0.94055,0.07546 -1.86707,0.16006 -2.78,0.24915c-0.90042,0.08786 -2.66028,0.27293 -3.51979,0.36713c-0.84538,0.09264 -1.67496,0.18664 -2.48599,0.28811c-0.79387,0.09932 -1.56775,0.20424 -2.31799,0.32151c-0.73067,0.11422 -2.1171,0.37335 -2.76868,0.52395c-0.63916,0.14772 -1.26422,0.31469 -1.884,0.49689c-0.631,0.18549 -1.27095,0.3923 -1.93199,0.61379c-0.69373,0.23244 -2.196,0.75576 -3.02045,1.04263c-0.86444,0.30079 -1.75555,0.61086 -2.66,0.92557c-0.90443,0.3147 -1.79555,0.62477 -2.66,0.92557c-0.82443,0.28687 -2.29984,0.80051 -2.92822,1.01881c-0.5574,0.19365 -1.0531,0.36562 -1.49799,0.51637c-0.40097,0.13586 -0.76875,0.25768 -1.11401,0.36605c-0.32857,0.10313 -0.98145,0.29188 -1.32178,0.38383c-0.35121,0.09489 -1.08865,0.28346 -1.85222,0.49719c-0.39316,0.11005 -1.59207,0.48425 -2.38933,0.78809c-0.83165,0.31694 -1.24852,0.50116 -2.1489,0.85287c-0.47331,0.1849 -2.03587,0.74049 -2.6031,0.92248c-0.57721,0.18519 -1.16289,0.36504 -2.32889,0.71014c-0.56482,0.16717 -1.1167,0.31638 -2.56378,0.75608c-0.817,0.24825 -1.58032,0.50182 -1.96777,0.63328c-0.83543,0.28345 -1.80681,0.62274 -2.97423,1.03057c-0.65431,0.22858 -1.34991,0.47304 -2.082,0.73349c-0.7666,0.27274 -1.56284,0.55813 -2.382,0.85876c-1.7045,0.62556 -2.57449,0.95802 -3.45599,1.2941c-0.88785,0.33849 -1.77536,0.68002 -2.662,1.01743c-0.87869,0.33438 -1.74498,0.66371 -2.60201,0.97567c-1.64227,0.5978 -2.4319,0.86263 -3.1911,1.10974c-0.72272,0.23524 -1.41327,0.44839 -2.06799,0.64025c-0.61121,0.17911 -1.18082,0.33833 -1.70801,0.47321c-0.89929,0.23007 -1.27641,0.30884 -1.60356,0.37488c-0.28279,0.05707 -1.26741,0.21106 -2.0551,0.55177c-0.82164,0.35541 -1.77434,0.45982 -2.08534,0.97737c-0.23436,0.39 -0.04799,1.39801 -0.04799,1.72339c0,0.71014 0,1.08006 0,1.81248c0,0.34764 0,1.45615 0,1.97391c0,0.72685 0,1.28358 0,1.95244c0,0.59926 -0.05508,1.21716 0.07622,1.69478c0.20161,0.73341 0.66061,1.10152 1.106,1.58421c0.59926,0.64946 1.02328,1.20651 1.45667,1.80504c0.21666,0.29924 0.63857,0.86958 1.03755,1.6105c0.35667,0.66235 0.75145,1.33672 1.08266,1.62224c0.57423,0.49504 1.27002,0.95345 1.87866,1.38673c0.64647,0.46021 1.20024,1.04062 1.35623,1.59735l0.00601,0.64952\").attr(pencil_options).fill(\"#ffffff\");\n    this.gp.scale(0.5);\n  }\n\n  Bunny.prototype.Click = function(callback) {\n    return this.gp.click(callback);\n  };\n\n  Bunny.prototype.ActNatural = function(forever) {\n    var _f, actions;\n    this.in_motion = true;\n    actions = [\n      (function(_this) {\n        return function(callback) {\n          return _this.Blink(callback);\n        };\n      })(this), (function(_this) {\n        return function(callback) {\n          return _this.Blink(callback);\n        };\n      })(this), (function(_this) {\n        return function(callback) {\n          return _this.Blink(callback);\n        };\n      })(this), (function(_this) {\n        return function(callback) {\n          return _this.TwitchTail(callback);\n        };\n      })(this), (function(_this) {\n        return function(callback) {\n          return _this.TwitchTail(callback);\n        };\n      })(this), (function(_this) {\n        return function(callback) {\n          return _this.WiggleNose(callback);\n        };\n      })(this), (function(_this) {\n        return function(callback) {\n          return _this.WiggleNose(callback);\n        };\n      })(this), (function(_this) {\n        return function(callback) {\n          return _this.TwitchEars(callback);\n        };\n      })(this), (function(_this) {\n        return function(callback) {\n          return _this.TwitchEars(callback);\n        };\n      })(this), (function(_this) {\n        return function(callback) {\n          return _this.Walk(callback);\n        };\n      })(this)\n    ];\n    if ((forever != null) && forever === true) {\n      this.keep_moving = true;\n    }\n    actions[Math.floor(Math.random() * actions.length)]((function(_this) {\n      return function() {\n        return _this.in_motion = false;\n      };\n    })(this));\n    if (this.keep_moving) {\n      _f = (function(_this) {\n        return function() {\n          return _this.ActNatural();\n        };\n      })(this);\n      return setTimeout(_f, Math.random() * 1000 + 750);\n    }\n  };\n\n  Bunny.prototype.Stop = function() {\n    return this.keep_moving = false;\n  };\n\n  Bunny.prototype.Blink = function(callback) {\n    var _fn;\n    this.right_eye_closed.show();\n    this.left_eye_closed.show();\n    this.right_eye.hide();\n    this.left_eye.hide();\n    _fn = (function(_this) {\n      return function() {\n        return _this.Unblink(callback);\n      };\n    })(this);\n    return setTimeout(_fn, this.blink_speed);\n  };\n\n  Bunny.prototype.Unblink = function(callback) {\n    this.right_eye_closed.hide();\n    this.left_eye_closed.hide();\n    this.right_eye.show();\n    this.left_eye.show();\n    return typeof callback === \"function\" ? callback() : void 0;\n  };\n\n  Bunny.prototype.WiggleNose = function(callback) {\n    var angle;\n    angle = Math.random() < 0.5 ? -10 : 10;\n    return this.nose.animate(this.tail_twitch_speed).during((function(_this) {\n      return function(v, m) {\n        return _this.nose.transform({\n          rotation: m(0, angle),\n          cx: 210,\n          cy: 215,\n          relative: false\n        });\n      };\n    })(this)).after((function(_this) {\n      return function() {\n        return _this.nose.animate(_this.ear_twitch_speed, '-').during(function(v, m) {\n          return _this.nose.transform({\n            rotation: m(angle, 0),\n            cx: 210,\n            cy: 215,\n            relative: false\n          });\n        }).after(function() {\n          return typeof callback === \"function\" ? callback() : void 0;\n        });\n      };\n    })(this));\n  };\n\n  Bunny.prototype.TwitchEars = function(callback) {\n    var dir;\n    dir = Math.random() < 0.5 ? -1 : 1;\n    this.TwitchEar(this.left_ear, dir);\n    return this.TwitchEar(this.right_ear, -1 * dir, callback);\n  };\n\n  Bunny.prototype.TwitchEar = function(e, dir, callback) {\n    var angle;\n    if (e == null) {\n      e = Math.random() < 0.5 ? this.left_ear : this.right_ear;\n    }\n    angle = 10 * (dir || (Math.random() < 0.5 ? 1 : -1));\n    return e.animate(this.ear_twitch_speed).during((function(_this) {\n      return function(v, m) {\n        return e.transform({\n          rotation: m(0, angle),\n          cx: 200,\n          cy: 100,\n          relative: false\n        });\n      };\n    })(this)).after((function(_this) {\n      return function() {\n        return e.animate(_this.ear_twitch_speed, '-').during(function(v, m) {\n          return e.transform({\n            rotation: m(angle, 0),\n            cx: 200,\n            cy: 100,\n            relative: false\n          });\n        }).after(function() {\n          return typeof callback === \"function\" ? callback() : void 0;\n        });\n      };\n    })(this));\n  };\n\n  Bunny.prototype.TwitchTail = function(callback) {\n    var angle;\n    angle = Math.random() < 0.5 ? 10 : -10;\n    return this.tail.animate(150).during((function(_this) {\n      return function(v, m) {\n        return _this.tail.transform({\n          rotation: m(0, angle),\n          relative: false\n        });\n      };\n    })(this)).rotate(Math.random() < 0.5 ? 10 : -10).after((function(_this) {\n      return function() {\n        return _this.tail.animate(_this.tail_twitch_speed, '-').during(function(v, m) {\n          return _this.tail.transform({\n            rotation: m(angle, 0),\n            relative: false\n          });\n        }).after(function() {\n          return typeof callback === \"function\" ? callback() : void 0;\n        });\n      };\n    })(this));\n  };\n\n  Bunny.prototype.Walk = function(callback) {\n    var d, duration, x, y;\n    if (this.walking) {\n      return typeof callback === \"function\" ? callback() : void 0;\n    }\n    x = Math.random() * window.innerWidth;\n    y = Math.random() * window.innerHeight;\n    d = Math.sqrt((x - this.gp.cx()) * (x - this.gp.cx()) + (y - this.gp.cy()) * (y - this.gp.cy()));\n    duration = 1000 * d * 1.0 / this.pixels_per_second;\n    return this.WalkTo(x, y, duration, callback);\n  };\n\n  Bunny.prototype.WalkTo = function(x, y, duration, callback) {\n    var d;\n    if ((x == null) || (y == null)) {\n      x = Math.random() * window.innerWidth;\n      y = Math.random() * window.innerHeight;\n    }\n    if (duration == null) {\n      d = Math.sqrt((x - this.gp.cx()) * (x - this.gp.cx()) + (y - this.gp.cy()) * (y - this.gp.cy()));\n      duration = 1000 * d * 1.0 / this.pixels_per_second;\n    }\n    this.gp.animate(duration).dmove(x - this.gp.cx(), y - this.gp.cy()).after(function() {\n      this.walking = false;\n      return typeof callback === \"function\" ? callback() : void 0;\n    });\n    return this.Run(duration);\n  };\n\n  Bunny.prototype.Run = function(duration, callback) {\n    var i, leg_speed;\n    if (duration == null) {\n      duration = 1000;\n    }\n    i = parseInt(this.leg_actions_per_second * duration * 1.0 / 1000);\n    leg_speed = 1000 * 1.0 / this.leg_actions_per_second;\n    return this._run1(i, leg_speed / 2, callback);\n  };\n\n  Bunny.prototype._run1 = function(i, leg_speed, callback) {\n    if (i <= 0) {\n      return typeof callback === \"function\" ? callback() : void 0;\n    }\n    this.front_left_leg.animate(leg_speed, '-').during((function(_this) {\n      return function(v, m) {\n        return _this.front_left_leg.transform({\n          rotation: 20 * v,\n          relative: false\n        });\n      };\n    })(this));\n    this.front_right_leg.animate(leg_speed, '-').during((function(_this) {\n      return function(v, m) {\n        return _this.front_right_leg.transform({\n          rotation: -20 * v,\n          relative: false\n        });\n      };\n    })(this));\n    this.back_left_leg.animate(leg_speed, '-').during((function(_this) {\n      return function(v, m) {\n        return _this.back_left_leg.transform({\n          rotation: 20 * v,\n          relative: false\n        });\n      };\n    })(this));\n    return this.back_right_leg.animate(leg_speed, '-').during((function(_this) {\n      return function(v, m) {\n        return _this.back_right_leg.transform({\n          rotation: -20 * v,\n          relative: false\n        });\n      };\n    })(this)).after((function(_this) {\n      return function() {\n        return _this._run2(i, leg_speed, callback);\n      };\n    })(this));\n  };\n\n  Bunny.prototype._run2 = function(i, leg_speed, callback) {\n    if (i <= 0) {\n      return typeof callback === \"function\" ? callback() : void 0;\n    }\n    this.front_left_leg.animate(leg_speed, '-').during((function(_this) {\n      return function(v, m) {\n        return _this.front_left_leg.transform({\n          rotation: 20 - 20 * v,\n          relative: false\n        });\n      };\n    })(this));\n    this.front_right_leg.animate(leg_speed, '-').during((function(_this) {\n      return function(v, m) {\n        return _this.front_right_leg.transform({\n          rotation: -20 + 20 * v,\n          relative: false\n        });\n      };\n    })(this));\n    this.back_left_leg.animate(leg_speed, '-').during((function(_this) {\n      return function(v, m) {\n        return _this.back_left_leg.transform({\n          rotation: 20 - 20 * v,\n          relative: false\n        });\n      };\n    })(this));\n    return this.back_right_leg.animate(leg_speed, '-').during((function(_this) {\n      return function(v, m) {\n        return _this.back_right_leg.transform({\n          rotation: -20 + 20 * v,\n          relative: false\n        });\n      };\n    })(this)).after((function(_this) {\n      return function() {\n        return _this._run1(i - 1, leg_speed, callback);\n      };\n    })(this));\n  };\n\n  return Bunny;\n\n})();\n\nmodule.exports = Bunny;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/Bunny.coffee\n ** module id = 2\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/Bunny.coffee?");

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_RESULT__;/*!\n* svg.js - A lightweight library for manipulating and animating SVG.\n* @version 2.2.4\n* http://www.svgjs.com\n*\n* @copyright Wout Fierens <wout@impinc.co.uk>\n* @license MIT\n*\n* BUILT: Sat Dec 12 2015 00:53:00 GMT+0100 (Mitteleuropäische Zeit)\n*/;\n(function(root, factory) {\r\n  if (true) {\r\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = function(){\r\n      return factory(root, root.document)\r\n    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\r\n  } else if (typeof exports === 'object') {\r\n    module.exports = root.document ? factory(root, root.document) : function(w){ return factory(w, w.document) }\r\n  } else {\r\n    root.SVG = factory(root, root.document)\r\n  }\r\n}(typeof window !== \"undefined\" ? window : this, function(window, document) {\r\n\r\n// The main wrapping element\r\nvar SVG = this.SVG = function(element) {\r\n  if (SVG.supported) {\r\n    element = new SVG.Doc(element)\r\n\r\n    if (!SVG.parser)\r\n      SVG.prepare(element)\r\n\r\n    return element\r\n  }\r\n}\r\n\r\n// Default namespaces\r\nSVG.ns    = 'http://www.w3.org/2000/svg'\r\nSVG.xmlns = 'http://www.w3.org/2000/xmlns/'\r\nSVG.xlink = 'http://www.w3.org/1999/xlink'\r\nSVG.svgjs = 'http://svgjs.com/svgjs'\r\n\r\n// Svg support test\r\nSVG.supported = (function() {\r\n  return !! document.createElementNS &&\r\n         !! document.createElementNS(SVG.ns,'svg').createSVGRect\r\n})()\r\n\r\n// Don't bother to continue if SVG is not supported\r\nif (!SVG.supported) return false\r\n\r\n// Element id sequence\r\nSVG.did  = 1000\r\n\r\n// Get next named element id\r\nSVG.eid = function(name) {\r\n  return 'Svgjs' + capitalize(name) + (SVG.did++)\r\n}\r\n\r\n// Method for element creation\r\nSVG.create = function(name) {\r\n  // create element\r\n  var element = document.createElementNS(this.ns, name)\r\n\r\n  // apply unique id\r\n  element.setAttribute('id', this.eid(name))\r\n\r\n  return element\r\n}\r\n\r\n// Method for extending objects\r\nSVG.extend = function() {\r\n  var modules, methods, key, i\r\n\r\n  // Get list of modules\r\n  modules = [].slice.call(arguments)\r\n\r\n  // Get object with extensions\r\n  methods = modules.pop()\r\n\r\n  for (i = modules.length - 1; i >= 0; i--)\r\n    if (modules[i])\r\n      for (key in methods)\r\n        modules[i].prototype[key] = methods[key]\r\n\r\n  // Make sure SVG.Set inherits any newly added methods\r\n  if (SVG.Set && SVG.Set.inherit)\r\n    SVG.Set.inherit()\r\n}\r\n\r\n// Invent new element\r\nSVG.invent = function(config) {\r\n  // Create element initializer\r\n  var initializer = typeof config.create == 'function' ?\r\n    config.create :\r\n    function() {\r\n      this.constructor.call(this, SVG.create(config.create))\r\n    }\r\n\r\n  // Inherit prototype\r\n  if (config.inherit)\r\n    initializer.prototype = new config.inherit\r\n\r\n  // Extend with methods\r\n  if (config.extend)\r\n    SVG.extend(initializer, config.extend)\r\n\r\n  // Attach construct method to parent\r\n  if (config.construct)\r\n    SVG.extend(config.parent || SVG.Container, config.construct)\r\n\r\n  return initializer\r\n}\r\n\r\n// Adopt existing svg elements\r\nSVG.adopt = function(node) {\r\n  // make sure a node isn't already adopted\r\n  if (node.instance) return node.instance\r\n\r\n  // initialize variables\r\n  var element\r\n\r\n  // adopt with element-specific settings\r\n  if (node.nodeName == 'svg')\r\n    element = node.parentNode instanceof SVGElement ? new SVG.Nested : new SVG.Doc\r\n  else if (node.nodeName == 'linearGradient')\r\n    element = new SVG.Gradient('linear')\r\n  else if (node.nodeName == 'radialGradient')\r\n    element = new SVG.Gradient('radial')\r\n  else if (SVG[capitalize(node.nodeName)])\r\n    element = new SVG[capitalize(node.nodeName)]\r\n  else\r\n    element = new SVG.Element(node)\r\n\r\n  // ensure references\r\n  element.type  = node.nodeName\r\n  element.node  = node\r\n  node.instance = element\r\n\r\n  // SVG.Class specific preparations\r\n  if (element instanceof SVG.Doc)\r\n    element.namespace().defs()\r\n\r\n  // pull svgjs data from the dom (getAttributeNS doesn't work in html5)\r\n  element.setData(JSON.parse(node.getAttribute('svgjs:data')) || {})\r\n\r\n  return element\r\n}\r\n\r\n// Initialize parsing element\r\nSVG.prepare = function(element) {\r\n  // Select document body and create invisible svg element\r\n  var body = document.getElementsByTagName('body')[0]\r\n    , draw = (body ? new SVG.Doc(body) : element.nested()).size(2, 0)\r\n    , path = SVG.create('path')\r\n\r\n  // Insert parsers\r\n  draw.node.appendChild(path)\r\n\r\n  // Create parser object\r\n  SVG.parser = {\r\n    body: body || element.parent()\r\n  , draw: draw.style('opacity:0;position:fixed;left:100%;top:100%;overflow:hidden')\r\n  , poly: draw.polyline().node\r\n  , path: path\r\n  }\r\n}\r\n\n// Storage for regular expressions\r\nSVG.regex = {\r\n  // Parse unit value\r\n  unit:             /^(-?[\\d\\.]+)([a-z%]{0,2})$/\r\n\r\n  // Parse hex value\r\n, hex:              /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i\r\n\r\n  // Parse rgb value\r\n, rgb:              /rgb\\((\\d+),(\\d+),(\\d+)\\)/\r\n\r\n  // Parse reference id\r\n, reference:        /#([a-z0-9\\-_]+)/i\r\n\r\n  // Parse matrix wrapper\r\n, matrix:           /matrix\\(|\\)/g\r\n\r\n  // Elements of a matrix\r\n, matrixElements:   /,*\\s+|,/\r\n\r\n  // Whitespace\r\n, whitespace:       /\\s/g\r\n\r\n  // Test hex value\r\n, isHex:            /^#[a-f0-9]{3,6}$/i\r\n\r\n  // Test rgb value\r\n, isRgb:            /^rgb\\(/\r\n\r\n  // Test css declaration\r\n, isCss:            /[^:]+:[^;]+;?/\r\n\r\n  // Test for blank string\r\n, isBlank:          /^(\\s+)?$/\r\n\r\n  // Test for numeric string\r\n, isNumber:         /^-?[\\d\\.]+$/\r\n\r\n  // Test for percent value\r\n, isPercent:        /^-?[\\d\\.]+%$/\r\n\r\n  // Test for image url\r\n, isImage:          /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i\r\n\r\n  // The following regex are used to parse the d attribute of a path\r\n\r\n  // Replaces all negative exponents\r\n, negExp:           /e\\-/gi\r\n\r\n  // Replaces all comma\r\n, comma:            /,/g\r\n\r\n  // Replaces all hyphens\r\n, hyphen:           /\\-/g\r\n\r\n  // Replaces and tests for all path letters\r\n, pathLetters:      /[MLHVCSQTAZ]/gi\r\n\r\n  // yes we need this one, too\r\n, isPathLetter:     /[MLHVCSQTAZ]/i\r\n\r\n  // split at whitespaces\r\n, whitespaces:      /\\s+/\r\n\r\n  // matches X\r\n, X:                /X/g\r\n}\nSVG.utils = {\r\n    // Map function\r\n    map: function(array, block) {\r\n    var i\r\n      , il = array.length\r\n      , result = []\r\n\r\n    for (i = 0; i < il; i++)\r\n      result.push(block(array[i]))\r\n\r\n    return result\r\n  }\r\n\r\n  // Degrees to radians\r\n, radians: function(d) {\r\n    return d % 360 * Math.PI / 180\r\n  }\r\n  // Radians to degrees\r\n, degrees: function(r) {\r\n    return r * 180 / Math.PI % 360\r\n  }\r\n, filterSVGElements: function(p) {\r\n    return [].filter.call(p, function(el){ return el instanceof SVGElement })\r\n  }\r\n\r\n}\n\r\nSVG.defaults = {\r\n  // Default attribute values\r\n  attrs: {\r\n    // fill and stroke\r\n    'fill-opacity':     1\r\n  , 'stroke-opacity':   1\r\n  , 'stroke-width':     0\r\n  , 'stroke-linejoin':  'miter'\r\n  , 'stroke-linecap':   'butt'\r\n  , fill:               '#000000'\r\n  , stroke:             '#000000'\r\n  , opacity:            1\r\n    // position\r\n  , x:                  0\r\n  , y:                  0\r\n  , cx:                 0\r\n  , cy:                 0\r\n    // size\r\n  , width:              0\r\n  , height:             0\r\n    // radius\r\n  , r:                  0\r\n  , rx:                 0\r\n  , ry:                 0\r\n    // gradient\r\n  , offset:             0\r\n  , 'stop-opacity':     1\r\n  , 'stop-color':       '#000000'\r\n    // text\r\n  , 'font-size':        16\r\n  , 'font-family':      'Helvetica, Arial, sans-serif'\r\n  , 'text-anchor':      'start'\r\n  }\r\n\r\n}\n// Module for color convertions\r\nSVG.Color = function(color) {\r\n  var match\r\n\r\n  // initialize defaults\r\n  this.r = 0\r\n  this.g = 0\r\n  this.b = 0\r\n\r\n  // parse color\r\n  if (typeof color === 'string') {\r\n    if (SVG.regex.isRgb.test(color)) {\r\n      // get rgb values\r\n      match = SVG.regex.rgb.exec(color.replace(/\\s/g,''))\r\n\r\n      // parse numeric values\r\n      this.r = parseInt(match[1])\r\n      this.g = parseInt(match[2])\r\n      this.b = parseInt(match[3])\r\n\r\n    } else if (SVG.regex.isHex.test(color)) {\r\n      // get hex values\r\n      match = SVG.regex.hex.exec(fullHex(color))\r\n\r\n      // parse numeric values\r\n      this.r = parseInt(match[1], 16)\r\n      this.g = parseInt(match[2], 16)\r\n      this.b = parseInt(match[3], 16)\r\n\r\n    }\r\n\r\n  } else if (typeof color === 'object') {\r\n    this.r = color.r\r\n    this.g = color.g\r\n    this.b = color.b\r\n\r\n  }\r\n\r\n}\r\n\r\nSVG.extend(SVG.Color, {\r\n  // Default to hex conversion\r\n  toString: function() {\r\n    return this.toHex()\r\n  }\r\n  // Build hex value\r\n, toHex: function() {\r\n    return '#'\r\n      + compToHex(this.r)\r\n      + compToHex(this.g)\r\n      + compToHex(this.b)\r\n  }\r\n  // Build rgb value\r\n, toRgb: function() {\r\n    return 'rgb(' + [this.r, this.g, this.b].join() + ')'\r\n  }\r\n  // Calculate true brightness\r\n, brightness: function() {\r\n    return (this.r / 255 * 0.30)\r\n         + (this.g / 255 * 0.59)\r\n         + (this.b / 255 * 0.11)\r\n  }\r\n  // Make color morphable\r\n, morph: function(color) {\r\n    this.destination = new SVG.Color(color)\r\n\r\n    return this\r\n  }\r\n  // Get morphed color at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // normalise pos\r\n    pos = pos < 0 ? 0 : pos > 1 ? 1 : pos\r\n\r\n    // generate morphed color\r\n    return new SVG.Color({\r\n      r: ~~(this.r + (this.destination.r - this.r) * pos)\r\n    , g: ~~(this.g + (this.destination.g - this.g) * pos)\r\n    , b: ~~(this.b + (this.destination.b - this.b) * pos)\r\n    })\r\n  }\r\n\r\n})\r\n\r\n// Testers\r\n\r\n// Test if given value is a color string\r\nSVG.Color.test = function(color) {\r\n  color += ''\r\n  return SVG.regex.isHex.test(color)\r\n      || SVG.regex.isRgb.test(color)\r\n}\r\n\r\n// Test if given value is a rgb object\r\nSVG.Color.isRgb = function(color) {\r\n  return color && typeof color.r == 'number'\r\n               && typeof color.g == 'number'\r\n               && typeof color.b == 'number'\r\n}\r\n\r\n// Test if given value is a color\r\nSVG.Color.isColor = function(color) {\r\n  return SVG.Color.isRgb(color) || SVG.Color.test(color)\r\n}\n// Module for array conversion\r\nSVG.Array = function(array, fallback) {\r\n  array = (array || []).valueOf()\r\n\r\n  // if array is empty and fallback is provided, use fallback\r\n  if (array.length == 0 && fallback)\r\n    array = fallback.valueOf()\r\n\r\n  // parse array\r\n  this.value = this.parse(array)\r\n}\r\n\r\nSVG.extend(SVG.Array, {\r\n  // Make array morphable\r\n  morph: function(array) {\r\n    this.destination = this.parse(array)\r\n\r\n    // normalize length of arrays\r\n    if (this.value.length != this.destination.length) {\r\n      var lastValue       = this.value[this.value.length - 1]\r\n        , lastDestination = this.destination[this.destination.length - 1]\r\n\r\n      while(this.value.length > this.destination.length)\r\n        this.destination.push(lastDestination)\r\n      while(this.value.length < this.destination.length)\r\n        this.value.push(lastValue)\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Clean up any duplicate points\r\n, settle: function() {\r\n    // find all unique values\r\n    for (var i = 0, il = this.value.length, seen = []; i < il; i++)\r\n      if (seen.indexOf(this.value[i]) == -1)\r\n        seen.push(this.value[i])\r\n\r\n    // set new value\r\n    return this.value = seen\r\n  }\r\n  // Get morphed array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // generate morphed array\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push(this.value[i] + (this.destination[i] - this.value[i]) * pos)\r\n\r\n    return new SVG.Array(array)\r\n  }\r\n  // Convert array to string\r\n, toString: function() {\r\n    return this.value.join(' ')\r\n  }\r\n  // Real value\r\n, valueOf: function() {\r\n    return this.value\r\n  }\r\n  // Parse whitespace separated string\r\n, parse: function(array) {\r\n    array = array.valueOf()\r\n\r\n    // if already is an array, no need to parse it\r\n    if (Array.isArray(array)) return array\r\n\r\n    return this.split(array)\r\n  }\r\n  // Strip unnecessary whitespace\r\n, split: function(string) {\r\n    return string.trim().split(/\\s+/)\r\n  }\r\n  // Reverse array\r\n, reverse: function() {\r\n    this.value.reverse()\r\n\r\n    return this\r\n  }\r\n\r\n})\n// Poly points array\r\nSVG.PointArray = function(array, fallback) {\r\n  this.constructor.call(this, array, fallback || [[0,0]])\r\n}\r\n\r\n// Inherit from SVG.Array\r\nSVG.PointArray.prototype = new SVG.Array\r\n\r\nSVG.extend(SVG.PointArray, {\r\n  // Convert array to string\r\n  toString: function() {\r\n    // convert to a poly point string\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push(this.value[i].join(','))\r\n\r\n    return array.join(' ')\r\n  }\r\n  // Convert array to line object\r\n, toLine: function() {\r\n    return {\r\n      x1: this.value[0][0]\r\n    , y1: this.value[0][1]\r\n    , x2: this.value[1][0]\r\n    , y2: this.value[1][1]\r\n    }\r\n  }\r\n  // Get morphed array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // generate morphed point string\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push([\r\n        this.value[i][0] + (this.destination[i][0] - this.value[i][0]) * pos\r\n      , this.value[i][1] + (this.destination[i][1] - this.value[i][1]) * pos\r\n      ])\r\n\r\n    return new SVG.PointArray(array)\r\n  }\r\n  // Parse point string\r\n, parse: function(array) {\r\n    array = array.valueOf()\r\n\r\n    // if already is an array, no need to parse it\r\n    if (Array.isArray(array)) return array\r\n\r\n    // split points\r\n    array = this.split(array)\r\n\r\n    // parse points\r\n    for (var i = 0, il = array.length, p, points = []; i < il; i++) {\r\n      p = array[i].split(',')\r\n      points.push([parseFloat(p[0]), parseFloat(p[1])])\r\n    }\r\n\r\n    return points\r\n  }\r\n  // Move point string\r\n, move: function(x, y) {\r\n    var box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    // move every point\r\n    if (!isNaN(x) && !isNaN(y))\r\n      for (var i = this.value.length - 1; i >= 0; i--)\r\n        this.value[i] = [this.value[i][0] + x, this.value[i][1] + y]\r\n\r\n    return this\r\n  }\r\n  // Resize poly string\r\n, size: function(width, height) {\r\n    var i, box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.value.length - 1; i >= 0; i--) {\r\n      this.value[i][0] = ((this.value[i][0] - box.x) * width)  / box.width  + box.x\r\n      this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Get bounding box of points\r\n, bbox: function() {\r\n    SVG.parser.poly.setAttribute('points', this.toString())\r\n\r\n    return SVG.parser.poly.getBBox()\r\n  }\r\n\r\n})\n// Path points array\r\nSVG.PathArray = function(array, fallback) {\r\n  this.constructor.call(this, array, fallback || [['M', 0, 0]])\r\n}\r\n\r\n// Inherit from SVG.Array\r\nSVG.PathArray.prototype = new SVG.Array\r\n\r\nSVG.extend(SVG.PathArray, {\r\n  // Convert array to string\r\n  toString: function() {\r\n    return arrayToString(this.value)\r\n  }\r\n  // Move path string\r\n, move: function(x, y) {\r\n    // get bounding box of current situation\r\n    var box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    if (!isNaN(x) && !isNaN(y)) {\r\n      // move every point\r\n      for (var l, i = this.value.length - 1; i >= 0; i--) {\r\n        l = this.value[i][0]\r\n\r\n        if (l == 'M' || l == 'L' || l == 'T')  {\r\n          this.value[i][1] += x\r\n          this.value[i][2] += y\r\n\r\n        } else if (l == 'H')  {\r\n          this.value[i][1] += x\r\n\r\n        } else if (l == 'V')  {\r\n          this.value[i][1] += y\r\n\r\n        } else if (l == 'C' || l == 'S' || l == 'Q')  {\r\n          this.value[i][1] += x\r\n          this.value[i][2] += y\r\n          this.value[i][3] += x\r\n          this.value[i][4] += y\r\n\r\n          if (l == 'C')  {\r\n            this.value[i][5] += x\r\n            this.value[i][6] += y\r\n          }\r\n\r\n        } else if (l == 'A')  {\r\n          this.value[i][6] += x\r\n          this.value[i][7] += y\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Resize path string\r\n, size: function(width, height) {\r\n    // get bounding box of current situation\r\n    var i, l, box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.value.length - 1; i >= 0; i--) {\r\n      l = this.value[i][0]\r\n\r\n      if (l == 'M' || l == 'L' || l == 'T')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\r\n\r\n      } else if (l == 'H')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n\r\n      } else if (l == 'V')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\r\n\r\n      } else if (l == 'C' || l == 'S' || l == 'Q')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\r\n        this.value[i][3] = ((this.value[i][3] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][4] = ((this.value[i][4] - box.y) * height) / box.height + box.y\r\n\r\n        if (l == 'C')  {\r\n          this.value[i][5] = ((this.value[i][5] - box.x) * width)  / box.width  + box.x\r\n          this.value[i][6] = ((this.value[i][6] - box.y) * height) / box.height + box.y\r\n        }\r\n\r\n      } else if (l == 'A')  {\r\n        // resize radii\r\n        this.value[i][1] = (this.value[i][1] * width)  / box.width\r\n        this.value[i][2] = (this.value[i][2] * height) / box.height\r\n\r\n        // move position values\r\n        this.value[i][6] = ((this.value[i][6] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][7] = ((this.value[i][7] - box.y) * height) / box.height + box.y\r\n      }\r\n\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Absolutize and parse path to array\r\n, parse: function(array) {\r\n    // if it's already a patharray, no need to parse it\r\n    if (array instanceof SVG.PathArray) return array.valueOf()\r\n\r\n    // prepare for parsing\r\n    var i, x0, y0, s, seg, arr\r\n      , x = 0\r\n      , y = 0\r\n      , paramCnt = { 'M':2, 'L':2, 'H':1, 'V':1, 'C':6, 'S':4, 'Q':4, 'T':2, 'A':7 }\r\n\r\n    if(typeof array == 'string'){\r\n\r\n      array = array\r\n        .replace(SVG.regex.negExp, 'X')         // replace all negative exponents with certain char\r\n        .replace(SVG.regex.pathLetters, ' $& ') // put some room between letters and numbers\r\n        .replace(SVG.regex.hyphen, ' -')        // add space before hyphen\r\n        .replace(SVG.regex.comma, ' ')          // unify all spaces\r\n        .replace(SVG.regex.X, 'e-')             // add back the expoent\r\n        .trim()                                 // trim\r\n        .split(SVG.regex.whitespaces)           // split into array\r\n\r\n      // at this place there could be parts like ['3.124.854.32'] because we could not determine the point as seperator till now\r\n      // we fix this elements in the next loop\r\n      for(i = array.length; --i;){\r\n        if(array[i].indexOf('.') != array[i].lastIndexOf('.')){\r\n          var split = array[i].split('.') // split at the point\r\n          var first = [split.shift(), split.shift()].join('.') // join the first number together\r\n          array.splice.apply(array, [i, 1].concat(first, split.map(function(el){ return '.'+el }))) // add first and all other entries back to array\r\n        }\r\n      }\r\n\r\n    }else{\r\n      array = array.reduce(function(prev, curr){\r\n        return [].concat.apply(prev, curr)\r\n      }, [])\r\n    }\r\n\r\n    // array now is an array containing all parts of a path e.g. ['M', '0', '0', 'L', '30', '30' ...]\r\n\r\n    var arr = []\r\n\r\n    do{\r\n\r\n      // Test if we have a path letter\r\n      if(SVG.regex.isPathLetter.test(array[0])){\r\n        s = array[0]\r\n        array.shift()\r\n      // If last letter was a move command and we got no new, it defaults to [L]ine\r\n      }else if(s == 'M'){\r\n        s = 'L'\r\n      }else if(s == 'm'){\r\n        s = 'l'\r\n      }\r\n\r\n      // add path letter as first element\r\n      seg = [s.toUpperCase()]\r\n\r\n      // push all necessary parameters to segment\r\n      for(i = 0; i < paramCnt[seg[0]]; ++i){\r\n        seg.push(parseFloat(array.shift()))\r\n      }\r\n\r\n      // upper case\r\n      if(s == seg[0]){\r\n\r\n        if(s == 'M' || s == 'L' || s == 'C' || s == 'Q'){\r\n          x = seg[paramCnt[seg[0]]-1]\r\n          y = seg[paramCnt[seg[0]]]\r\n        }else if(s == 'V'){\r\n          y = seg[1]\r\n        }else if(s == 'H'){\r\n          x = seg[1]\r\n        }else if(s == 'A'){\r\n          x = seg[6]\r\n          y = seg[7]\r\n        }\r\n\r\n      // lower case\r\n      }else{\r\n\r\n        // convert relative to absolute values\r\n        if(s == 'm' || s == 'l' || s == 'c' || s == 's' || s == 'q' || s == 't'){\r\n\r\n          seg[1] += x\r\n          seg[2] += y\r\n\r\n          if(seg[3] != null){\r\n            seg[3] += x\r\n            seg[4] += y\r\n          }\r\n\r\n          if(seg[5] != null){\r\n            seg[5] += x\r\n            seg[6] += y\r\n          }\r\n\r\n          // move pointer\r\n          x = seg[paramCnt[seg[0]]-1]\r\n          y = seg[paramCnt[seg[0]]]\r\n\r\n        }else if(s == 'v'){\r\n          seg[1] += y\r\n          y = seg[1]\r\n        }else if(s == 'h'){\r\n          seg[1] += x\r\n          x = seg[1]\r\n        }else if(s == 'a'){\r\n          seg[6] += x\r\n          seg[7] += y\r\n          x = seg[6]\r\n          y = seg[7]\r\n        }\r\n\r\n      }\r\n\r\n      if(seg[0] == 'M'){\r\n        x0 = x\r\n        y0 = y\r\n      }\r\n\r\n      if(seg[0] == 'Z'){\r\n        x = x0\r\n        y = y0\r\n      }\r\n\r\n      arr.push(seg)\r\n\r\n    }while(array.length)\r\n\r\n    return arr\r\n\r\n  }\r\n  // Get bounding box of path\r\n, bbox: function() {\r\n    SVG.parser.path.setAttribute('d', this.toString())\r\n\r\n    return SVG.parser.path.getBBox()\r\n  }\r\n\r\n})\n// Module for unit convertions\r\nSVG.Number = SVG.invent({\r\n  // Initialize\r\n  create: function(value, unit) {\r\n    // initialize defaults\r\n    this.value = 0\r\n    this.unit  = unit || ''\r\n\r\n    // parse value\r\n    if (typeof value === 'number') {\r\n      // ensure a valid numeric value\r\n      this.value = isNaN(value) ? 0 : !isFinite(value) ? (value < 0 ? -3.4e+38 : +3.4e+38) : value\r\n\r\n    } else if (typeof value === 'string') {\r\n      unit = value.match(SVG.regex.unit)\r\n\r\n      if (unit) {\r\n        // make value numeric\r\n        this.value = parseFloat(unit[1])\r\n\r\n        // normalize\r\n        if (unit[2] == '%')\r\n          this.value /= 100\r\n        else if (unit[2] == 's')\r\n          this.value *= 1000\r\n\r\n        // store unit\r\n        this.unit = unit[2]\r\n      }\r\n\r\n    } else {\r\n      if (value instanceof SVG.Number) {\r\n        this.value = value.valueOf()\r\n        this.unit  = value.unit\r\n      }\r\n    }\r\n\r\n  }\r\n  // Add methods\r\n, extend: {\r\n    // Stringalize\r\n    toString: function() {\r\n      return (\r\n        this.unit == '%' ?\r\n          ~~(this.value * 1e8) / 1e6:\r\n        this.unit == 's' ?\r\n          this.value / 1e3 :\r\n          this.value\r\n      ) + this.unit\r\n    }\r\n  , // Convert to primitive\r\n    valueOf: function() {\r\n      return this.value\r\n    }\r\n    // Add number\r\n  , plus: function(number) {\r\n      return new SVG.Number(this + new SVG.Number(number), this.unit)\r\n    }\r\n    // Subtract number\r\n  , minus: function(number) {\r\n      return this.plus(-new SVG.Number(number))\r\n    }\r\n    // Multiply number\r\n  , times: function(number) {\r\n      return new SVG.Number(this * new SVG.Number(number), this.unit)\r\n    }\r\n    // Divide number\r\n  , divide: function(number) {\r\n      return new SVG.Number(this / new SVG.Number(number), this.unit)\r\n    }\r\n    // Convert to different unit\r\n  , to: function(unit) {\r\n      var number = new SVG.Number(this)\r\n\r\n      if (typeof unit === 'string')\r\n        number.unit = unit\r\n\r\n      return number\r\n    }\r\n    // Make number morphable\r\n  , morph: function(number) {\r\n      this.destination = new SVG.Number(number)\r\n\r\n      return this\r\n    }\r\n    // Get morphed number at given position\r\n  , at: function(pos) {\r\n      // Make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // Generate new morphed number\r\n      return new SVG.Number(this.destination)\r\n          .minus(this)\r\n          .times(pos)\r\n          .plus(this)\r\n    }\r\n\r\n  }\r\n})\n\r\nSVG.ViewBox = function(element) {\r\n  var x, y, width, height\r\n    , wm   = 1 // width multiplier\r\n    , hm   = 1 // height multiplier\r\n    , box  = element.bbox()\r\n    , view = (element.attr('viewBox') || '').match(/-?[\\d\\.]+/g)\r\n    , we   = element\r\n    , he   = element\r\n\r\n  // get dimensions of current node\r\n  width  = new SVG.Number(element.width())\r\n  height = new SVG.Number(element.height())\r\n\r\n  // find nearest non-percentual dimensions\r\n  while (width.unit == '%') {\r\n    wm *= width.value\r\n    width = new SVG.Number(we instanceof SVG.Doc ? we.parent().offsetWidth : we.parent().width())\r\n    we = we.parent()\r\n  }\r\n  while (height.unit == '%') {\r\n    hm *= height.value\r\n    height = new SVG.Number(he instanceof SVG.Doc ? he.parent().offsetHeight : he.parent().height())\r\n    he = he.parent()\r\n  }\r\n\r\n  // ensure defaults\r\n  this.x      = box.x\r\n  this.y      = box.y\r\n  this.width  = width  * wm\r\n  this.height = height * hm\r\n  this.zoom   = 1\r\n\r\n  if (view) {\r\n    // get width and height from viewbox\r\n    x      = parseFloat(view[0])\r\n    y      = parseFloat(view[1])\r\n    width  = parseFloat(view[2])\r\n    height = parseFloat(view[3])\r\n\r\n    // calculate zoom accoring to viewbox\r\n    this.zoom = ((this.width / this.height) > (width / height)) ?\r\n      this.height / height :\r\n      this.width  / width\r\n\r\n    // calculate real pixel dimensions on parent SVG.Doc element\r\n    this.x      = x\r\n    this.y      = y\r\n    this.width  = width\r\n    this.height = height\r\n\r\n  }\r\n\r\n}\r\n\r\n//\r\nSVG.extend(SVG.ViewBox, {\r\n  // Parse viewbox to string\r\n  toString: function() {\r\n    return this.x + ' ' + this.y + ' ' + this.width + ' ' + this.height\r\n  }\r\n\r\n})\n\r\nSVG.Element = SVG.invent({\r\n  // Initialize node\r\n  create: function(node) {\r\n    // make stroke value accessible dynamically\r\n    this._stroke = SVG.defaults.attrs.stroke\r\n\r\n    // initialize data object\r\n    this.dom = {}\r\n\r\n    // create circular reference\r\n    if (this.node = node) {\r\n      this.type = node.nodeName\r\n      this.node.instance = this\r\n\r\n      // store current attribute value\r\n      this._stroke = node.getAttribute('stroke') || this._stroke\r\n    }\r\n  }\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return this.attr('x', x)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return this.attr('y', y)\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.x() + this.width() / 2 : this.x(x - this.width() / 2)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.y() + this.height() / 2 : this.y(y - this.height() / 2)\r\n    }\r\n    // Move element to given x and y values\r\n  , move: function(x, y) {\r\n      return this.x(x).y(y)\r\n    }\r\n    // Move element by its center\r\n  , center: function(x, y) {\r\n      return this.cx(x).cy(y)\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return this.attr('width', width)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return this.attr('height', height)\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this.bbox(), width, height)\r\n\r\n      return this\r\n        .width(new SVG.Number(p.width))\r\n        .height(new SVG.Number(p.height))\r\n    }\r\n    // Clone element\r\n  , clone: function() {\r\n      // clone element and assign new id\r\n      var clone = assignNewId(this.node.cloneNode(true))\r\n\r\n      // insert the clone after myself\r\n      this.after(clone)\r\n\r\n      return clone\r\n    }\r\n    // Remove element\r\n  , remove: function() {\r\n      if (this.parent())\r\n        this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n    // Replace element\r\n  , replace: function(element) {\r\n      this.after(element).remove()\r\n\r\n      return element\r\n    }\r\n    // Add element to given container and return self\r\n  , addTo: function(parent) {\r\n      return parent.put(this)\r\n    }\r\n    // Add element to given container and return container\r\n  , putIn: function(parent) {\r\n      return parent.add(this)\r\n    }\r\n    // Get / set id\r\n  , id: function(id) {\r\n      return this.attr('id', id)\r\n    }\r\n    // Checks whether the given point inside the bounding box of the element\r\n  , inside: function(x, y) {\r\n      var box = this.bbox()\r\n\r\n      return x > box.x\r\n          && y > box.y\r\n          && x < box.x + box.width\r\n          && y < box.y + box.height\r\n    }\r\n    // Show element\r\n  , show: function() {\r\n      return this.style('display', '')\r\n    }\r\n    // Hide element\r\n  , hide: function() {\r\n      return this.style('display', 'none')\r\n    }\r\n    // Is element visible?\r\n  , visible: function() {\r\n      return this.style('display') != 'none'\r\n    }\r\n    // Return id on string conversion\r\n  , toString: function() {\r\n      return this.attr('id')\r\n    }\r\n    // Return array of classes on the node\r\n  , classes: function() {\r\n      var attr = this.attr('class')\r\n\r\n      return attr == null ? [] : attr.trim().split(/\\s+/)\r\n    }\r\n    // Return true if class exists on the node, false otherwise\r\n  , hasClass: function(name) {\r\n      return this.classes().indexOf(name) != -1\r\n    }\r\n    // Add class to the node\r\n  , addClass: function(name) {\r\n      if (!this.hasClass(name)) {\r\n        var array = this.classes()\r\n        array.push(name)\r\n        this.attr('class', array.join(' '))\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Remove class from the node\r\n  , removeClass: function(name) {\r\n      if (this.hasClass(name)) {\r\n        this.attr('class', this.classes().filter(function(c) {\r\n          return c != name\r\n        }).join(' '))\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Toggle the presence of a class on the node\r\n  , toggleClass: function(name) {\r\n      return this.hasClass(name) ? this.removeClass(name) : this.addClass(name)\r\n    }\r\n    // Get referenced element form attribute value\r\n  , reference: function(attr) {\r\n      return SVG.get(this.attr(attr))\r\n    }\r\n    // Returns the parent element instance\r\n  , parent: function(type) {\r\n      var parent = this\r\n\r\n      // check for parent\r\n      if(!parent.node.parentNode) return null\r\n\r\n      // get parent element\r\n      parent = SVG.adopt(parent.node.parentNode)\r\n\r\n      if(!type) return parent\r\n\r\n      // loop trough ancestors if type is given\r\n      while(parent.node instanceof SVGElement){\r\n        if(typeof type === 'string' ? parent.matches(type) : parent instanceof type) return parent\r\n        parent = SVG.adopt(parent.node.parentNode)\r\n      }\r\n    }\r\n    // Get parent document\r\n  , doc: function() {\r\n      return this instanceof SVG.Doc ? this : this.parent(SVG.Doc)\r\n    }\r\n    // return array of all ancestors of given type up to the root svg\r\n  , parents: function(type) {\r\n      var parents = [], parent = this\r\n\r\n      do{\r\n        parent = parent.parent(type)\r\n        if(!parent || !parent.node) break\r\n\r\n        parents.push(parent)\r\n      } while(parent.parent)\r\n\r\n      return parents\r\n    }\r\n    // matches the element vs a css selector\r\n  , matches: function(selector){\r\n      return matches(this.node, selector)\r\n    }\r\n    // Returns the svg node to call native svg methods on it\r\n  , native: function() {\r\n      return this.node\r\n    }\r\n    // Import raw svg\r\n  , svg: function(svg) {\r\n      // create temporary holder\r\n      var well = document.createElement('svg')\r\n\r\n      // act as a setter if svg is given\r\n      if (svg && this instanceof SVG.Parent) {\r\n        // dump raw svg\r\n        well.innerHTML = '<svg>' + svg.replace(/\\n/, '').replace(/<(\\w+)([^<]+?)\\/>/g, '<$1$2></$1>') + '</svg>'\r\n\r\n        // transplant nodes\r\n        for (var i = 0, il = well.firstChild.childNodes.length; i < il; i++)\r\n          this.node.appendChild(well.firstChild.firstChild)\r\n\r\n      // otherwise act as a getter\r\n      } else {\r\n        // create a wrapping svg element in case of partial content\r\n        well.appendChild(svg = document.createElement('svg'))\r\n\r\n        // write svgjs data to the dom\r\n        this.writeDataToDom()\r\n\r\n        // insert a copy of this node\r\n        svg.appendChild(this.node.cloneNode(true))\r\n\r\n        // return target element\r\n        return well.innerHTML.replace(/^<svg>/, '').replace(/<\\/svg>$/, '')\r\n      }\r\n\r\n      return this\r\n    }\r\n  // write svgjs data to the dom\r\n  , writeDataToDom: function() {\r\n\r\n      // dump variables recursively\r\n      if(this.each || this.lines){\r\n        var fn = this.each ? this : this.lines();\r\n        fn.each(function(){\r\n          this.writeDataToDom()\r\n        })\r\n      }\r\n\r\n      // remove previously set data\r\n      this.node.removeAttribute('svgjs:data')\r\n\r\n      if(Object.keys(this.dom).length)\r\n        this.node.setAttributeNS(SVG.svgjs, 'svgjs:data', JSON.stringify(this.dom))\r\n\r\n      return this\r\n    }\r\n  // set given data to the elements data property\r\n  , setData: function(o){\r\n      this.dom = o\r\n      return this\r\n    }\r\n  }\r\n})\r\n\nSVG.FX = SVG.invent({\r\n  // Initialize FX object\r\n  create: function(element) {\r\n    // store target element\r\n    this.target = element\r\n  }\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add animation parameters and start animation\r\n    animate: function(d, ease, delay) {\r\n      var akeys, skeys, key\r\n        , element = this.target\r\n        , fx = this\r\n\r\n      // dissect object if one is passed\r\n      if (typeof d == 'object') {\r\n        delay = d.delay\r\n        ease = d.ease\r\n        d = d.duration\r\n      }\r\n\r\n      // ensure default duration and easing\r\n      d = d == '=' ? d : d == null ? 1000 : new SVG.Number(d).valueOf()\r\n      ease = ease || '<>'\r\n\r\n      // process values\r\n      fx.at = function(pos) {\r\n        var i\r\n\r\n        // normalise pos\r\n        pos = pos < 0 ? 0 : pos > 1 ? 1 : pos\r\n\r\n        // collect attribute keys\r\n        if (akeys == null) {\r\n          akeys = []\r\n          for (key in fx.attrs)\r\n            akeys.push(key)\r\n\r\n          // make sure morphable elements are scaled, translated and morphed all together\r\n          if (element.morphArray && (fx.destination.plot || akeys.indexOf('points') > -1)) {\r\n            // get destination\r\n            var box\r\n              , p = new element.morphArray(fx.destination.plot || fx.attrs.points || element.array())\r\n\r\n            // add size\r\n            if (fx.destination.size)\r\n              p.size(fx.destination.size.width.to, fx.destination.size.height.to)\r\n\r\n            // add movement\r\n            box = p.bbox()\r\n            if (fx.destination.x)\r\n              p.move(fx.destination.x.to, box.y)\r\n            else if (fx.destination.cx)\r\n              p.move(fx.destination.cx.to - box.width / 2, box.y)\r\n\r\n            box = p.bbox()\r\n            if (fx.destination.y)\r\n              p.move(box.x, fx.destination.y.to)\r\n            else if (fx.destination.cy)\r\n              p.move(box.x, fx.destination.cy.to - box.height / 2)\r\n\r\n            // reset destination values\r\n            fx.destination = {\r\n              plot: element.array().morph(p)\r\n            }\r\n          }\r\n        }\r\n\r\n        // collect style keys\r\n        if (skeys == null) {\r\n          skeys = []\r\n          for (key in fx.styles)\r\n            skeys.push(key)\r\n        }\r\n\r\n        // apply easing\r\n        pos = ease == '<>' ?\r\n          (-Math.cos(pos * Math.PI) / 2) + 0.5 :\r\n        ease == '>' ?\r\n          Math.sin(pos * Math.PI / 2) :\r\n        ease == '<' ?\r\n          -Math.cos(pos * Math.PI / 2) + 1 :\r\n        ease == '-' ?\r\n          pos :\r\n        typeof ease == 'function' ?\r\n          ease(pos) :\r\n          pos\r\n\r\n        // run plot function\r\n        if (fx.destination.plot) {\r\n          element.plot(fx.destination.plot.at(pos))\r\n\r\n        } else {\r\n          // run all x-position properties\r\n          if (fx.destination.x)\r\n            element.x(fx.destination.x.at(pos))\r\n          else if (fx.destination.cx)\r\n            element.cx(fx.destination.cx.at(pos))\r\n\r\n          // run all y-position properties\r\n          if (fx.destination.y)\r\n            element.y(fx.destination.y.at(pos))\r\n          else if (fx.destination.cy)\r\n            element.cy(fx.destination.cy.at(pos))\r\n\r\n          // run all size properties\r\n          if (fx.destination.size)\r\n            element.size(fx.destination.size.width.at(pos), fx.destination.size.height.at(pos))\r\n        }\r\n\r\n        // run all viewbox properties\r\n        if (fx.destination.viewbox)\r\n          element.viewbox(\r\n            fx.destination.viewbox.x.at(pos)\r\n          , fx.destination.viewbox.y.at(pos)\r\n          , fx.destination.viewbox.width.at(pos)\r\n          , fx.destination.viewbox.height.at(pos)\r\n          )\r\n\r\n        // run leading property\r\n        if (fx.destination.leading)\r\n          element.leading(fx.destination.leading.at(pos))\r\n\r\n        // animate attributes\r\n        for (i = akeys.length - 1; i >= 0; i--)\r\n          element.attr(akeys[i], at(fx.attrs[akeys[i]], pos))\r\n\r\n        // animate styles\r\n        for (i = skeys.length - 1; i >= 0; i--)\r\n          element.style(skeys[i], at(fx.styles[skeys[i]], pos))\r\n\r\n        // callback for each keyframe\r\n        if (fx.situation.during)\r\n          fx.situation.during.call(element, pos, function(from, to) {\r\n            return at({ from: from, to: to }, pos)\r\n          })\r\n      }\r\n\r\n      if (typeof d === 'number') {\r\n        // delay animation\r\n        this.timeout = setTimeout(function() {\r\n          var start = new Date().getTime()\r\n\r\n          // initialize situation object\r\n          fx.situation.start    = start\r\n          fx.situation.play     = true\r\n          fx.situation.finish   = start + d\r\n          fx.situation.duration = d\r\n          fx.situation.ease     = ease\r\n\r\n          // render function\r\n          fx.render = function() {\r\n\r\n            if (fx.situation.play === true) {\r\n              // calculate pos\r\n              var time = new Date().getTime()\r\n                , pos = time > fx.situation.finish ? 1 : (time - fx.situation.start) / d\r\n\r\n              // reverse pos if animation is reversed\r\n              if (fx.situation.reversing)\r\n                pos = -pos + 1\r\n\r\n              // process values\r\n              fx.at(pos)\r\n\r\n              // finish off animation\r\n              if (time > fx.situation.finish) {\r\n                if (fx.destination.plot)\r\n                  element.plot(new SVG.PointArray(fx.destination.plot.destination).settle())\r\n\r\n                if (fx.situation.loop === true || (typeof fx.situation.loop == 'number' && fx.situation.loop > 0)) {\r\n                  // register reverse\r\n                  if (fx.situation.reverse)\r\n                    fx.situation.reversing = !fx.situation.reversing\r\n\r\n                  if (typeof fx.situation.loop == 'number') {\r\n                    // reduce loop count\r\n                    if (!fx.situation.reverse || fx.situation.reversing)\r\n                      --fx.situation.loop\r\n\r\n                    // remove last loop if reverse is disabled\r\n                    if (!fx.situation.reverse && fx.situation.loop == 1)\r\n                      --fx.situation.loop\r\n                  }\r\n\r\n                  fx.animate(d, ease, delay)\r\n                } else {\r\n                  fx.situation.after ? fx.situation.after.apply(element, [fx]) : fx.stop()\r\n                }\r\n\r\n              } else {\r\n                fx.animationFrame = requestAnimationFrame(fx.render)\r\n              }\r\n            } else {\r\n              fx.animationFrame = requestAnimationFrame(fx.render)\r\n            }\r\n\r\n          }\r\n\r\n          // start animation\r\n          fx.render()\r\n\r\n        }, new SVG.Number(delay).valueOf())\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Get bounding box of target element\r\n  , bbox: function() {\r\n      return this.target.bbox()\r\n    }\r\n    // Add animatable attributes\r\n  , attr: function(a, v) {\r\n      // apply attributes individually\r\n      if (typeof a == 'object') {\r\n        for (var key in a)\r\n          this.attr(key, a[key])\r\n\r\n      } else {\r\n        // get the current state\r\n        var from = this.target.attr(a)\r\n\r\n        // detect format\r\n        if (a == 'transform') {\r\n          // merge given transformation with an existing one\r\n          if (this.attrs[a])\r\n            v = this.attrs[a].destination.multiply(v)\r\n\r\n          // prepare matrix for morphing\r\n          this.attrs[a] = (new SVG.Matrix(this.target)).morph(v)\r\n\r\n          // add parametric rotation values\r\n          if (this.param) {\r\n            // get initial rotation\r\n            v = this.target.transform('rotation')\r\n\r\n            // add param\r\n            this.attrs[a].param = {\r\n              from: this.target.param || { rotation: v, cx: this.param.cx, cy: this.param.cy }\r\n            , to:   this.param\r\n            }\r\n          }\r\n\r\n        } else {\r\n          this.attrs[a] = SVG.Color.isColor(v) ?\r\n            // prepare color for morphing\r\n            new SVG.Color(from).morph(v) :\r\n          SVG.regex.unit.test(v) ?\r\n            // prepare number for morphing\r\n            new SVG.Number(from).morph(v) :\r\n            // prepare for plain morphing\r\n            { from: from, to: v }\r\n        }\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Add animatable styles\r\n  , style: function(s, v) {\r\n      if (typeof s == 'object')\r\n        for (var key in s)\r\n          this.style(key, s[key])\r\n\r\n      else\r\n        this.styles[s] = { from: this.target.style(s), to: v }\r\n\r\n      return this\r\n    }\r\n    // Animatable x-axis\r\n  , x: function(x) {\r\n      this.destination.x = new SVG.Number(this.target.x()).morph(x)\r\n\r\n      return this\r\n    }\r\n    // Animatable y-axis\r\n  , y: function(y) {\r\n      this.destination.y = new SVG.Number(this.target.y()).morph(y)\r\n\r\n      return this\r\n    }\r\n    // Animatable center x-axis\r\n  , cx: function(x) {\r\n      this.destination.cx = new SVG.Number(this.target.cx()).morph(x)\r\n\r\n      return this\r\n    }\r\n    // Animatable center y-axis\r\n  , cy: function(y) {\r\n      this.destination.cy = new SVG.Number(this.target.cy()).morph(y)\r\n\r\n      return this\r\n    }\r\n    // Add animatable move\r\n  , move: function(x, y) {\r\n      return this.x(x).y(y)\r\n    }\r\n    // Add animatable center\r\n  , center: function(x, y) {\r\n      return this.cx(x).cy(y)\r\n    }\r\n    // Add animatable size\r\n  , size: function(width, height) {\r\n      if (this.target instanceof SVG.Text) {\r\n        // animate font size for Text elements\r\n        this.attr('font-size', width)\r\n\r\n      } else {\r\n        // animate bbox based size for all other elements\r\n        var box = this.target.bbox()\r\n\r\n        this.destination.size = {\r\n          width:  new SVG.Number(box.width).morph(width)\r\n        , height: new SVG.Number(box.height).morph(height)\r\n        }\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Add animatable plot\r\n  , plot: function(p) {\r\n      this.destination.plot = p\r\n\r\n      return this\r\n    }\r\n    // Add leading method\r\n  , leading: function(value) {\r\n      if (this.target.destination.leading)\r\n        this.destination.leading = new SVG.Number(this.target.destination.leading).morph(value)\r\n\r\n      return this\r\n    }\r\n    // Add animatable viewbox\r\n  , viewbox: function(x, y, width, height) {\r\n      if (this.target instanceof SVG.Container) {\r\n        var box = this.target.viewbox()\r\n\r\n        this.destination.viewbox = {\r\n          x:      new SVG.Number(box.x).morph(x)\r\n        , y:      new SVG.Number(box.y).morph(y)\r\n        , width:  new SVG.Number(box.width).morph(width)\r\n        , height: new SVG.Number(box.height).morph(height)\r\n        }\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Add animateable gradient update\r\n  , update: function(o) {\r\n      if (this.target instanceof SVG.Stop) {\r\n        if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n        if (o.color   != null) this.attr('stop-color', o.color)\r\n        if (o.offset  != null) this.attr('offset', new SVG.Number(o.offset))\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Add callback for each keyframe\r\n  , during: function(during) {\r\n      this.situation.during = during\r\n\r\n      return this\r\n    }\r\n    // Callback after animation\r\n  , after: function(after) {\r\n      this.situation.after = after\r\n\r\n      return this\r\n    }\r\n    // Make loopable\r\n  , loop: function(times, reverse) {\r\n      // store current loop and total loops\r\n      this.situation.loop = this.situation.loops = times || true\r\n\r\n      // make reversable\r\n      this.situation.reverse = !!reverse\r\n\r\n      return this\r\n    }\r\n    // Stop running animation\r\n  , stop: function(fulfill) {\r\n      // fulfill animation\r\n      if (fulfill === true) {\r\n\r\n        this.animate(0)\r\n\r\n        if (this.situation.after)\r\n          this.situation.after.apply(this.target, [this])\r\n\r\n      } else {\r\n        // stop current animation\r\n        clearTimeout(this.timeout)\r\n        cancelAnimationFrame(this.animationFrame);\r\n\r\n        // reset storage for properties\r\n        this.attrs       = {}\r\n        this.styles      = {}\r\n        this.situation   = {}\r\n        this.destination = {}\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Pause running animation\r\n  , pause: function() {\r\n      if (this.situation.play === true) {\r\n        this.situation.play  = false\r\n        this.situation.pause = new Date().getTime()\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Play running animation\r\n  , play: function() {\r\n      if (this.situation.play === false) {\r\n        var pause = new Date().getTime() - this.situation.pause\r\n\r\n        this.situation.finish += pause\r\n        this.situation.start  += pause\r\n        this.situation.play    = true\r\n      }\r\n\r\n      return this\r\n    }\r\n\r\n  }\r\n\r\n  // Define parent class\r\n, parent: SVG.Element\r\n\r\n  // Add method to parent elements\r\n, construct: {\r\n    // Get fx module or create a new one, then animate with given duration and ease\r\n    animate: function(d, ease, delay) {\r\n      return (this.fx || (this.fx = new SVG.FX(this))).stop().animate(d, ease, delay)\r\n    }\r\n    // Stop current animation; this is an alias to the fx instance\r\n  , stop: function(fulfill) {\r\n      if (this.fx)\r\n        this.fx.stop(fulfill)\r\n\r\n      return this\r\n    }\r\n    // Pause current animation\r\n  , pause: function() {\r\n      if (this.fx)\r\n        this.fx.pause()\r\n\r\n      return this\r\n    }\r\n    // Play paused current animation\r\n  , play: function() {\r\n      if (this.fx)\r\n        this.fx.play()\r\n\r\n      return this\r\n    }\r\n\r\n  }\r\n})\r\n\nSVG.BBox = SVG.invent({\r\n  // Initialize\r\n  create: function(element) {\r\n    // get values if element is given\r\n    if (element) {\r\n      var box\r\n\r\n      // yes this is ugly, but Firefox can be a bitch when it comes to elements that are not yet rendered\r\n      try {\r\n        // find native bbox\r\n        box = element.node.getBBox()\r\n      } catch(e) {\r\n        if(element instanceof SVG.Shape){\r\n          var clone = element.clone().addTo(SVG.parser.draw)\r\n          box = clone.bbox()\r\n          clone.remove()\r\n        }else{\r\n          box = {\r\n            x:      element.node.clientLeft\r\n          , y:      element.node.clientTop\r\n          , width:  element.node.clientWidth\r\n          , height: element.node.clientHeight\r\n          }\r\n        }\r\n      }\r\n\r\n      // plain x and y\r\n      this.x = box.x\r\n      this.y = box.y\r\n\r\n      // plain width and height\r\n      this.width  = box.width\r\n      this.height = box.height\r\n    }\r\n\r\n    // add center, right and bottom\r\n    fullBox(this)\r\n  }\r\n\r\n  // Define Parent\r\n, parent: SVG.Element\r\n\r\n  // Constructor\r\n, construct: {\r\n    // Get bounding box\r\n    bbox: function() {\r\n      return new SVG.BBox(this)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.TBox = SVG.invent({\r\n  // Initialize\r\n  create: function(element) {\r\n    // get values if element is given\r\n    if (element) {\r\n      var t   = element.ctm().extract()\r\n        , box = element.bbox()\r\n\r\n      // width and height including transformations\r\n      this.width  = box.width  * t.scaleX\r\n      this.height = box.height * t.scaleY\r\n\r\n      // x and y including transformations\r\n      this.x = box.x + t.x\r\n      this.y = box.y + t.y\r\n    }\r\n\r\n    // add center, right and bottom\r\n    fullBox(this)\r\n  }\r\n\r\n  // Define Parent\r\n, parent: SVG.Element\r\n\r\n  // Constructor\r\n, construct: {\r\n    // Get transformed bounding box\r\n    tbox: function() {\r\n      return new SVG.TBox(this)\r\n    }\r\n  }\r\n\r\n})\r\n\r\n\r\nSVG.RBox = SVG.invent({\r\n  // Initialize\r\n  create: function(element) {\r\n    if (element) {\r\n      var e    = element.doc().parent()\r\n        , box  = element.node.getBoundingClientRect()\r\n        , zoom = 1\r\n\r\n      // get screen offset\r\n      this.x = box.left\r\n      this.y = box.top\r\n\r\n      // subtract parent offset\r\n      this.x -= e.offsetLeft\r\n      this.y -= e.offsetTop\r\n\r\n      while (e = e.offsetParent) {\r\n        this.x -= e.offsetLeft\r\n        this.y -= e.offsetTop\r\n      }\r\n\r\n      // calculate cumulative zoom from svg documents\r\n      e = element\r\n      while (e.parent && (e = e.parent())) {\r\n        if (e.viewbox) {\r\n          zoom *= e.viewbox().zoom\r\n          this.x -= e.x() || 0\r\n          this.y -= e.y() || 0\r\n        }\r\n      }\r\n\r\n      // recalculate viewbox distortion\r\n      this.width  = box.width  /= zoom\r\n      this.height = box.height /= zoom\r\n    }\r\n\r\n    // add center, right and bottom\r\n    fullBox(this)\r\n\r\n    // offset by window scroll position, because getBoundingClientRect changes when window is scrolled\r\n    this.x += window.pageXOffset\r\n    this.y += window.pageYOffset\r\n  }\r\n\r\n  // define Parent\r\n, parent: SVG.Element\r\n\r\n  // Constructor\r\n, construct: {\r\n    // Get rect box\r\n    rbox: function() {\r\n      return new SVG.RBox(this)\r\n    }\r\n  }\r\n\r\n})\r\n\r\n// Add universal merge method\r\n;[SVG.BBox, SVG.TBox, SVG.RBox].forEach(function(c) {\r\n\r\n  SVG.extend(c, {\r\n    // Merge rect box with another, return a new instance\r\n    merge: function(box) {\r\n      var b = new c()\r\n\r\n      // merge boxes\r\n      b.x      = Math.min(this.x, box.x)\r\n      b.y      = Math.min(this.y, box.y)\r\n      b.width  = Math.max(this.x + this.width,  box.x + box.width)  - b.x\r\n      b.height = Math.max(this.y + this.height, box.y + box.height) - b.y\r\n\r\n      return fullBox(b)\r\n    }\r\n\r\n  })\r\n\r\n})\r\n\nSVG.Matrix = SVG.invent({\r\n  // Initialize\r\n  create: function(source) {\r\n    var i, base = arrayToMatrix([1, 0, 0, 1, 0, 0])\r\n\r\n    // ensure source as object\r\n    source = source instanceof SVG.Element ?\r\n      source.matrixify() :\r\n    typeof source === 'string' ?\r\n      stringToMatrix(source) :\r\n    arguments.length == 6 ?\r\n      arrayToMatrix([].slice.call(arguments)) :\r\n    typeof source === 'object' ?\r\n      source : base\r\n\r\n    // merge source\r\n    for (i = abcdef.length - 1; i >= 0; i--)\r\n      this[abcdef[i]] = source && typeof source[abcdef[i]] === 'number' ?\r\n        source[abcdef[i]] : base[abcdef[i]]\r\n  }\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Extract individual transformations\r\n    extract: function() {\r\n      // find delta transform points\r\n      var px    = deltaTransformPoint(this, 0, 1)\r\n        , py    = deltaTransformPoint(this, 1, 0)\r\n        , skewX = 180 / Math.PI * Math.atan2(px.y, px.x) - 90\r\n\r\n      return {\r\n        // translation\r\n        x:        this.e\r\n      , y:        this.f\r\n        // skew\r\n      , skewX:    -skewX\r\n      , skewY:    180 / Math.PI * Math.atan2(py.y, py.x)\r\n        // scale\r\n      , scaleX:   Math.sqrt(this.a * this.a + this.b * this.b)\r\n      , scaleY:   Math.sqrt(this.c * this.c + this.d * this.d)\r\n        // rotation\r\n      , rotation: skewX\r\n      , a: this.a\r\n      , b: this.b\r\n      , c: this.c\r\n      , d: this.d\r\n      , e: this.e\r\n      , f: this.f\r\n      }\r\n    }\r\n    // Clone matrix\r\n  , clone: function() {\r\n      return new SVG.Matrix(this)\r\n    }\r\n    // Morph one matrix into another\r\n  , morph: function(matrix) {\r\n      // store new destination\r\n      this.destination = new SVG.Matrix(matrix)\r\n\r\n      return this\r\n    }\r\n    // Get morphed matrix at a given position\r\n  , at: function(pos) {\r\n      // make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // calculate morphed matrix at a given position\r\n      var matrix = new SVG.Matrix({\r\n        a: this.a + (this.destination.a - this.a) * pos\r\n      , b: this.b + (this.destination.b - this.b) * pos\r\n      , c: this.c + (this.destination.c - this.c) * pos\r\n      , d: this.d + (this.destination.d - this.d) * pos\r\n      , e: this.e + (this.destination.e - this.e) * pos\r\n      , f: this.f + (this.destination.f - this.f) * pos\r\n      })\r\n\r\n      // process parametric rotation if present\r\n      if (this.param && this.param.to) {\r\n        // calculate current parametric position\r\n        var param = {\r\n          rotation: this.param.from.rotation + (this.param.to.rotation - this.param.from.rotation) * pos\r\n        , cx:       this.param.from.cx\r\n        , cy:       this.param.from.cy\r\n        }\r\n\r\n        // rotate matrix\r\n        matrix = matrix.rotate(\r\n          (this.param.to.rotation - this.param.from.rotation * 2) * pos\r\n        , param.cx\r\n        , param.cy\r\n        )\r\n\r\n        // store current parametric values\r\n        matrix.param = param\r\n      }\r\n\r\n      return matrix\r\n    }\r\n    // Multiplies by given matrix\r\n  , multiply: function(matrix) {\r\n      return new SVG.Matrix(this.native().multiply(parseMatrix(matrix).native()))\r\n    }\r\n    // Inverses matrix\r\n  , inverse: function() {\r\n      return new SVG.Matrix(this.native().inverse())\r\n    }\r\n    // Translate matrix\r\n  , translate: function(x, y) {\r\n      return new SVG.Matrix(this.native().translate(x || 0, y || 0))\r\n    }\r\n    // Scale matrix\r\n  , scale: function(x, y, cx, cy) {\r\n      // support universal scale\r\n      if (arguments.length == 1 || arguments.length == 3)\r\n        y = x\r\n      if (arguments.length == 3) {\r\n        cy = cx\r\n        cx = y\r\n      }\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(x, 0, 0, y, 0, 0))\r\n    }\r\n    // Rotate matrix\r\n  , rotate: function(r, cx, cy) {\r\n      // convert degrees to radians\r\n      r = SVG.utils.radians(r)\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(Math.cos(r), Math.sin(r), -Math.sin(r), Math.cos(r), 0, 0))\r\n    }\r\n    // Flip matrix on x or y, at a given offset\r\n  , flip: function(a, o) {\r\n      return a == 'x' ? this.scale(-1, 1, o, 0) : this.scale(1, -1, 0, o)\r\n    }\r\n    // Skew\r\n  , skew: function(x, y, cx, cy) {\r\n      return this.around(cx, cy, this.native().skewX(x || 0).skewY(y || 0))\r\n    }\r\n    // SkewX\r\n  , skewX: function(x, cx, cy) {\r\n      return this.around(cx, cy, this.native().skewX(x || 0))\r\n    }\r\n    // SkewY\r\n  , skewY: function(y, cx, cy) {\r\n      return this.around(cx, cy, this.native().skewY(y || 0))\r\n    }\r\n    // Transform around a center point\r\n  , around: function(cx, cy, matrix) {\r\n      return this\r\n        .multiply(new SVG.Matrix(1, 0, 0, 1, cx || 0, cy || 0))\r\n        .multiply(matrix)\r\n        .multiply(new SVG.Matrix(1, 0, 0, 1, -cx || 0, -cy || 0))\r\n    }\r\n    // Convert to native SVGMatrix\r\n  , native: function() {\r\n      // create new matrix\r\n      var matrix = SVG.parser.draw.node.createSVGMatrix()\r\n\r\n      // update with current values\r\n      for (var i = abcdef.length - 1; i >= 0; i--)\r\n        matrix[abcdef[i]] = this[abcdef[i]]\r\n\r\n      return matrix\r\n    }\r\n    // Convert matrix to string\r\n  , toString: function() {\r\n      return 'matrix(' + this.a + ',' + this.b + ',' + this.c + ',' + this.d + ',' + this.e + ',' + this.f + ')'\r\n    }\r\n  }\r\n\r\n  // Define parent\r\n, parent: SVG.Element\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Get current matrix\r\n    ctm: function() {\r\n      return new SVG.Matrix(this.node.getCTM())\r\n    },\r\n    // Get current screen matrix\r\n    screenCTM: function() {\r\n      return new SVG.Matrix(this.node.getScreenCTM())\r\n    }\r\n\r\n  }\r\n\r\n})\nSVG.extend(SVG.Element, {\r\n  // Set svg element attribute\r\n  attr: function(a, v, n) {\r\n    // act as full getter\r\n    if (a == null) {\r\n      // get an object of attributes\r\n      a = {}\r\n      v = this.node.attributes\r\n      for (n = v.length - 1; n >= 0; n--)\r\n        a[v[n].nodeName] = SVG.regex.isNumber.test(v[n].nodeValue) ? parseFloat(v[n].nodeValue) : v[n].nodeValue\r\n\r\n      return a\r\n\r\n    } else if (typeof a == 'object') {\r\n      // apply every attribute individually if an object is passed\r\n      for (v in a) this.attr(v, a[v])\r\n\r\n    } else if (v === null) {\r\n        // remove value\r\n        this.node.removeAttribute(a)\r\n\r\n    } else if (v == null) {\r\n      // act as a getter if the first and only argument is not an object\r\n      v = this.node.getAttribute(a)\r\n      return v == null ?\r\n        SVG.defaults.attrs[a] :\r\n      SVG.regex.isNumber.test(v) ?\r\n        parseFloat(v) : v\r\n\r\n    } else {\r\n      // BUG FIX: some browsers will render a stroke if a color is given even though stroke width is 0\r\n      if (a == 'stroke-width')\r\n        this.attr('stroke', parseFloat(v) > 0 ? this._stroke : null)\r\n      else if (a == 'stroke')\r\n        this._stroke = v\r\n\r\n      // convert image fill and stroke to patterns\r\n      if (a == 'fill' || a == 'stroke') {\r\n        if (SVG.regex.isImage.test(v))\r\n          v = this.doc().defs().image(v, 0, 0)\r\n\r\n        if (v instanceof SVG.Image)\r\n          v = this.doc().defs().pattern(0, 0, function() {\r\n            this.add(v)\r\n          })\r\n      }\r\n\r\n      // ensure correct numeric values (also accepts NaN and Infinity)\r\n      if (typeof v === 'number')\r\n        v = new SVG.Number(v)\r\n\r\n      // ensure full hex color\r\n      else if (SVG.Color.isColor(v))\r\n        v = new SVG.Color(v)\r\n\r\n      // parse array values\r\n      else if (Array.isArray(v))\r\n        v = new SVG.Array(v)\r\n\r\n      // store parametric transformation values locally\r\n      else if (v instanceof SVG.Matrix && v.param)\r\n        this.param = v.param\r\n\r\n      // if the passed attribute is leading...\r\n      if (a == 'leading') {\r\n        // ... call the leading method instead\r\n        if (this.leading)\r\n          this.leading(v)\r\n      } else {\r\n        // set given attribute on node\r\n        typeof n === 'string' ?\r\n          this.node.setAttributeNS(n, a, v.toString()) :\r\n          this.node.setAttribute(a, v.toString())\r\n      }\r\n\r\n      // rebuild if required\r\n      if (this.rebuild && (a == 'font-size' || a == 'x'))\r\n        this.rebuild(a, v)\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.extend(SVG.Element, SVG.FX, {\r\n  // Add transformations\r\n  transform: function(o, relative) {\r\n    // get target in case of the fx module, otherwise reference this\r\n    var target = this.target || this\r\n      , matrix\r\n\r\n    // act as a getter\r\n    if (typeof o !== 'object') {\r\n      // get current matrix\r\n      matrix = new SVG.Matrix(target).extract()\r\n\r\n      // add parametric rotation\r\n      if (typeof this.param === 'object') {\r\n        matrix.rotation = this.param.rotation\r\n        matrix.cx       = this.param.cx\r\n        matrix.cy       = this.param.cy\r\n      }\r\n\r\n      return typeof o === 'string' ? matrix[o] : matrix\r\n    }\r\n\r\n    // get current matrix\r\n    matrix = this instanceof SVG.FX && this.attrs.transform ?\r\n      this.attrs.transform :\r\n      new SVG.Matrix(target)\r\n\r\n    // ensure relative flag\r\n    relative = !!relative || !!o.relative\r\n\r\n    // act on matrix\r\n    if (o.a != null) {\r\n      matrix = relative ?\r\n        // relative\r\n        matrix.multiply(new SVG.Matrix(o)) :\r\n        // absolute\r\n        new SVG.Matrix(o)\r\n\r\n    // act on rotation\r\n    } else if (o.rotation != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // relativize rotation value\r\n      if (relative) {\r\n        o.rotation += this.param && this.param.rotation != null ?\r\n          this.param.rotation :\r\n          matrix.extract().rotation\r\n      }\r\n\r\n      // store parametric values\r\n      this.param = o\r\n\r\n      // apply transformation\r\n      if (this instanceof SVG.Element) {\r\n        matrix = relative ?\r\n          // relative\r\n          matrix.rotate(o.rotation, o.cx, o.cy) :\r\n          // absolute\r\n          matrix.rotate(o.rotation - matrix.extract().rotation, o.cx, o.cy)\r\n      }\r\n\r\n    // act on scale\r\n    } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure scale values on both axes\r\n      o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1\r\n      o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1\r\n\r\n      if (!relative) {\r\n        // absolute; multiply inversed values\r\n        var e = matrix.extract()\r\n        o.scaleX = o.scaleX * 1 / e.scaleX\r\n        o.scaleY = o.scaleY * 1 / e.scaleY\r\n      }\r\n\r\n      matrix = matrix.scale(o.scaleX, o.scaleY, o.cx, o.cy)\r\n\r\n    // act on skew\r\n    } else if (o.skewX != null || o.skewY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure skew values on both axes\r\n      o.skewX = o.skewX != null ? o.skewX : 0\r\n      o.skewY = o.skewY != null ? o.skewY : 0\r\n\r\n      if (!relative) {\r\n        // absolute; reset skew values\r\n        var e = matrix.extract()\r\n        matrix = matrix.multiply(new SVG.Matrix().skew(e.skewX, e.skewY, o.cx, o.cy).inverse())\r\n      }\r\n\r\n      matrix = matrix.skew(o.skewX, o.skewY, o.cx, o.cy)\r\n\r\n    // act on flip\r\n    } else if (o.flip) {\r\n      matrix = matrix.flip(\r\n        o.flip\r\n      , o.offset == null ? target.bbox()['c' + o.flip] : o.offset\r\n      )\r\n\r\n    // act on translate\r\n    } else if (o.x != null || o.y != null) {\r\n      if (relative) {\r\n        // relative\r\n        matrix = matrix.translate(o.x, o.y)\r\n      } else {\r\n        // absolute\r\n        if (o.x != null) matrix.e = o.x\r\n        if (o.y != null) matrix.f = o.y\r\n      }\r\n    }\r\n\r\n    return this.attr(this instanceof SVG.Pattern ? 'patternTransform' : this instanceof SVG.Gradient ? 'gradientTransform' : 'transform', matrix)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Reset all transformations\r\n  untransform: function() {\r\n    return this.attr('transform', null)\r\n  },\r\n  // merge the whole transformation chain into one matrix\r\n  matrixify: function() {\r\n\r\n    var matrix = (this.attr('transform') || '')\r\n      // split transformations\r\n      .split(/\\)\\s*/).slice(0,-1).map(function(str){\r\n        // generate key => value pairs\r\n        var kv = str.trim().split('(')\r\n        return [kv[0], kv[1].split(SVG.regex.matrixElements).map(function(str){ return parseFloat(str) })]\r\n      })\r\n      // calculate every transformation into one matrix\r\n      .reduce(function(matrix, transform){\r\n\r\n        if(transform[0] == 'matrix') return matrix.multiply(arrayToMatrix(transform[1]))\r\n        return matrix[transform[0]].apply(matrix, transform[1])\r\n\r\n      }, new SVG.Matrix())\r\n    // apply calculated matrix to element\r\n    this.attr('transform', matrix)\r\n\r\n    return matrix\r\n  },\r\n  // add an element to another parent without changing the visual representation on the screen\r\n  toParent: function(parent) {\r\n    if(this == parent) return this\r\n    var ctm = this.screenCTM()\r\n    var temp = parent.rect(1,1)\r\n    var pCtm = temp.screenCTM().inverse()\r\n    temp.remove()\r\n\r\n    this.addTo(parent).untransform().transform(pCtm.multiply(ctm))\r\n\r\n    return this\r\n  },\r\n  // same as above with parent equals root-svg\r\n  toDoc: function() {\r\n    return this.toParent(this.doc())\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Element, {\r\n  // Dynamic style generator\r\n  style: function(s, v) {\r\n    if (arguments.length == 0) {\r\n      // get full style\r\n      return this.node.style.cssText || ''\r\n\r\n    } else if (arguments.length < 2) {\r\n      // apply every style individually if an object is passed\r\n      if (typeof s == 'object') {\r\n        for (v in s) this.style(v, s[v])\r\n\r\n      } else if (SVG.regex.isCss.test(s)) {\r\n        // parse css string\r\n        s = s.split(';')\r\n\r\n        // apply every definition individually\r\n        for (var i = 0; i < s.length; i++) {\r\n          v = s[i].split(':')\r\n          this.style(v[0].replace(/\\s+/g, ''), v[1])\r\n        }\r\n      } else {\r\n        // act as a getter if the first and only argument is not an object\r\n        return this.node.style[camelCase(s)]\r\n      }\r\n\r\n    } else {\r\n      this.node.style[camelCase(s)] = v === null || SVG.regex.isBlank.test(v) ? '' : v\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.Parent = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Returns all child elements\r\n    children: function() {\r\n      return SVG.utils.map(SVG.utils.filterSVGElements(this.node.childNodes), function(node) {\r\n        return SVG.adopt(node)\r\n      })\r\n    }\r\n    // Add given element at a position\r\n  , add: function(element, i) {\r\n      if (!this.has(element)) {\r\n        // define insertion index if none given\r\n        i = i == null ? this.children().length : i\r\n\r\n        // add element references\r\n        this.node.insertBefore(element.node, this.node.childNodes[i] || null)\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Basically does the same as `add()` but returns the added element instead\r\n  , put: function(element, i) {\r\n      this.add(element, i)\r\n      return element\r\n    }\r\n    // Checks if the given element is a child\r\n  , has: function(element) {\r\n      return this.index(element) >= 0\r\n    }\r\n    // Gets index of given element\r\n  , index: function(element) {\r\n      return this.children().indexOf(element)\r\n    }\r\n    // Get a element at the given index\r\n  , get: function(i) {\r\n      return this.children()[i]\r\n    }\r\n    // Get first child, skipping the defs node\r\n  , first: function() {\r\n      return this.children()[0]\r\n    }\r\n    // Get the last child\r\n  , last: function() {\r\n      return this.children()[this.children().length - 1]\r\n    }\r\n    // Iterates over all children and invokes a given block\r\n  , each: function(block, deep) {\r\n      var i, il\r\n        , children = this.children()\r\n\r\n      for (i = 0, il = children.length; i < il; i++) {\r\n        if (children[i] instanceof SVG.Element)\r\n          block.apply(children[i], [i, children])\r\n\r\n        if (deep && (children[i] instanceof SVG.Container))\r\n          children[i].each(block, deep)\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Remove a given child\r\n  , removeElement: function(element) {\r\n      this.node.removeChild(element.node)\r\n\r\n      return this\r\n    }\r\n    // Remove all elements in this container\r\n  , clear: function() {\r\n      // remove children\r\n      while(this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // remove defs reference\r\n      delete this._defs\r\n\r\n      return this\r\n    }\r\n  , // Get defs\r\n    defs: function() {\r\n      return this.doc().defs()\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Parent, {\r\n\r\n  ungroup: function(parent, depth) {\r\n    if(depth === 0 || this instanceof SVG.Defs) return this\r\n\r\n    parent = parent || (this instanceof SVG.Doc ? this : this.parent(SVG.Parent))\r\n    depth = depth || Infinity\r\n\r\n    this.each(function(){\r\n      if(this instanceof SVG.Defs) return this\r\n      if(this instanceof SVG.Parent) return this.ungroup(parent, depth-1)\r\n      return this.toParent(parent)\r\n    })\r\n\r\n    this.node.firstChild || this.remove()\r\n\r\n    return this\r\n  },\r\n\r\n  flatten: function(parent, depth) {\r\n    return this.ungroup(parent, depth)\r\n  }\r\n\r\n})\nSVG.Container = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Parent\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Get the viewBox and calculate the zoom value\r\n    viewbox: function(v) {\r\n      if (arguments.length == 0)\r\n        // act as a getter if there are no arguments\r\n        return new SVG.ViewBox(this)\r\n\r\n      // otherwise act as a setter\r\n      v = arguments.length == 1 ?\r\n        [v.x, v.y, v.width, v.height] :\r\n        [].slice.call(arguments)\r\n\r\n      return this.attr('viewBox', v)\r\n    }\r\n  }\r\n\r\n})\n// Add events to elements\r\n;[  'click'\r\n  , 'dblclick'\r\n  , 'mousedown'\r\n  , 'mouseup'\r\n  , 'mouseover'\r\n  , 'mouseout'\r\n  , 'mousemove'\r\n  // , 'mouseenter' -> not supported by IE\r\n  // , 'mouseleave' -> not supported by IE\r\n  , 'touchstart'\r\n  , 'touchmove'\r\n  , 'touchleave'\r\n  , 'touchend'\r\n  , 'touchcancel' ].forEach(function(event) {\r\n\r\n  // add event to SVG.Element\r\n  SVG.Element.prototype[event] = function(f) {\r\n    var self = this\r\n\r\n    // bind event to element rather than element node\r\n    this.node['on' + event] = typeof f == 'function' ?\r\n      function() { return f.apply(self, arguments) } : null\r\n\r\n    return this\r\n  }\r\n\r\n})\r\n\r\n// Initialize listeners stack\r\nSVG.listeners = []\r\nSVG.handlerMap = []\r\n\r\n// Add event binder in the SVG namespace\r\nSVG.on = function(node, event, listener, binding) {\r\n  // create listener, get object-index\r\n  var l     = listener.bind(binding || node.instance || node)\r\n    , index = (SVG.handlerMap.indexOf(node) + 1 || SVG.handlerMap.push(node)) - 1\r\n    , ev    = event.split('.')[0]\r\n    , ns    = event.split('.')[1] || '*'\r\n\r\n\r\n  // ensure valid object\r\n  SVG.listeners[index]         = SVG.listeners[index]         || {}\r\n  SVG.listeners[index][ev]     = SVG.listeners[index][ev]     || {}\r\n  SVG.listeners[index][ev][ns] = SVG.listeners[index][ev][ns] || {}\r\n\r\n  // reference listener\r\n  SVG.listeners[index][ev][ns][listener] = l\r\n\r\n  // add listener\r\n  node.addEventListener(ev, l, false)\r\n}\r\n\r\n// Add event unbinder in the SVG namespace\r\nSVG.off = function(node, event, listener) {\r\n  var index = SVG.handlerMap.indexOf(node)\r\n    , ev    = event && event.split('.')[0]\r\n    , ns    = event && event.split('.')[1]\r\n\r\n  if(index == -1) return\r\n\r\n  if (listener) {\r\n    // remove listener reference\r\n    if (SVG.listeners[index][ev] && SVG.listeners[index][ev][ns || '*']) {\r\n      // remove listener\r\n      node.removeEventListener(ev, SVG.listeners[index][ev][ns || '*'][listener], false)\r\n\r\n      delete SVG.listeners[index][ev][ns || '*'][listener]\r\n    }\r\n\r\n  } else if (ns && ev) {\r\n    // remove all listeners for a namespaced event\r\n    if (SVG.listeners[index][ev] && SVG.listeners[index][ev][ns]) {\r\n      for (listener in SVG.listeners[index][ev][ns])\r\n        SVG.off(node, [ev, ns].join('.'), listener)\r\n\r\n      delete SVG.listeners[index][ev][ns]\r\n    }\r\n\r\n  } else if (ns){\r\n    // remove all listeners for a specific namespace\r\n    for(event in SVG.listeners[index]){\r\n        for(namespace in SVG.listeners[index][event]){\r\n            if(ns === namespace){\r\n                SVG.off(node, [event, ns].join('.'))\r\n            }\r\n        }\r\n    }\r\n\r\n  } else if (ev) {\r\n    // remove all listeners for the event\r\n    if (SVG.listeners[index][ev]) {\r\n      for (namespace in SVG.listeners[index][ev])\r\n        SVG.off(node, [ev, namespace].join('.'))\r\n\r\n      delete SVG.listeners[index][ev]\r\n    }\r\n\r\n  } else {\r\n    // remove all listeners on a given node\r\n    for (event in SVG.listeners[index])\r\n      SVG.off(node, event)\r\n\r\n    delete SVG.listeners[index]\r\n\r\n  }\r\n}\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Bind given event to listener\r\n  on: function(event, listener, binding) {\r\n    SVG.on(this.node, event, listener, binding)\r\n\r\n    return this\r\n  }\r\n  // Unbind event from listener\r\n, off: function(event, listener) {\r\n    SVG.off(this.node, event, listener)\r\n\r\n    return this\r\n  }\r\n  // Fire given event\r\n, fire: function(event, data) {\r\n\r\n    // Dispatch event\r\n    if(event instanceof Event){\r\n        this.node.dispatchEvent(event)\r\n    }else{\r\n        this.node.dispatchEvent(new CustomEvent(event, {detail:data}))\r\n    }\r\n\r\n    return this\r\n  }\r\n})\n\r\nSVG.Defs = SVG.invent({\r\n  // Initialize node\r\n  create: 'defs'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n})\nSVG.G = SVG.invent({\r\n  // Initialize node\r\n  create: 'g'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return x == null ? this.transform('x') : this.transform({ x: -this.x() + x }, true)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.transform('y') : this.transform({ y: -this.y() + y }, true)\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.tbox().cx : this.x(x - this.tbox().width / 2)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.tbox().cy : this.y(y - this.tbox().height / 2)\r\n    }\r\n  , gbox: function() {\r\n\r\n      var bbox  = this.bbox()\r\n        , trans = this.transform()\r\n\r\n      bbox.x  += trans.x\r\n      bbox.x2 += trans.x\r\n      bbox.cx += trans.x\r\n\r\n      bbox.y  += trans.y\r\n      bbox.y2 += trans.y\r\n      bbox.cy += trans.y\r\n\r\n      return bbox\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a group element\r\n    group: function() {\r\n      return this.put(new SVG.G)\r\n    }\r\n  }\r\n})\n// ### This module adds backward / forward functionality to elements.\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Get all siblings, including myself\r\n  siblings: function() {\r\n    return this.parent().children()\r\n  }\r\n  // Get the curent position siblings\r\n, position: function() {\r\n    return this.parent().index(this)\r\n  }\r\n  // Get the next element (will return null if there is none)\r\n, next: function() {\r\n    return this.siblings()[this.position() + 1]\r\n  }\r\n  // Get the next element (will return null if there is none)\r\n, previous: function() {\r\n    return this.siblings()[this.position() - 1]\r\n  }\r\n  // Send given element one step forward\r\n, forward: function() {\r\n    var i = this.position() + 1\r\n      , p = this.parent()\r\n\r\n    // move node one step forward\r\n    p.removeElement(this).add(this, i)\r\n\r\n    // make sure defs node is always at the top\r\n    if (p instanceof SVG.Doc)\r\n      p.node.appendChild(p.defs().node)\r\n\r\n    return this\r\n  }\r\n  // Send given element one step backward\r\n, backward: function() {\r\n    var i = this.position()\r\n\r\n    if (i > 0)\r\n      this.parent().removeElement(this).add(this, i - 1)\r\n\r\n    return this\r\n  }\r\n  // Send given element all the way to the front\r\n, front: function() {\r\n    var p = this.parent()\r\n\r\n    // Move node forward\r\n    p.node.appendChild(this.node)\r\n\r\n    // Make sure defs node is always at the top\r\n    if (p instanceof SVG.Doc)\r\n      p.node.appendChild(p.defs().node)\r\n\r\n    return this\r\n  }\r\n  // Send given element all the way to the back\r\n, back: function() {\r\n    if (this.position() > 0)\r\n      this.parent().removeElement(this).add(this, 0)\r\n\r\n    return this\r\n  }\r\n  // Inserts a given element before the targeted element\r\n, before: function(element) {\r\n    element.remove()\r\n\r\n    var i = this.position()\r\n\r\n    this.parent().add(element, i)\r\n\r\n    return this\r\n  }\r\n  // Insters a given element after the targeted element\r\n, after: function(element) {\r\n    element.remove()\r\n\r\n    var i = this.position()\r\n\r\n    this.parent().add(element, i + 1)\r\n\r\n    return this\r\n  }\r\n\r\n})\nSVG.Mask = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('mask'))\r\n\r\n    // keep references to masked elements\r\n    this.targets = []\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Unmask all masked elements and remove itself\r\n    remove: function() {\r\n      // unmask all targets\r\n      for (var i = this.targets.length - 1; i >= 0; i--)\r\n        if (this.targets[i])\r\n          this.targets[i].unmask()\r\n      this.targets = []\r\n\r\n      // remove mask from parent\r\n      this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create masking element\r\n    mask: function() {\r\n      return this.defs().put(new SVG.Mask)\r\n    }\r\n  }\r\n})\r\n\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Distribute mask to svg element\r\n  maskWith: function(element) {\r\n    // use given mask or create a new one\r\n    this.masker = element instanceof SVG.Mask ? element : this.parent().mask().add(element)\r\n\r\n    // store reverence on self in mask\r\n    this.masker.targets.push(this)\r\n\r\n    // apply mask\r\n    return this.attr('mask', 'url(\"#' + this.masker.attr('id') + '\")')\r\n  }\r\n  // Unmask element\r\n, unmask: function() {\r\n    delete this.masker\r\n    return this.attr('mask', null)\r\n  }\r\n\r\n})\r\n\nSVG.ClipPath = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('clipPath'))\r\n\r\n    // keep references to clipped elements\r\n    this.targets = []\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Unclip all clipped elements and remove itself\r\n    remove: function() {\r\n      // unclip all targets\r\n      for (var i = this.targets.length - 1; i >= 0; i--)\r\n        if (this.targets[i])\r\n          this.targets[i].unclip()\r\n      this.targets = []\r\n\r\n      // remove clipPath from parent\r\n      this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create clipping element\r\n    clip: function() {\r\n      return this.defs().put(new SVG.ClipPath)\r\n    }\r\n  }\r\n})\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Distribute clipPath to svg element\r\n  clipWith: function(element) {\r\n    // use given clip or create a new one\r\n    this.clipper = element instanceof SVG.ClipPath ? element : this.parent().clip().add(element)\r\n\r\n    // store reverence on self in mask\r\n    this.clipper.targets.push(this)\r\n\r\n    // apply mask\r\n    return this.attr('clip-path', 'url(\"#' + this.clipper.attr('id') + '\")')\r\n  }\r\n  // Unclip element\r\n, unclip: function() {\r\n    delete this.clipper\r\n    return this.attr('clip-path', null)\r\n  }\r\n\r\n})\nSVG.Gradient = SVG.invent({\r\n  // Initialize node\r\n  create: function(type) {\r\n    this.constructor.call(this, SVG.create(type + 'Gradient'))\r\n\r\n    // store type\r\n    this.type = type\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add a color stop\r\n    at: function(offset, color, opacity) {\r\n      return this.put(new SVG.Stop).update(offset, color, opacity)\r\n    }\r\n    // Update gradient\r\n  , update: function(block) {\r\n      // remove all stops\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Return the fill id\r\n  , fill: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n    // Alias string convertion to fill\r\n  , toString: function() {\r\n      return this.fill()\r\n    }\r\n    // custom attr to handle transform\r\n  , attr: function(a, b, c) {\r\n      if(a == 'transform') a = 'gradientTransform'\r\n      return SVG.Container.prototype.attr.call(this, a, b, c)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create gradient element in defs\r\n    gradient: function(type, block) {\r\n      return this.defs().gradient(type, block)\r\n    }\r\n  }\r\n})\r\n\r\n// Add animatable methods to both gradient and fx module\r\nSVG.extend(SVG.Gradient, SVG.FX, {\r\n  // From position\r\n  from: function(x, y) {\r\n    return (this.target || this).type == 'radial' ?\r\n      this.attr({ fx: new SVG.Number(x), fy: new SVG.Number(y) }) :\r\n      this.attr({ x1: new SVG.Number(x), y1: new SVG.Number(y) })\r\n  }\r\n  // To position\r\n, to: function(x, y) {\r\n    return (this.target || this).type == 'radial' ?\r\n      this.attr({ cx: new SVG.Number(x), cy: new SVG.Number(y) }) :\r\n      this.attr({ x2: new SVG.Number(x), y2: new SVG.Number(y) })\r\n  }\r\n})\r\n\r\n// Base gradient generation\r\nSVG.extend(SVG.Defs, {\r\n  // define gradient\r\n  gradient: function(type, block) {\r\n    return this.put(new SVG.Gradient(type)).update(block)\r\n  }\r\n\r\n})\r\n\r\nSVG.Stop = SVG.invent({\r\n  // Initialize node\r\n  create: 'stop'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // add color stops\r\n    update: function(o) {\r\n      if (typeof o == 'number' || o instanceof SVG.Number) {\r\n        o = {\r\n          offset:  arguments[0]\r\n        , color:   arguments[1]\r\n        , opacity: arguments[2]\r\n        }\r\n      }\r\n\r\n      // set attributes\r\n      if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n      if (o.color   != null) this.attr('stop-color', o.color)\r\n      if (o.offset  != null) this.attr('offset', new SVG.Number(o.offset))\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.Pattern = SVG.invent({\r\n  // Initialize node\r\n  create: 'pattern'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Return the fill id\r\n    fill: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n    // Update pattern by rebuilding\r\n  , update: function(block) {\r\n      // remove content\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Alias string convertion to fill\r\n  , toString: function() {\r\n      return this.fill()\r\n    }\r\n    // custom attr to handle transform\r\n  , attr: function(a, b, c) {\r\n      if(a == 'transform') a = 'patternTransform'\r\n      return SVG.Container.prototype.attr.call(this, a, b, c)\r\n    }\r\n\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create pattern element in defs\r\n    pattern: function(width, height, block) {\r\n      return this.defs().pattern(width, height, block)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Defs, {\r\n  // Define gradient\r\n  pattern: function(width, height, block) {\r\n    return this.put(new SVG.Pattern).update(block).attr({\r\n      x:            0\r\n    , y:            0\r\n    , width:        width\r\n    , height:       height\r\n    , patternUnits: 'userSpaceOnUse'\r\n    })\r\n  }\r\n\r\n})\nSVG.Doc = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    if (element) {\r\n      // ensure the presence of a dom element\r\n      element = typeof element == 'string' ?\r\n        document.getElementById(element) :\r\n        element\r\n\r\n      // If the target is an svg element, use that element as the main wrapper.\r\n      // This allows svg.js to work with svg documents as well.\r\n      if (element.nodeName == 'svg') {\r\n        this.constructor.call(this, element)\r\n      } else {\r\n        this.constructor.call(this, SVG.create('svg'))\r\n        element.appendChild(this.node)\r\n      }\r\n\r\n      // set svg element attributes and ensure defs node\r\n      this.namespace().size('100%', '100%').defs()\r\n    }\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add namespaces\r\n    namespace: function() {\r\n      return this\r\n        .attr({ xmlns: SVG.ns, version: '1.1' })\r\n        .attr('xmlns:xlink', SVG.xlink, SVG.xmlns)\r\n        .attr('xmlns:svgjs', SVG.svgjs, SVG.xmlns)\r\n    }\r\n    // Creates and returns defs element\r\n  , defs: function() {\r\n      if (!this._defs) {\r\n        var defs\r\n\r\n        // Find or create a defs element in this instance\r\n        if (defs = this.node.getElementsByTagName('defs')[0])\r\n          this._defs = SVG.adopt(defs)\r\n        else\r\n          this._defs = new SVG.Defs\r\n\r\n        // Make sure the defs node is at the end of the stack\r\n        this.node.appendChild(this._defs.node)\r\n      }\r\n\r\n      return this._defs\r\n    }\r\n    // custom parent method\r\n  , parent: function() {\r\n      return this.node.parentNode.nodeName == '#document' ? null : this.node.parentNode\r\n    }\r\n    // Fix for possible sub-pixel offset. See:\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=608812\r\n  , spof: function(spof) {\r\n      var pos = this.node.getScreenCTM()\r\n\r\n      if (pos)\r\n        this\r\n          .style('left', (-pos.e % 1) + 'px')\r\n          .style('top',  (-pos.f % 1) + 'px')\r\n\r\n      return this\r\n    }\r\n\r\n      // Removes the doc from the DOM\r\n  , remove: function() {\r\n      if(this.parent()) {\r\n        this.parent().removeChild(this.node);\r\n      }\r\n\r\n      return this;\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.Shape = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n})\n\r\nSVG.Bare = SVG.invent({\r\n  // Initialize\r\n  create: function(element, inherit) {\r\n    // construct element\r\n    this.constructor.call(this, SVG.create(element))\r\n\r\n    // inherit custom methods\r\n    if (inherit)\r\n      for (var method in inherit.prototype)\r\n        if (typeof inherit.prototype[method] === 'function')\r\n          this[method] = inherit.prototype[method]\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Insert some plain text\r\n    words: function(text) {\r\n      // remove contents\r\n      while (this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // create text node\r\n      this.node.appendChild(document.createTextNode(text))\r\n\r\n      return this\r\n    }\r\n  }\r\n})\r\n\r\n\r\nSVG.extend(SVG.Parent, {\r\n  // Create an element that is not described by SVG.js\r\n  element: function(element, inherit) {\r\n    return this.put(new SVG.Bare(element, inherit))\r\n  }\r\n  // Add symbol element\r\n, symbol: function() {\r\n    return this.defs().element('symbol', SVG.Container)\r\n  }\r\n\r\n})\nSVG.Use = SVG.invent({\r\n  // Initialize node\r\n  create: 'use'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Use element as a reference\r\n    element: function(element, file) {\r\n      // Set lined element\r\n      return this.attr('href', (file || '') + '#' + element, SVG.xlink)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a use element\r\n    use: function(element, file) {\r\n      return this.put(new SVG.Use).element(element, file)\r\n    }\r\n  }\r\n})\nSVG.Rect = SVG.invent({\r\n  // Initialize node\r\n  create: 'rect'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a rect element\r\n    rect: function(width, height) {\r\n      return this.put(new SVG.Rect()).size(width, height)\r\n    }\r\n  }\r\n})\nSVG.Circle = SVG.invent({\r\n  // Initialize node\r\n  create: 'circle'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create circle element, based on ellipse\r\n    circle: function(size) {\r\n      return this.put(new SVG.Circle).rx(new SVG.Number(size).divide(2)).move(0, 0)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Circle, SVG.FX, {\r\n  // Radius x value\r\n  rx: function(rx) {\r\n    return this.attr('r', rx)\r\n  }\r\n  // Alias radius x value\r\n, ry: function(ry) {\r\n    return this.rx(ry)\r\n  }\r\n})\r\n\r\nSVG.Ellipse = SVG.invent({\r\n  // Initialize node\r\n  create: 'ellipse'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create an ellipse\r\n    ellipse: function(width, height) {\r\n      return this.put(new SVG.Ellipse).size(width, height).move(0, 0)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Ellipse, SVG.Rect, SVG.FX, {\r\n  // Radius x value\r\n  rx: function(rx) {\r\n    return this.attr('rx', rx)\r\n  }\r\n  // Radius y value\r\n, ry: function(ry) {\r\n    return this.attr('ry', ry)\r\n  }\r\n})\r\n\r\n// Add common method\r\nSVG.extend(SVG.Circle, SVG.Ellipse, {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return x == null ? this.cx() - this.rx() : this.cx(x + this.rx())\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.cy() - this.ry() : this.cy(y + this.ry())\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.attr('cx') : this.attr('cx', x)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.attr('cy') : this.attr('cy', y)\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return width == null ? this.rx() * 2 : this.rx(new SVG.Number(width).divide(2))\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return height == null ? this.ry() * 2 : this.ry(new SVG.Number(height).divide(2))\r\n    }\r\n    // Custom size function\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this.bbox(), width, height)\r\n\r\n      return this\r\n        .rx(new SVG.Number(p.width).divide(2))\r\n        .ry(new SVG.Number(p.height).divide(2))\r\n    }\r\n})\nSVG.Line = SVG.invent({\r\n  // Initialize node\r\n  create: 'line'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Get array\r\n    array: function() {\r\n      return new SVG.PointArray([\r\n        [ this.attr('x1'), this.attr('y1') ]\r\n      , [ this.attr('x2'), this.attr('y2') ]\r\n      ])\r\n    }\r\n    // Overwrite native plot() method\r\n  , plot: function(x1, y1, x2, y2) {\r\n      if (arguments.length == 4)\r\n        x1 = { x1: x1, y1: y1, x2: x2, y2: y2 }\r\n      else\r\n        x1 = new SVG.PointArray(x1).toLine()\r\n\r\n      return this.attr(x1)\r\n    }\r\n    // Move by left top corner\r\n  , move: function(x, y) {\r\n      return this.attr(this.array().move(x, y).toLine())\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this.bbox(), width, height)\r\n\r\n      return this.attr(this.array().size(p.width, p.height).toLine())\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a line element\r\n    line: function(x1, y1, x2, y2) {\r\n      return this.put(new SVG.Line).plot(x1, y1, x2, y2)\r\n    }\r\n  }\r\n})\r\n\nSVG.Polyline = SVG.invent({\r\n  // Initialize node\r\n  create: 'polyline'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped polyline element\r\n    polyline: function(p) {\r\n      return this.put(new SVG.Polyline).plot(p)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.Polygon = SVG.invent({\r\n  // Initialize node\r\n  create: 'polygon'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped polygon element\r\n    polygon: function(p) {\r\n      return this.put(new SVG.Polygon).plot(p)\r\n    }\r\n  }\r\n})\r\n\r\n// Add polygon-specific functions\r\nSVG.extend(SVG.Polyline, SVG.Polygon, {\r\n  // Get array\r\n  array: function() {\r\n    return this._array || (this._array = new SVG.PointArray(this.attr('points')))\r\n  }\r\n  // Plot new path\r\n, plot: function(p) {\r\n    return this.attr('points', (this._array = new SVG.PointArray(p)))\r\n  }\r\n  // Move by left top corner\r\n, move: function(x, y) {\r\n    return this.attr('points', this.array().move(x, y))\r\n  }\r\n  // Set element size to given width and height\r\n, size: function(width, height) {\r\n    var p = proportionalSize(this.bbox(), width, height)\r\n\r\n    return this.attr('points', this.array().size(p.width, p.height))\r\n  }\r\n\r\n})\n// unify all point to point elements\r\nSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, {\r\n  // Define morphable array\r\n  morphArray:  SVG.PointArray\r\n  // Move by left top corner over x-axis\r\n, x: function(x) {\r\n    return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n  }\r\n  // Move by left top corner over y-axis\r\n, y: function(y) {\r\n    return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n  }\r\n  // Set width of element\r\n, width: function(width) {\r\n    var b = this.bbox()\r\n\r\n    return width == null ? b.width : this.size(width, b.height)\r\n  }\r\n  // Set height of element\r\n, height: function(height) {\r\n    var b = this.bbox()\r\n\r\n    return height == null ? b.height : this.size(b.width, height)\r\n  }\r\n})\nSVG.Path = SVG.invent({\r\n  // Initialize node\r\n  create: 'path'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Define morphable array\r\n    morphArray:  SVG.PathArray\r\n    // Get array\r\n  , array: function() {\r\n      return this._array || (this._array = new SVG.PathArray(this.attr('d')))\r\n    }\r\n    // Plot new poly points\r\n  , plot: function(p) {\r\n      return this.attr('d', (this._array = new SVG.PathArray(p)))\r\n    }\r\n    // Move by left top corner\r\n  , move: function(x, y) {\r\n      return this.attr('d', this.array().move(x, y))\r\n    }\r\n    // Move by left top corner over x-axis\r\n  , x: function(x) {\r\n      return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n    }\r\n    // Move by left top corner over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this.bbox(), width, height)\r\n\r\n      return this.attr('d', this.array().size(p.width, p.height))\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return width == null ? this.bbox().width : this.size(width, this.bbox().height)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return height == null ? this.bbox().height : this.size(this.bbox().width, height)\r\n    }\r\n\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped path element\r\n    path: function(d) {\r\n      return this.put(new SVG.Path).plot(d)\r\n    }\r\n  }\r\n})\nSVG.Image = SVG.invent({\r\n  // Initialize node\r\n  create: 'image'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // (re)load image\r\n    load: function(url) {\r\n      if (!url) return this\r\n\r\n      var self = this\r\n        , img  = document.createElement('img')\r\n\r\n      // preload image\r\n      img.onload = function() {\r\n        var p = self.parent(SVG.Pattern)\r\n\r\n        if(p === null) return\r\n\r\n        // ensure image size\r\n        if (self.width() == 0 && self.height() == 0)\r\n          self.size(img.width, img.height)\r\n\r\n        // ensure pattern size if not set\r\n        if (p && p.width() == 0 && p.height() == 0)\r\n          p.size(self.width(), self.height())\r\n\r\n        // callback\r\n        if (typeof self._loaded === 'function')\r\n          self._loaded.call(self, {\r\n            width:  img.width\r\n          , height: img.height\r\n          , ratio:  img.width / img.height\r\n          , url:    url\r\n          })\r\n      }\r\n\r\n      return this.attr('href', (img.src = this.src = url), SVG.xlink)\r\n    }\r\n    // Add loaded callback\r\n  , loaded: function(loaded) {\r\n      this._loaded = loaded\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // create image element, load image and set its size\r\n    image: function(source, width, height) {\r\n      return this.put(new SVG.Image).load(source).size(width || 0, height || width || 0)\r\n    }\r\n  }\r\n\r\n})\nSVG.Text = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('text'))\r\n\r\n    this.dom.leading = new SVG.Number(1.3)    // store leading value for rebuilding\r\n    this._rebuild = true                      // enable automatic updating of dy values\r\n    this._build   = false                     // disable build mode for adding multiple lines\r\n\r\n    // set default font\r\n    this.attr('font-family', SVG.defaults.attrs['font-family'])\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    clone: function(){\r\n      // clone element and assign new id\r\n      var clone = assignNewId(this.node.cloneNode(true))\r\n\r\n      // insert the clone after myself\r\n      this.after(clone)\r\n\r\n      return clone\r\n    }\r\n    // Move over x-axis\r\n  , x: function(x) {\r\n      // act as getter\r\n      if (x == null)\r\n        return this.attr('x')\r\n\r\n      // move lines as well if no textPath is present\r\n      if (!this.textPath)\r\n        this.lines().each(function() { if (this.dom.newLined) this.x(x) })\r\n\r\n      return this.attr('x', x)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      var oy = this.attr('y')\r\n        , o  = typeof oy === 'number' ? oy - this.bbox().y : 0\r\n\r\n      // act as getter\r\n      if (y == null)\r\n        return typeof oy === 'number' ? oy - o : oy\r\n\r\n      return this.attr('y', typeof y === 'number' ? y + o : y)\r\n    }\r\n    // Move center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.bbox().cx : this.x(x - this.bbox().width / 2)\r\n    }\r\n    // Move center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.bbox().cy : this.y(y - this.bbox().height / 2)\r\n    }\r\n    // Set the text content\r\n  , text: function(text) {\r\n      // act as getter\r\n      if (typeof text === 'undefined'){\r\n        var text = ''\r\n        var children = this.node.childNodes\r\n        for(var i = 0, len = children.length; i < len; ++i){\r\n\r\n          // add newline if its not the first child and newLined is set to true\r\n          if(i != 0 && children[i].nodeType != 3 && SVG.adopt(children[i]).dom.newLined == true){\r\n            text += '\\n'\r\n          }\r\n\r\n          // add content of this node\r\n          text += children[i].textContent\r\n        }\r\n\r\n        return text\r\n      }\r\n\r\n      // remove existing content\r\n      this.clear().build(true)\r\n\r\n      if (typeof text === 'function') {\r\n        // call block\r\n        text.call(this, this)\r\n\r\n      } else {\r\n        // store text and make sure text is not blank\r\n        text = text.split('\\n')\r\n\r\n        // build new lines\r\n        for (var i = 0, il = text.length; i < il; i++)\r\n          this.tspan(text[i]).newLine()\r\n      }\r\n\r\n      // disable build mode and rebuild lines\r\n      return this.build(false).rebuild()\r\n    }\r\n    // Set font size\r\n  , size: function(size) {\r\n      return this.attr('font-size', size).rebuild()\r\n    }\r\n    // Set / get leading\r\n  , leading: function(value) {\r\n      // act as getter\r\n      if (value == null)\r\n        return this.dom.leading\r\n\r\n      // act as setter\r\n      this.dom.leading = new SVG.Number(value)\r\n\r\n      return this.rebuild()\r\n    }\r\n    // Get all the first level lines\r\n  , lines: function() {\r\n      // filter tspans and map them to SVG.js instances\r\n      var lines = SVG.utils.map(SVG.utils.filterSVGElements(this.node.childNodes), function(el){\r\n        return SVG.adopt(el)\r\n      })\r\n\r\n      // return an instance of SVG.set\r\n      return new SVG.Set(lines)\r\n    }\r\n    // Rebuild appearance type\r\n  , rebuild: function(rebuild) {\r\n      // store new rebuild flag if given\r\n      if (typeof rebuild == 'boolean')\r\n        this._rebuild = rebuild\r\n\r\n      // define position of all lines\r\n      if (this._rebuild) {\r\n        var self = this\r\n          , blankLineOffset = 0\r\n          , dy = this.dom.leading * new SVG.Number(this.attr('font-size'))\r\n\r\n        this.lines().each(function() {\r\n          if (this.dom.newLined) {\r\n            if (!this.textPath)\r\n              this.attr('x', self.attr('x'))\r\n\r\n            if(this.text() == '\\n') {\r\n              blankLineOffset += dy\r\n            }else{\r\n              this.attr('dy', dy + blankLineOffset)\r\n              blankLineOffset = 0\r\n            }\r\n          }\r\n        })\r\n\r\n        this.fire('rebuild')\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Enable / disable build mode\r\n  , build: function(build) {\r\n      this._build = !!build\r\n      return this\r\n    }\r\n    // overwrite method from parent to set data properly\r\n  , setData: function(o){\r\n      this.dom = o\r\n      this.dom.leading = o.leading ? new SVG.Number(o.leading.value, o.leading.unit) : new SVG.Number(1.3)\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create text element\r\n    text: function(text) {\r\n      return this.put(new SVG.Text).text(text)\r\n    }\r\n    // Create plain text element\r\n  , plain: function(text) {\r\n      return this.put(new SVG.Text).plain(text)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.Tspan = SVG.invent({\r\n  // Initialize node\r\n  create: 'tspan'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Set text content\r\n    text: function(text) {\r\n      if(text == null) return this.node.textContent + (this.dom.newLined ? '\\n' : '')\r\n\r\n      typeof text === 'function' ? text.call(this, this) : this.plain(text)\r\n\r\n      return this\r\n    }\r\n    // Shortcut dx\r\n  , dx: function(dx) {\r\n      return this.attr('dx', dx)\r\n    }\r\n    // Shortcut dy\r\n  , dy: function(dy) {\r\n      return this.attr('dy', dy)\r\n    }\r\n    // Create new line\r\n  , newLine: function() {\r\n      // fetch text parent\r\n      var t = this.parent(SVG.Text)\r\n\r\n      // mark new line\r\n      this.dom.newLined = true\r\n\r\n      // apply new hy¡n\r\n      return this.dy(t.dom.leading * t.attr('font-size')).attr('x', t.x())\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Text, SVG.Tspan, {\r\n  // Create plain text node\r\n  plain: function(text) {\r\n    // clear if build mode is disabled\r\n    if (this._build === false)\r\n      this.clear()\r\n\r\n    // create text node\r\n    this.node.appendChild(document.createTextNode(text))\r\n\r\n    return this\r\n  }\r\n  // Create a tspan\r\n, tspan: function(text) {\r\n    var node  = (this.textPath && this.textPath() || this).node\r\n      , tspan = new SVG.Tspan\r\n\r\n    // clear if build mode is disabled\r\n    if (this._build === false)\r\n      this.clear()\r\n\r\n    // add new tspan\r\n    node.appendChild(tspan.node)\r\n\r\n    return tspan.text(text)\r\n  }\r\n  // Clear all lines\r\n, clear: function() {\r\n    var node = (this.textPath && this.textPath() || this).node\r\n\r\n    // remove existing child nodes\r\n    while (node.hasChildNodes())\r\n      node.removeChild(node.lastChild)\r\n\r\n    return this\r\n  }\r\n  // Get length of text element\r\n, length: function() {\r\n    return this.node.getComputedTextLength()\r\n  }\r\n})\r\n\nSVG.TextPath = SVG.invent({\r\n  // Initialize node\r\n  create: 'textPath'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Define parent class\r\n, parent: SVG.Text\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create path for text to run on\r\n    path: function(d) {\r\n      // create textPath element\r\n      var path  = new SVG.TextPath\r\n        , track = this.doc().defs().path(d)\r\n\r\n      // move lines to textpath\r\n      while (this.node.hasChildNodes())\r\n        path.node.appendChild(this.node.firstChild)\r\n\r\n      // add textPath element as child node\r\n      this.node.appendChild(path.node)\r\n\r\n      // link textPath to path and add content\r\n      path.attr('href', '#' + track, SVG.xlink)\r\n\r\n      return this\r\n    }\r\n    // Plot path if any\r\n  , plot: function(d) {\r\n      var track = this.track()\r\n\r\n      if (track)\r\n        track.plot(d)\r\n\r\n      return this\r\n    }\r\n    // Get the path track element\r\n  , track: function() {\r\n      var path = this.textPath()\r\n\r\n      if (path)\r\n        return path.reference('href')\r\n    }\r\n    // Get the textPath child\r\n  , textPath: function() {\r\n      if (this.node.firstChild && this.node.firstChild.nodeName == 'textPath')\r\n        return SVG.adopt(this.node.firstChild)\r\n    }\r\n  }\r\n})\nSVG.Nested = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('svg'))\r\n\r\n    this.style('overflow', 'visible')\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create nested svg document\r\n    nested: function() {\r\n      return this.put(new SVG.Nested)\r\n    }\r\n  }\r\n})\nSVG.A = SVG.invent({\r\n  // Initialize node\r\n  create: 'a'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Link url\r\n    to: function(url) {\r\n      return this.attr('href', url, SVG.xlink)\r\n    }\r\n    // Link show attribute\r\n  , show: function(target) {\r\n      return this.attr('show', target, SVG.xlink)\r\n    }\r\n    // Link target attribute\r\n  , target: function(target) {\r\n      return this.attr('target', target)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a hyperlink element\r\n    link: function(url) {\r\n      return this.put(new SVG.A).to(url)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Create a hyperlink element\r\n  linkTo: function(url) {\r\n    var link = new SVG.A\r\n\r\n    if (typeof url == 'function')\r\n      url.call(link, link)\r\n    else\r\n      link.to(url)\r\n\r\n    return this.parent().put(link).put(this)\r\n  }\r\n\r\n})\nSVG.Marker = SVG.invent({\r\n  // Initialize node\r\n  create: 'marker'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Set width of element\r\n    width: function(width) {\r\n      return this.attr('markerWidth', width)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return this.attr('markerHeight', height)\r\n    }\r\n    // Set marker refX and refY\r\n  , ref: function(x, y) {\r\n      return this.attr('refX', x).attr('refY', y)\r\n    }\r\n    // Update marker\r\n  , update: function(block) {\r\n      // remove all content\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Return the fill id\r\n  , toString: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    marker: function(width, height, block) {\r\n      // Create marker element in defs\r\n      return this.defs().marker(width, height, block)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Defs, {\r\n  // Create marker\r\n  marker: function(width, height, block) {\r\n    // Set default viewbox to match the width and height, set ref to cx and cy and set orient to auto\r\n    return this.put(new SVG.Marker)\r\n      .size(width, height)\r\n      .ref(width / 2, height / 2)\r\n      .viewbox(0, 0, width, height)\r\n      .attr('orient', 'auto')\r\n      .update(block)\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, SVG.Path, {\r\n  // Create and attach markers\r\n  marker: function(marker, width, height, block) {\r\n    var attr = ['marker']\r\n\r\n    // Build attribute name\r\n    if (marker != 'all') attr.push(marker)\r\n    attr = attr.join('-')\r\n\r\n    // Set marker attribute\r\n    marker = arguments[1] instanceof SVG.Marker ?\r\n      arguments[1] :\r\n      this.doc().marker(width, height, block)\r\n\r\n    return this.attr(attr, marker)\r\n  }\r\n\r\n})\n// Define list of available attributes for stroke and fill\r\nvar sugar = {\r\n  stroke: ['color', 'width', 'opacity', 'linecap', 'linejoin', 'miterlimit', 'dasharray', 'dashoffset']\r\n, fill:   ['color', 'opacity', 'rule']\r\n, prefix: function(t, a) {\r\n    return a == 'color' ? t : t + '-' + a\r\n  }\r\n}\r\n\r\n// Add sugar for fill and stroke\r\n;['fill', 'stroke'].forEach(function(m) {\r\n  var i, extension = {}\r\n\r\n  extension[m] = function(o) {\r\n    if (typeof o == 'string' || SVG.Color.isRgb(o) || (o && typeof o.fill === 'function'))\r\n      this.attr(m, o)\r\n\r\n    else\r\n      // set all attributes from sugar.fill and sugar.stroke list\r\n      for (i = sugar[m].length - 1; i >= 0; i--)\r\n        if (o[sugar[m][i]] != null)\r\n          this.attr(sugar.prefix(m, sugar[m][i]), o[sugar[m][i]])\r\n\r\n    return this\r\n  }\r\n\r\n  SVG.extend(SVG.Element, SVG.FX, extension)\r\n\r\n})\r\n\r\nSVG.extend(SVG.Element, SVG.FX, {\r\n  // Map rotation to transform\r\n  rotate: function(d, cx, cy) {\r\n    return this.transform({ rotation: d, cx: cx, cy: cy })\r\n  }\r\n  // Map skew to transform\r\n, skew: function(x, y, cx, cy) {\r\n    return this.transform({ skewX: x, skewY: y, cx: cx, cy: cy })\r\n  }\r\n  // Map scale to transform\r\n, scale: function(x, y, cx, cy) {\r\n    return arguments.length == 1  || arguments.length == 3 ?\r\n      this.transform({ scale: x, cx: y, cy: cx }) :\r\n      this.transform({ scaleX: x, scaleY: y, cx: cx, cy: cy })\r\n  }\r\n  // Map translate to transform\r\n, translate: function(x, y) {\r\n    return this.transform({ x: x, y: y })\r\n  }\r\n  // Map flip to transform\r\n, flip: function(a, o) {\r\n    return this.transform({ flip: a, offset: o })\r\n  }\r\n  // Map matrix to transform\r\n, matrix: function(m) {\r\n    return this.attr('transform', new SVG.Matrix(m))\r\n  }\r\n  // Opacity\r\n, opacity: function(value) {\r\n    return this.attr('opacity', value)\r\n  }\r\n  // Relative move over x axis\r\n, dx: function(x) {\r\n    return this.x((this.target || this).x() + x)\r\n  }\r\n  // Relative move over y axis\r\n, dy: function(y) {\r\n    return this.y((this.target || this).y() + y)\r\n  }\r\n  // Relative move over x and y axes\r\n, dmove: function(x, y) {\r\n    return this.dx(x).dy(y)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Rect, SVG.Ellipse, SVG.Circle, SVG.Gradient, SVG.FX, {\r\n  // Add x and y radius\r\n  radius: function(x, y) {\r\n    var type = (this.target || this).type;\r\n    return type == 'radial' || type == 'circle' ?\r\n      this.attr({ 'r': new SVG.Number(x) }) :\r\n      this.rx(x).ry(y == null ? x : y)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Path, {\r\n  // Get path length\r\n  length: function() {\r\n    return this.node.getTotalLength()\r\n  }\r\n  // Get point at length\r\n, pointAt: function(length) {\r\n    return this.node.getPointAtLength(length)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Parent, SVG.Text, SVG.FX, {\r\n  // Set font\r\n  font: function(o) {\r\n    for (var k in o)\r\n      k == 'leading' ?\r\n        this.leading(o[k]) :\r\n      k == 'anchor' ?\r\n        this.attr('text-anchor', o[k]) :\r\n      k == 'size' || k == 'family' || k == 'weight' || k == 'stretch' || k == 'variant' || k == 'style' ?\r\n        this.attr('font-'+ k, o[k]) :\r\n        this.attr(k, o[k])\r\n\r\n    return this\r\n  }\r\n})\r\n\r\n\nSVG.Set = SVG.invent({\r\n  // Initialize\r\n  create: function(members) {\r\n    // Set initial state\r\n    Array.isArray(members) ? this.members = members : this.clear()\r\n  }\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add element to set\r\n    add: function() {\r\n      var i, il, elements = [].slice.call(arguments)\r\n\r\n      for (i = 0, il = elements.length; i < il; i++)\r\n        this.members.push(elements[i])\r\n\r\n      return this\r\n    }\r\n    // Remove element from set\r\n  , remove: function(element) {\r\n      var i = this.index(element)\r\n\r\n      // remove given child\r\n      if (i > -1)\r\n        this.members.splice(i, 1)\r\n\r\n      return this\r\n    }\r\n    // Iterate over all members\r\n  , each: function(block) {\r\n      for (var i = 0, il = this.members.length; i < il; i++)\r\n        block.apply(this.members[i], [i, this.members])\r\n\r\n      return this\r\n    }\r\n    // Restore to defaults\r\n  , clear: function() {\r\n      // initialize store\r\n      this.members = []\r\n\r\n      return this\r\n    }\r\n    // Get the length of a set\r\n  , length: function() {\r\n      return this.members.length\r\n    }\r\n    // Checks if a given element is present in set\r\n  , has: function(element) {\r\n      return this.index(element) >= 0\r\n    }\r\n    // retuns index of given element in set\r\n  , index: function(element) {\r\n      return this.members.indexOf(element)\r\n    }\r\n    // Get member at given index\r\n  , get: function(i) {\r\n      return this.members[i]\r\n    }\r\n    // Get first member\r\n  , first: function() {\r\n      return this.get(0)\r\n    }\r\n    // Get last member\r\n  , last: function() {\r\n      return this.get(this.members.length - 1)\r\n    }\r\n    // Default value\r\n  , valueOf: function() {\r\n      return this.members\r\n    }\r\n    // Get the bounding box of all members included or empty box if set has no items\r\n  , bbox: function(){\r\n      var box = new SVG.BBox()\r\n\r\n      // return an empty box of there are no members\r\n      if (this.members.length == 0)\r\n        return box\r\n\r\n      // get the first rbox and update the target bbox\r\n      var rbox = this.members[0].rbox()\r\n      box.x      = rbox.x\r\n      box.y      = rbox.y\r\n      box.width  = rbox.width\r\n      box.height = rbox.height\r\n\r\n      this.each(function() {\r\n        // user rbox for correct position and visual representation\r\n        box = box.merge(this.rbox())\r\n      })\r\n\r\n      return box\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a new set\r\n    set: function(members) {\r\n      return new SVG.Set(members)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.FX.Set = SVG.invent({\r\n  // Initialize node\r\n  create: function(set) {\r\n    // store reference to set\r\n    this.set = set\r\n  }\r\n\r\n})\r\n\r\n// Alias methods\r\nSVG.Set.inherit = function() {\r\n  var m\r\n    , methods = []\r\n\r\n  // gather shape methods\r\n  for(var m in SVG.Shape.prototype)\r\n    if (typeof SVG.Shape.prototype[m] == 'function' && typeof SVG.Set.prototype[m] != 'function')\r\n      methods.push(m)\r\n\r\n  // apply shape aliasses\r\n  methods.forEach(function(method) {\r\n    SVG.Set.prototype[method] = function() {\r\n      for (var i = 0, il = this.members.length; i < il; i++)\r\n        if (this.members[i] && typeof this.members[i][method] == 'function')\r\n          this.members[i][method].apply(this.members[i], arguments)\r\n\r\n      return method == 'animate' ? (this.fx || (this.fx = new SVG.FX.Set(this))) : this\r\n    }\r\n  })\r\n\r\n  // clear methods for the next round\r\n  methods = []\r\n\r\n  // gather fx methods\r\n  for(var m in SVG.FX.prototype)\r\n    if (typeof SVG.FX.prototype[m] == 'function' && typeof SVG.FX.Set.prototype[m] != 'function')\r\n      methods.push(m)\r\n\r\n  // apply fx aliasses\r\n  methods.forEach(function(method) {\r\n    SVG.FX.Set.prototype[method] = function() {\r\n      for (var i = 0, il = this.set.members.length; i < il; i++)\r\n        this.set.members[i].fx[method].apply(this.set.members[i].fx, arguments)\r\n\r\n      return this\r\n    }\r\n  })\r\n}\r\n\r\n\r\n\n\r\nSVG.extend(SVG.Element, {\r\n  // Store data values on svg nodes\r\n  data: function(a, v, r) {\r\n    if (typeof a == 'object') {\r\n      for (v in a)\r\n        this.data(v, a[v])\r\n\r\n    } else if (arguments.length < 2) {\r\n      try {\r\n        return JSON.parse(this.attr('data-' + a))\r\n      } catch(e) {\r\n        return this.attr('data-' + a)\r\n      }\r\n\r\n    } else {\r\n      this.attr(\r\n        'data-' + a\r\n      , v === null ?\r\n          null :\r\n        r === true || typeof v === 'string' || typeof v === 'number' ?\r\n          v :\r\n          JSON.stringify(v)\r\n      )\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.extend(SVG.Element, {\r\n  // Remember arbitrary data\r\n  remember: function(k, v) {\r\n    // remember every item in an object individually\r\n    if (typeof arguments[0] == 'object')\r\n      for (var v in k)\r\n        this.remember(v, k[v])\r\n\r\n    // retrieve memory\r\n    else if (arguments.length == 1)\r\n      return this.memory()[k]\r\n\r\n    // store memory\r\n    else\r\n      this.memory()[k] = v\r\n\r\n    return this\r\n  }\r\n\r\n  // Erase a given memory\r\n, forget: function() {\r\n    if (arguments.length == 0)\r\n      this._memory = {}\r\n    else\r\n      for (var i = arguments.length - 1; i >= 0; i--)\r\n        delete this.memory()[arguments[i]]\r\n\r\n    return this\r\n  }\r\n\r\n  // Initialize or return local memory object\r\n, memory: function() {\r\n    return this._memory || (this._memory = {})\r\n  }\r\n\r\n})\n// Method for getting an element by id\r\nSVG.get = function(id) {\r\n  var node = document.getElementById(idFromReference(id) || id)\r\n  return SVG.adopt(node)\r\n}\r\n\r\n// Select elements by query string\r\nSVG.select = function(query, parent) {\r\n  return new SVG.Set(\r\n    SVG.utils.map((parent || document).querySelectorAll(query), function(node) {\r\n      return SVG.adopt(node)\r\n    })\r\n  )\r\n}\r\n\r\nSVG.extend(SVG.Parent, {\r\n  // Scoped select method\r\n  select: function(query) {\r\n    return SVG.select(query, this.node)\r\n  }\r\n\r\n})\n// tests if a given selector matches an element\r\nfunction matches(el, selector) {\r\n  return (el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector).call(el, selector);\r\n}\r\n\r\n// Convert dash-separated-string to camelCase\r\nfunction camelCase(s) {\r\n  return s.toLowerCase().replace(/-(.)/g, function(m, g) {\r\n    return g.toUpperCase()\r\n  })\r\n}\r\n\r\n// Capitalize first letter of a string\r\nfunction capitalize(s) {\r\n  return s.charAt(0).toUpperCase() + s.slice(1)\r\n}\r\n\r\n// Ensure to six-based hex\r\nfunction fullHex(hex) {\r\n  return hex.length == 4 ?\r\n    [ '#',\r\n      hex.substring(1, 2), hex.substring(1, 2)\r\n    , hex.substring(2, 3), hex.substring(2, 3)\r\n    , hex.substring(3, 4), hex.substring(3, 4)\r\n    ].join('') : hex\r\n}\r\n\r\n// Component to hex value\r\nfunction compToHex(comp) {\r\n  var hex = comp.toString(16)\r\n  return hex.length == 1 ? '0' + hex : hex\r\n}\r\n\r\n// Calculate proportional width and height values when necessary\r\nfunction proportionalSize(box, width, height) {\r\n  if (height == null)\r\n    height = box.height / box.width * width\r\n  else if (width == null)\r\n    width = box.width / box.height * height\r\n\r\n  return {\r\n    width:  width\r\n  , height: height\r\n  }\r\n}\r\n\r\n// Delta transform point\r\nfunction deltaTransformPoint(matrix, x, y) {\r\n  return {\r\n    x: x * matrix.a + y * matrix.c + 0\r\n  , y: x * matrix.b + y * matrix.d + 0\r\n  }\r\n}\r\n\r\n// Map matrix array to object\r\nfunction arrayToMatrix(a) {\r\n  return { a: a[0], b: a[1], c: a[2], d: a[3], e: a[4], f: a[5] }\r\n}\r\n\r\n// Parse matrix if required\r\nfunction parseMatrix(matrix) {\r\n  if (!(matrix instanceof SVG.Matrix))\r\n    matrix = new SVG.Matrix(matrix)\r\n\r\n  return matrix\r\n}\r\n\r\n// Add centre point to transform object\r\nfunction ensureCentre(o, target) {\r\n  o.cx = o.cx == null ? target.bbox().cx : o.cx\r\n  o.cy = o.cy == null ? target.bbox().cy : o.cy\r\n}\r\n\r\n// Convert string to matrix\r\nfunction stringToMatrix(source) {\r\n  // remove matrix wrapper and split to individual numbers\r\n  source = source\r\n    .replace(SVG.regex.whitespace, '')\r\n    .replace(SVG.regex.matrix, '')\r\n    .split(SVG.regex.matrixElements)\r\n\r\n  // convert string values to floats and convert to a matrix-formatted object\r\n  return arrayToMatrix(\r\n    SVG.utils.map(source, function(n) {\r\n      return parseFloat(n)\r\n    })\r\n  )\r\n}\r\n\r\n// Calculate position according to from and to\r\nfunction at(o, pos) {\r\n  // number recalculation (don't bother converting to SVG.Number for performance reasons)\r\n  return typeof o.from == 'number' ?\r\n    o.from + (o.to - o.from) * pos :\r\n\r\n  // instance recalculation\r\n  o instanceof SVG.Color || o instanceof SVG.Number || o instanceof SVG.Matrix ? o.at(pos) :\r\n\r\n  // for all other values wait until pos has reached 1 to return the final value\r\n  pos < 1 ? o.from : o.to\r\n}\r\n\r\n// PathArray Helpers\r\nfunction arrayToString(a) {\r\n  for (var i = 0, il = a.length, s = ''; i < il; i++) {\r\n    s += a[i][0]\r\n\r\n    if (a[i][1] != null) {\r\n      s += a[i][1]\r\n\r\n      if (a[i][2] != null) {\r\n        s += ' '\r\n        s += a[i][2]\r\n\r\n        if (a[i][3] != null) {\r\n          s += ' '\r\n          s += a[i][3]\r\n          s += ' '\r\n          s += a[i][4]\r\n\r\n          if (a[i][5] != null) {\r\n            s += ' '\r\n            s += a[i][5]\r\n            s += ' '\r\n            s += a[i][6]\r\n\r\n            if (a[i][7] != null) {\r\n              s += ' '\r\n              s += a[i][7]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return s + ' '\r\n}\r\n\r\n// Deep new id assignment\r\nfunction assignNewId(node) {\r\n  // do the same for SVG child nodes as well\r\n  for (var i = node.childNodes.length - 1; i >= 0; i--)\r\n    if (node.childNodes[i] instanceof SVGElement)\r\n      assignNewId(node.childNodes[i])\r\n\r\n  return SVG.adopt(node).id(SVG.eid(node.nodeName))\r\n}\r\n\r\n// Add more bounding box properties\r\nfunction fullBox(b) {\r\n  if (b.x == null) {\r\n    b.x      = 0\r\n    b.y      = 0\r\n    b.width  = 0\r\n    b.height = 0\r\n  }\r\n\r\n  b.w  = b.width\r\n  b.h  = b.height\r\n  b.x2 = b.x + b.width\r\n  b.y2 = b.y + b.height\r\n  b.cx = b.x + b.width / 2\r\n  b.cy = b.y + b.height / 2\r\n\r\n  return b\r\n}\r\n\r\n// Get id from reference string\r\nfunction idFromReference(url) {\r\n  var m = url.toString().match(SVG.regex.reference)\r\n\r\n  if (m) return m[1]\r\n}\r\n\r\n// Create matrix array for looping\r\nvar abcdef = 'abcdef'.split('')\n// Add CustomEvent to IE9 and IE10\r\nif (typeof CustomEvent !== 'function') {\r\n  // Code from: https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\r\n  var CustomEvent = function(event, options) {\r\n    options = options || { bubbles: false, cancelable: false, detail: undefined }\r\n    var e = document.createEvent('CustomEvent')\r\n    e.initCustomEvent(event, options.bubbles, options.cancelable, options.detail)\r\n    return e\r\n  }\r\n\r\n  CustomEvent.prototype = window.Event.prototype\r\n\r\n  window.CustomEvent = CustomEvent\r\n}\r\n\r\n// requestAnimationFrame / cancelAnimationFrame Polyfill with fallback based on Paul Irish\r\n(function(w) {\r\n  var lastTime = 0\r\n  var vendors = ['moz', 'webkit']\r\n\r\n  for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n    w.requestAnimationFrame = w[vendors[x] + 'RequestAnimationFrame']\r\n    w.cancelAnimationFrame  = w[vendors[x] + 'CancelAnimationFrame'] ||\r\n                              w[vendors[x] + 'CancelRequestAnimationFrame']\r\n  }\r\n\r\n  w.requestAnimationFrame = w.requestAnimationFrame ||\r\n    function(callback) {\r\n      var currTime = new Date().getTime()\r\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime))\r\n\r\n      var id = w.setTimeout(function() {\r\n        callback(currTime + timeToCall)\r\n      }, timeToCall)\r\n\r\n      lastTime = currTime + timeToCall\r\n      return id\r\n    }\r\n\r\n  w.cancelAnimationFrame = w.cancelAnimationFrame || w.clearTimeout;\r\n\r\n}(window))\r\n\r\nreturn SVG\r\n\r\n}));\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/svg.js/dist/svg.js\n ** module id = 3\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/svg.js/dist/svg.js?");

/***/ }
/******/ ]);